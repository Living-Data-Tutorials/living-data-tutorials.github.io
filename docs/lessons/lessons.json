[
  {
    "path": "lessons/2022-08-26-species-richness-rank-abundance-curves/",
    "title": "So Many Species, So Little Time: Calculating and Visualizing Biodiversity",
    "description": "We present a number of common metrics for quantifying biodiversity, their meaning, and how they can be visualized with the help of a Rank-Abundance curves",
    "author": [
      {
        "name": "Jory Griffith",
        "url": {}
      },
      {
        "name": "Egor Katkov",
        "url": {}
      },
      {
        "name": "Maggie Slein",
        "url": {}
      }
    ],
    "date": "2022-08-26",
    "categories": [],
    "contents": "\n\nContents\nTutorial Overview\nLearning objectives\nWhy biodiversity matters\nTypes of data typically collected\nReal-world biodiversity data\nData collection and structure\nDownloading and tidying the data\n\nQuantifying biodiversity with real data\nWays to calculate diversity\nVisualizing species diversity\nRank abundance curves with Turkey lakes invertebrate data\n\ncodyn tutorial\nLoad Data and Packages\nUsing the codyn package to analyze diversity data over time\nUsing community_structure()\nUsing community_diversity()\nActivity\n\nReferences\n\nTutorial Overview\nBiodiversity is a hot topic in the fact of unprecedented global change in the 21st century. With a publicly available dataset, from the Turkey Lakes Watershed, we demonstrate how to quantify biodiversity quantitatively and visually using R.\nLearning objectives\nUtilizing historical data from a freshwater lake ecosystem, by the end of this tutorial you will be able to:\nIdentify, calculate, and implement commonly used metrics to quantify biodiversity\nUnderstand and create figures uses to display biodiversity data\nApply this concepts to other aspects of the dataset used in this tutorial\n\n\nShow code\n\nlibrary(leaflet)\n\nprefix = 'https://api.gbif.org/v2/map/occurrence/density/{z}/{x}/{y}@1x.png?'\nstyle = 'style=purpleYellow.point'\ntile = paste0(prefix,style)\n\nleaflet() %>%\nsetView(lng = 20, lat = 20, zoom = 01) %>%\naddTiles() %>%  \naddTiles(urlTemplate=tile)\n\n\n\n\nFigure 1: Occurrences of species across the globe from the Global Biodiversity Information Facility (GBIF)\n\n\n\nEcologists are often interested in the effects of perturbations (e.g. fires, logging, flooding or pollution) on biodiversity, which can yield information and context for ecosystem health.\nHowever, boiling biodiversity down to a single metric can be difficult and incomplete depending on the goal.\nWith the help of the Turkey lake dataset of benthic invertebrates, we will present you with a number of common metrics to assess biodiversity, their meaning, and how they can be visualized with the help of Rank-Abundance curves.\nYou will then have the option to learn to calculate biodiversity metrics yourself using an R package called codyn.\nWhy biodiversity matters\n\n\nShow code\n\nknitr::include_graphics(\"biodiv_scheme.png\")\n\n\n\nFigure 2: Importance of biodiversity for downstream effects on ecosystem success, structure, and function. Source: Figure 2, Loureau et al 2001, DOI: 10.1126/science.1064088\n\n\n\nIn an ever-changing world, we are often concerned with how organisms will be able to cope with disturbances and increasingly, global climate change.\nBiodiversity is the variety of life at all levels, from genes to ecosystems.\nNot only is biodiversity important for ecosystems to function properly, it is also an important buffer to withstanding changing environments. When there is high biodiversity, there is a higher chance of some organisms surviving ecosystems that are changing due to disturbance or climate change.\nBiodiversity therefore increases the resiliency of these ecosystems and the likelihood that they will be able to persist beyond this change.\nTypes of data typically collected\nBiodiversity is a broad term, and can be difficult to quantify. Biologists have created several standard measures of biodiversity that convey different information about ecosystems and the species living there.\n\n\nShow code\n\nknitr::include_graphics(\"species_scheme.png\")\n\n\n\nFigure 3: Schematic of freshwater lake ecosystem demonstrating the different information biologists to collect to understand biodiversity\n\n\n\nOften times, biologists interested in collecting biodiversity data collect a standard set of responses. These often include:\nThe different kinds of species in a given area or environment\nThe number of individuals of each species (abundance)\nInformation about the area itself (i.e. habitat type, weather conditions, etc.)\nIf the work involves an setting up an experiment, collecting the control vs. experimental groups as well as metrics for replication and statistical power\nThe time frame over which the data were collected\nReal-world biodiversity data\nThe Turkey Lakes watershed is located in Ontario, Canada, approximately 50 km North of Sault Ste. Marie.\nIt is 10 km2 in area and contains a chain of 4 lakes. The Turkey Lakes Watershed Study (see map) is an initiative by several agencies of the government of Canada, initially designed to study the effects of acid rain on forest ecosystems.\nFrom 1995 to 2009, scientists collected, identified and counted benthic invertebrates from various stream beds around the Turkey Lakes catchment.\n\n\nShow code\n\npacman::p_load(leaflet)\n\nleaflet() %>%\n  addTiles() %>%  # Add default OpenStreetMap map tiles\n  addMarkers(lng=-84.4110, lat=47.0515, popup=\"Turkey Lakes\") %>%\n  setView(lng=-84.4110, lat=47.0515, zoom=2)\n\n\n\n\nFigure 4: Interactive map of the Turkey Lakes study site\n\n\n\nBenthic invertebrates are small, often microscopic organisms (see Fig. 5), but form an important link between aquatic and terrestrial habitats.\nThey can decompose terrestrial matter such as leaves, or consume periphyton (algae and cyanobacteria) growing on rocks within their streams.\nBenthic invertebrates can be a food source for aquatic animals, like small fish, or terrestrial animals such as birds.\nAn experiment was conducted in 1997 where certain sampling sites experienced different levels of logging intensity.\nDue to their interaction with the terrestrial realm, we can hypothesize that the biodiversity of benthic invertebrate communities might be affected by logging.\n\n\nShow code\n\nknitr::include_graphics(\"benthicmacroinvertebrates_g.carter_noaa600px.jpg\")\n\n\n\nFigure 5: Various benthic macroinvertebrates under a stereo microscope. Source: G. Carter via NOAA/GLERL\n\n\n\nData collection and structure\nThese data are from the Turkey Lakes watershed experiment.\nThis dataset contains the abundances of benthic invertebrate species measured in the May and June from 1995 to 2001.\nThey recorded the type and number of invertebrates in a catchment area of the stream, with 10 replicate sites per catchment.\nThese forests next to these streams were logged in 1997 with varying harvest intensities, with low, medium, and high intensity harvest and a control stream with no forest harvest.\nFirst, we will subset the data, clean an process it in order to visualize and compare Rank-Abundance curves (RACs).\nLater in the tutorial, we will using the subsetted data with the codyn package to analyze the diversity of these benthic invertebrates over time.\nDownloading and tidying the data\nThe data “TWL_invertebrateDensity.csv” from the Government of Canada “Open Government” Portal on the “Turkey Lakes Watershed” page.\nWe can download and save the data as a data.frame object using the following command:\n\n\ndf.read = read.csv(file=\"https://ftp.maps.canada.ca/pub//nrcan_rncan/Forests_Foret/TLW/TLW_invertebrateDensity.csv\")\n\n\nFirst, in order to quantify biodiversity, we will convert the species densities reported in the dataset to the raw counts (i.e. abundances) to obtain whole numbers of individuals.\nTo do this, it is helpful to transform the “wide” format data.frame (where each species is a column) to “long” format, where species names are all found in a single column using the tidyr::pivot_longer() function.\n\n\nlibrary(dplyr)\ndf.count = \n  df.read %>% \n  # Convert from wide to long format to simplify the operation\n  tidyr::pivot_longer( \n    \"Aeshna\":\"Trichoptera\", \n    names_to = \"Species\", \n    values_to = \"Density\" ) %>%\n  mutate(\n    # Densities to counts\n    Count = Density * 0.33, \n    Count = tidyr::replace_na(Count, 0) # Replace NAs with 0.\n    )\n\n\nQuantifying biodiversity with real data\nTo explore these different diversity metrics and how they are calculated, we have subsetted data from the Turkey Lakes dataset across 4 years and 7 unique species to look at how diversity changes over time.\nWays to calculate diversity\nThere are several different ways to analyse and understand changes in community composition, or the relative abundances of all taxa in a community. Each of these metrics allow us to look at different aspects of the biodiversity data we collect.\nSpecies richness quantifies the number of different species in a community.\nThe Shannon-Weiner Index estimates species diversity by taking into account the number of species living in a habitat (richness) and their relative abundance (evenness).\nSimpson’s Diversity Index also takes into account species richness and evenness, but puts more emphasis on rare species.\nThe Evenness Index assesses the evenness of the abundances of each species.\n\nSpecies richness\nPerhaps the simplest measure of biodiversity is species richness (\\(S\\)).\nThe equation for species richness is:\n\\(S = \\sum_{i=1}^{S}p_i^o\\)\n\\(p_i^o\\) represents the proportion of individuals of species \\(i\\), taking the sum across each of these species\nStep 1: Count the number of unique species recorded in that year.\nThen you can look at how the number of different species in a community changes over time.\nInterpretation: A higher number means there are more species, and therefore species richness is higher.\n\n\nShow code\n\n#loading necessary libraries\npacman::p_load(kableExtra)\nrichness_table <- df.count %>%\n  # Avoid counting species that had zero observations\n  filter(Count > 0,\n         year %in% c(1995, 1997, 2001, 2009)) %>%\n  group_by(year) %>%\n  summarise(richness=length(unique(Species)), \n            # Check how many catchments were sampled in each year\n            catchments = length(unique(catchment)))\n#Nice looking kable\nkable(richness_table, col.names=c(\"Year\", \"Richness\", \"Catchments Sampled\"), align=\"c\")%>%\n  kable_classic(full_width = F, html_font = \"Cambria\")\n\n\nYear\n\n\nRichness\n\n\nCatchments Sampled\n\n\n1995\n\n\n48\n\n\n6\n\n\n1997\n\n\n51\n\n\n9\n\n\n2001\n\n\n65\n\n\n9\n\n\n2009\n\n\n50\n\n\n3\n\n\nWe can see in this table that across years, the number of species in the same area fluctuated.\nHowever, this metric is particularly sensitive to changes in sampling efforts because additional sampling is likely to uncover additional, rare species.\nAs a result, the only reliable comparison is between 1997 and 2001, which suggests that species richness increased following the logging operations of 1997.\nHowever, this does not tell us anything about how the abundances of different species changed.\nShannon-Wiener Index (H’)\nAnother metric we can use to analyze biodiversity is the Shannon-Wiener Index (\\(H\\)),\nwhich indexes across the sum of all relative proportions of species richness’s with an additional logarithmic transformation.\nThis equation takes into account both the number of species in a specific area (richness) and relative abundances (evenness).\nThe equation for the Shannon-Weiner Index is:\n\\[\nH' = - \\sum_{i=1}^{S}p_i~\\ln(p_i)\n\\]\nStep 1: Calculate \\(p_i\\) for each species, which is the proportion of the \\(i\\)th individual in the\n\\[\np_i = n_i/N\n\\]\nWhere \\(n_i\\) is the number of individuals of species \\(i\\) and \\(N\\) is the total number of individuals in the community.\nStep 2: Multiply the proportion of each species (\\(p_i\\)) by the natural logarithm of the proportion (\\(\\ln(p_i)\\))\nStep 3: Sum each of these values for each species.\nStep 4: Multiply the sum by -1.\nInterpretation: The minimum value of the Shannon’s diversity index is 0, which means that there is no diversity (i.e. only one species is found in that habitat).\nThe values increase as the number of species increase, and is maximized at a given number of species when is an equal abundance of each species.\n\n\nShow code\n\nshannon <- \n  df.count %>%\n  filter(year %in% c(1995, 1997, 2001, 2009)) %>%\n  # Summarise over catchments and replicate sites\n  group_by(year, Species) %>%\n  summarise(TotalCount=sum(Count)) %>% \n  mutate(\n    # Step 1\n    # Note that sum(TotalCounts) calculates the \"N\"\n    # for each year separately because the data.frame \n    # was previously grouped by year using the\n    # function group_by().\n    pi = TotalCount/sum(TotalCount), \n    # Step 2\n    pi_ln_pi = pi*log(pi)) %>%       \n  # Steps 3 & 4. \n  # Note that na.rm = T because for species abundances = 0, \n  # p_i * log(p_i) = 0 * -Inf = NaN\n  summarise(shannon = -1*sum(pi_ln_pi, na.rm=T))\n\nkable(shannon, col.names=c(\"Year\", \"Shannon's Index\"), align=\"c\")%>%\n  kable_classic(full_width = F, html_font = \"Cambria\")\n\n\nYear\n\n\nShannon’s Index\n\n\n1995\n\n\n2.407170\n\n\n1997\n\n\n2.081374\n\n\n2001\n\n\n2.448311\n\n\n2009\n\n\n2.540719\n\n\nWe can see that the Shannon diversity changes over time, with the lowest value being the year of the forest harvesting operations (1997).\nHowever, it seems that biodiversity quickly recovers in the years following the harvesting.\nSimpson’s Index (D)\nAnother metric we can use to analyse biodiversity in the Simpson’s index (\\(D\\)) which indexes across the sum of all relative proportions of species’s richness with an additional square power transformation. Though very similar to the calculation in the Shannon-Wiener Index, the Simpson index is more focused on dominance of species as it highlights the proportion of species in a sample.\nThe equation for Simpson’s diversity is:\n\\[D = 1-\\sum_{i=1}^{S} \\frac {n_i(n_i-1)}{N(N-1)}\\]\nWhere \\(n_i\\) is the number of individuals of species \\(i\\) and \\(N\\) is the total number of individuals in the community.\nStep 1: Multiply the number of individuals of a given species (\\(n_i\\)) by (\\(n_i-1\\)).\nStep 2 Multiply the total number of individuals in the community (\\(N\\)) by (\\(N-1\\)).\nStep 3: Divide the number from step 1 by the number from step 2.\nStep 4: Once you have the numbers from step 3 for each species in the community, sum all of these together and substract from 1.\nInterpretation: The higher the value of \\(D\\), the greater the diversity in the community.\nAn index close to 1 means that there are several species in the community, and the population proportion of species is even.\nOn the other hand, \\(D=0\\) indicates a single-species community\n\n\nShow code\n\nsimpson <-  df.count %>%\n  filter(year %in% c(1995, 1997, 2001, 2009)) %>%\n  # Summarise over catchments and replicate sites\n  group_by(year, Species) %>%\n  summarise(TotalCount=sum(Count)) %>%\n  mutate(\n    # Step 1\n    num = TotalCount*(TotalCount - 1 ),\n    # Step 2 (Note: data.frame grouped by year)\n    denom = sum(TotalCount)*(sum(TotalCount)-1), \n    # Step 3\n    frac = num/denom) %>% \n  # Step 4\n  summarise(simpson = 1 - sum(frac))\n\nkable(simpson, col.names=c(\"Year\", \"Simpson's Index\"), align=\"c\")%>%\n  kable_classic(full_width = F, html_font = \"Cambria\")\n\n\nYear\n\n\nSimpson’s Index\n\n\n1995\n\n\n0.8372515\n\n\n1997\n\n\n0.7452368\n\n\n2001\n\n\n0.8423991\n\n\n2009\n\n\n0.8757629\n\n\nSimilarly to the Shannon-Weiner index, biodiversity dropped in 1997, but had recovered by 2001.\nEvenness Index (E)\nAdditionally, we can think about the evenness of species across a given area.\nEvenness is a type of metric for assessing species dominance.\nIf evenness is high, it means most species are of equal dominance.\nIf evenness if low, it means some species are more dominant (i.e. have higher abundance) than others.\nEvenness is maximized when all species have equal abundances.\nMultiple metrics can be used to measure evenness, here we show an example of “Shannon-Wiener” evenness, however a similar approach can be used for simpson evenness.\nThe equation for “Shannon-Wiener” evenness is:\n\\(E = H / ln(S)\\)\nStep 1: Divide the value of the Shannon-Wiener index (\\(H\\)) by the species richness (\\(S\\)).\nInterpretation: Values closer to one signify more evenness and values closer to 0 signify lower evenness.\n\n\nShow code\n\n# Combine previously calculated species richness \n#  and shannon index tables\nevenness = \n  left_join(richness_table, shannon) %>%\n  # Step 1\n  mutate(evenness = shannon/log(richness)) %>%\n  select(year, evenness)\n\nkable(evenness, col.names=c(\"Year\", \"Evenness\"), align=\"c\")%>%\n  kable_classic(full_width = F, html_font = \"Cambria\")\n\n\nYear\n\n\nEvenness\n\n\n1995\n\n\n0.6218149\n\n\n1997\n\n\n0.5293657\n\n\n2001\n\n\n0.5865078\n\n\n2009\n\n\n0.6494644\n\n\nAs with previous biodiversity metrics, we find that evenness is lowest in 1997, and recovers in the following years.\n\nVisualizing species diversity\nApart from calculating biodiversity using the metrics above, visualizing differences using graphs is another tool we have. One way to visualize biodiversity data is to make a Rank-Abundance Curve (RAC). On the y-axis we have the species (numbered), and on the y axis we have the abundance. The plots are organized from high to low abundance. Using RACs, we can visualize the change in relative abundance and species dominance over time.\nHere, we have selected 7 species across 2 years from the Turkey Lakes dataset to make a simple RAC.\n\n\nShow code\n\n#loading necessary libraries\npacman::p_load(tidyverse, patchwork)\n#creating a subset of the full data with just 6 species, across 4 years\nsubset <- df.count %>%\n  filter(Species %in% c(\"Chironomidae\", \"Prosimulium\", \"Baetis\", \"Heterocloeon\", \"Chelifera\", \"Leuctra\")) %>%\n  filter(year %in% c(1995, 1997, 2001, 2009)) %>%\n  group_by(year, Species) %>%\n  summarise(sum=sum(Count))\n\n#2007\na<- subset %>%\n  filter(year==1995) %>%\nggplot(aes(x=reorder(Species, -sum), y=sum, shape=Species, colour=Species))+\n  geom_point(size=4)+\n  scale_colour_viridis_d()+\n  ggtitle(\"1995\")+\n  labs(x=\"Species\", y=\"Abundance\")+\n  theme_classic()+\n  #theme(legend.position=\"none\")+\n  labs(x=\"Species\", y=\"Abundance\", color=\"Species\")\n\n#2007\nb<- subset %>%\n  filter(year==2001) %>%\nggplot(aes(x=reorder(Species, -sum), y=sum, shape=Species, colour=Species))+\n  geom_point(size=4)+\n  scale_colour_viridis_d()+\n  ggtitle(\"2001\")+\n  labs(x=\"Species\", y=\"Abundance\")+\n  theme_classic()+\n  #theme(legend.position=\"none\")+\n  labs(x=\"Species\", y=\"Abundance\", color=\"Species\")\n\na / b\n\n\n\nFigure 6: Simple RAC with 6 species from the Turkey Lakes dataset, with counts from 1995 and 2001. Colour and shape indicate a unique species, with y axis representing abundance.\n\n\n\nWe can see here between 1995 and 2001 in our benthic community, there were small differences in absolute counts, with the most abundant species (Chrironomidae) decreasing ~5000 in abundance of individuals, but still remaining the most abundance species overall across both years. However, Baetis was the 2nd most abundant species in 1995, but dropped to 5th most abundant by 2001.\nRank abundance curves with Turkey lakes invertebrate data\n\nAdditional data wrangling\nThe dataset spans multiple years, months, and catchments within the Turkey lakes watershed and includes densities for a wide array of invertebrate species across multiple replicate sites. You can visualize Rank Abundances for any subset of the dataset using the following Shiny App.\nUsing information obtained from the metadata of this dataset, we can add some interesting details to the data (for at least a few catchments and years). For the purposes of this portion of the tutorial, we also select a different subset of the data to work with.\n\n\n## Different catchments had different logging intensities\ntreatment = tibble(catchment =             c(\"34M\",  \"34U\",    \"34L\"),\n                   `Logging Intensity`   = c(\"none\", \"medium\", \"high\"))\n\n## Logging happened in 1997\nyearAnnot = tibble(\n  year = 1995:2001,\n  trt  = c( rep(\"pre-logging\", 2), \"logging\", rep(\"post-logging\", 4))\n)\n\ndf.subset =  \n  df.count %>%\n    right_join(treatment) %>%\n    right_join(yearAnnot) %>%\n  filter(month %in% c(\"june\", \"may\"))\n\n\nThen, we will clean up the data by removing any species whose count is zero across all the different sites and years.\n\n\n## Find species that have 0 abundance across all sites and years.\nNA_sp = df.subset %>%\n  group_by(Species) %>%\n  summarize(Count = sum(Count, na.rm=T)) %>%\n  filter(Count==0) %>%\n  select(Species)\n\n## Remove those species from the dataset\ndf.clean = df.subset %>% \n  anti_join(NA_sp)\n\n\nSummarise Data\nLet’s start by looking at catchment “34L”, which saw high levels of deforestation in June of 1998, the year following the logging event.\n\n\ndf.subset1 <- df.subset %>% \n  filter(catchment == \"34L\", \n         year      == 1998,\n         month     == \"june\")\n\n\nNext, we can sum the count data over all the replicate sites within the catchment to obtain a total count within the catchment.\n\n\ndf.raw.summary1 = \n  df.subset1 %>%\n  group_by(Species) %>%\n  summarise(\n    TotalCount = sum(Count))\n\n\nThen, we order the species from most abundant to least abundant.\n\n\ndf.ordered.summary1 = \n  df.raw.summary1 %>%\n  arrange(desc(TotalCount)) \n\n\nFinally, we assign a rank to the species (rank 1 = the most abundant species) and filter out any species which are not actually present in this catchment.\n\n\ndf.summary1 = \n  df.ordered.summary1 %>%            \n  mutate( Rank = seq_along(Species) ) %>%  \n  # Keep only species with abundances greater than zero.\n  filter(TotalCount > 0)                   \n\n\nPlot the data\nWe make a plot to represent the data. Note that we need to use the stats::reorder() function to get the species on the x-axis in the correct order:\n\n\nShow code\n\nlibrary(ggplot2)\nplot1 = \n  df.summary1 %>%\n  ggplot(aes(x=reorder(Species, -1*TotalCount), \n             y=TotalCount)) + \n  geom_col() +\n  xlab(\"Taxon\") +\n  ylab(\"Total count (sum of replicates)\") + \n  theme_classic(base_size=16) +  # Aesthetic\n  theme(axis.text.x = element_text(face=\"italic\", size=9, angle=90)) # Use italics for species names\nplot1\n\n\n\nFigure 7: Abundance of species in catchment 34L of the Turkey Lakes in June 1998\n\n\n\nAs you can see, Rank-Abundance Curves (RACs) in nature are rarely as evenly distributed as the simulated data.\nThere is often few highly abundant species and many very rare species.\nAs a result, a log transform is frequently applied to the y-axis.\nAdditionally, when analyzing RACs, the focus is on the shape of the curve, not on the species names.\nAs a result, we can substitute the species name with it’s rank.\nThis is where the term rank-abundance comes from.\nThis also has the added benefit of simplifying the code:\n\n\nShow code\n\ndf.summary1 %>%\n  ggplot(aes(x=Rank, y=TotalCount)) + \n  geom_col() +\n  xlab(\"Rank\") +\n  scale_y_log10() + \n  ylab(\"log Total count\") + \n  theme_classic(base_size=16) # Aesthetic\n\n\n\nFigure 8: Abundance of species in catchment 34L of the Turkey Lakes in June 1998\n\n\n\nComparing RACs\nInstead of using bars to represent abundances, we can simply use lines to trace the distribution.\nThis allows us to compare multiple distributions.\nFirst, let’s compare the different replicates (i.e., sites) within a single catchment area (34L).\n\n\nShow code\n\ndf.subset1 %>%\n  group_by(replicate) %>% \n  # Order by rank, for each catchment (.by_group=T)\n  arrange(desc(Count), .by_group = T) %>%\n  mutate( Rank = seq_along(Species) ) %>%  \n  # Keep only species with abundances greater than zero.\n  filter(Count > 0) %>%\n  # Line Plot\n  ggplot(aes(x=Rank, y=Count, color=as.factor(replicate))) + \n    xlab(\"Rank\") + \n    ylab(\"log Count\") + \n    geom_line(size=2) + \n    scale_y_log10() +\n    # Some aesthetic choices:\n    theme_classic(base_size=16) +\n    scale_color_brewer(name = \"Site\", palette = \"Paired\")\n\n\n\nFigure 9: Comparison of RAC changes across different sites (replicate)\n\n\n\nNotice that there is some variation in the shape and the “eveness” (i.e., slope) of the different RACs.\nFurthermore, the highest rank in the summary bar plot was 40, whereas the single site with the highest rank has only 29 species.\nThis demonstrates that the more we sample, the more rare species we can find.\nAlternatively, we can compare RACs from three different catchments, each of which has a different logging intensity.\nNote that all catchments have 10 replicate sites, which allows us to sum across replicates.\nAlso note that differences in sampling can affect the shape of the RACs, which means that one has to be careful to account for sampling effort when comparing RACs from differnt studies.\n\n\nShow code\n\nplot = \n  df.subset %>% \n  # Subset\n  filter( year      == 1998,\n          month     == \"june\") %>%\n  # Summarise across replicates\n  group_by(`Logging Intensity`, catchment, Species) %>%\n  summarise(TotalCount=sum(Count)) %>% \n  # Order by rank, for each catchment (.by_group=T)\n  group_by(catchment, `Logging Intensity`) %>%\n    arrange(desc(TotalCount), .by_group = T) %>%\n    mutate( Rank = seq_along(Species) ) %>%\n  # Keep only species with abundances greater than zero.\n  filter(TotalCount > 0) %>%\n  # Line Plot\n  ggplot(aes(x=Rank, y=TotalCount, color=`Logging Intensity`)) + \n    xlab(\"Rank\") + \n    ylab(\"log Total count\") + \n    geom_line(aes(size=`Logging Intensity`)) + \n    scale_y_log10() +\n    # Some aesthetic choices:\n    scale_size_manual(values=c(2.5, 2, 1.5)) +\n    theme_classic(base_size=16) +\n    scale_color_brewer(palette=\"Dark2\") + \n    theme(legend.position = c(0.87,0.87))\nplot\n\n\n\nFigure 10: Comparison of RAC changes across sites with different logging intensity\n\n\n\nNotice that we can rapidly see that the catchment with high intensity logging had the highest species richness (highest maximum rank).\nThe catchment that we logged with medium intensity also appears to have a less “even” RAC compared to the other two.\nIn other words, the slope is slightly steeper for the “medium” intensity site than for the “high” and “none” (no logging) catchments.\nOf course, many more sites over several years need to be compared in order to make any generalizable claims about the effects of logging on invertebrate biodiversity in the Turkey Lakes area.\nFurthermore, several models have been developed to understand rank-abundance curves (e.g. log-normal, broken stick model).\nThe radfit function from the vegan R package allows fitting of these different curve models.\n\ncodyn tutorial\nNow that we have calculated different biodiversity metrics and rank abundance curves by hand, we can also use existing functions in the R packahe codyn to quantify and visualizing changes in biodiversity with the Turkey Lakes datset.\nLoad Data and Packages\nWe will be using the codyn package for this tutorial. We will also use ggplot2 and dplyr for plotting and cleaning. First, we need to load these packages.\n\n\nlibrary(ggplot2)\nlibrary(codyn)\nlibrary(dplyr)\n\n\nLoad, subset and clean the data (see “Rank abundance curves with Turkey lakes invertebrate data” above for details) :\n\n\ndata  <- \n  read.csv(file=\"https://ftp.maps.canada.ca/pub//nrcan_rncan/Forests_Foret/TLW/TLW_invertebrateDensity.csv\") %>%\n  pivot_longer( \"Aeshna\":\"Trichoptera\", names_to = \"species\", values_to = \"density\") %>%\n  mutate(abundance = density * 0.33, \n         treatment = case_when(catchment %in% c(\"33\") ~ \"low\", \n                               catchment %in% c(\"34U\") ~ \"medium\", \n                               catchment %in% c(\"34L\") ~ \"high\", \n                               catchment %in% c(\"34M\") ~ \"control\", \n                               TRUE ~ \"natural\"), \n         date_yr_m = zoo::as.yearmon(paste0(year,month), \"%Y %b\")) %>%\n  drop_na(abundance) %>% \n  filter(year >= 1995, \n         year <= 2001, \n         # stringr::str_starts(catchment, stringr::fixed(\"34\")), \n         month %in% c(\"june\", \"may\"))\n\n# summing over treatments sampling events\ndata_sum<- data %>%\n  filter(treatment  %in% c(\"low\", \"medium\", \"high\", \"control\")) %>% \n  group_by(year, species, treatment, replicate) %>%\n  summarise(abundance = sum(abundance))\n\n\nFor many functions, the codyn package can only look at data from one stream at a time. So first we will separate each stream into it’s own data frame.\n\n\n# high intensity logging treatment\nsubset_codyn_high <- data %>%\n  filter(treatment == \"high\")\n# medium intensity logging treatment\nsubset_codyn_med <- data %>%\n  filter(treatment == \"medium\")\n# low intensity logging treatment\nsubset_codyn_low <- data %>%\n  filter(treatment == \"low\") \n# control stream (no logging)\nsubset_codyn_ctrl <- data %>%\n  filter(treatment==\"control\")\n\n\nUsing the codyn package to analyze diversity data over time\nEcologists are often interested in how diversity changes over time in one place. This is particularly interesting when you are looking at how species diversity responds to environmental change. This environmental change can be a single disturbance event such as a forest fire or more long-term change such as temperature increases due to climate change.\nThe Turkey Lakes dataset provides us with an opportunity to look at how the diversity of benthic invertebrates changes over time and in response to logging, given that areas of the river were subjected to different levels of logging. We can compare the diversity of different streams with different logging intensities and we can also compare the diversity of streams.\nThe codyn package allows us to analyze the change in biodiversity over time using different metrics.\nUsing community_structure()\ncommunity_structure() is a function in the package codyn that calculates species richness and evenness.\n\nSubset data\nLet’s take a look at the high intensity logging stream data.\n\n\nhead(subset_codyn_high)\n\n# A tibble: 6 × 9\n  catchm…¹  year month repli…² species density abund…³ treat…⁴ date_…⁵\n  <chr>    <int> <chr>   <int> <chr>     <dbl>   <dbl> <chr>   <yearm>\n1 34L       2001 may         1 Allope…     0         0 high    May 20…\n2 34L       2001 may         1 Amelet…     0         0 high    May 20…\n3 34L       2001 may         1 Antocha     0         0 high    May 20…\n4 34L       2001 may         1 Baetis    100        33 high    May 20…\n5 34L       2001 may         1 Cerato…    45.5      15 high    May 20…\n6 34L       2001 may         1 Chelif…    12.1       4 high    May 20…\n# … with abbreviated variable names ¹​catchment, ²​replicate,\n#   ³​abundance, ⁴​treatment, ⁵​date_yr_m\n\nAs you can see, there is a column for year, species, replicate, and abundance.\nCalculations with community_structure()\nFor example, we can use community_structure() to look at the change in species richness and evenness over time in one of the Turkey Lake streams. We will choose the stream with high logging intensity as an example. This function can only look at one stream at a time so make sure to subset out the stream that you are interested in.\nThe community structure function has five arguments.\n1. df is where you put in the data frame of interest, in our case subset_codyn_high.\n2. The time.var argument is where you put in your time variable (year)\n3. The abundance.var argument is where you put the column that holds the abundance variable (abundance).\n4. The replicate.var argument holds the column with the replicates (replicate)\n5. The metric argument allows you to specify the metric of evenness that you want the function to calculate. There are three possible metrics: Evar, SimpsonEvenness, and EQ, which all calculate evenness in different ways. We will use Simpson’s Evenness in this tutorial.\nRemember, if you ever need a refresher on the syntax you can type ?community_structure into the R script.\n\n\nrichness_high<-community_structure(df=subset_codyn_high, time.var=\"year\", abundance.var=\"abundance\", replicate.var=\"replicate\", metric=\"SimpsonEvenness\")\n\n\nWe can take a look at the output.\n\n\nhead(richness_high)\n\n  year replicate richness SimpsonEvenness\n1 1995         1       17       0.2210248\n2 1996         1       11       0.5785671\n3 1997         1       16       0.3436584\n4 1998         1       18       0.2786702\n5 1999         1       15       0.3540228\n6 2001         1       23       0.2661854\n\nAs you can see, this returns a data frame with the year, replicate, richness calculation, and evenness measure. It calculates richness and evenness separately for each replicate sample in the stream, so we have a measure of variability within samples as well as variability across years.\nPlot species richness\nWe can plot this data frame to see the changes over time.\n\n\nShow code\n\npacman::p_load(png, grid, ggplot2)\nimg <- readPNG(\"logging.png\")\ng <- rasterGrob(img, interpolate=TRUE)\n\n\nggplot()+\n  geom_vline(xintercept=1997, linetype=2, color=\"red\", size=2)+\n  geom_point(richness_high, mapping=aes(x=year, y=richness), alpha=0.5)+\n  geom_pointrange(richness_high, mapping=aes(x=year, y=richness), size=2, stat=\"summary\")+\n  theme_classic()+\n  labs(y=\"Species Richness\", x=\"Year\")+\n   annotation_custom(g, xmin=1996.5, xmax=1997.5, ymin=20, ymax=30)\n\n\n\nFigure 11: Species richness of aquatic macroinvertebrates over time. Each point is a replicate\n\n\n\nHere is a plot of species richness, with a different value for each replicate. The red line is the year that the streams were logged. Do you see any change? Do you think there are any significant patterns? How does the variability between replicates compare to the variability between years?\nPlot species evenness\nWe can also plot species evenness over time.\n\n\nShow code\n\nggplot()+\n  geom_vline(xintercept=1997, linetype=2, color=\"red\", size=2)+\n  geom_point(richness_high, mapping=aes(x=year, y=SimpsonEvenness), alpha=0.5)+\n  geom_pointrange(richness_high, mapping=aes(x=year, y=SimpsonEvenness), size=2, stat=\"summary\")+\n  theme_classic()+\n  labs(y=\"Species Evenness\", x=\"Year\")+\n   annotation_custom(g, xmin=1996.5, xmax=1997.5, ymin=0.57, ymax=0.75)\n\n\n\nFigure 12: Species evenness of aquatic macroinvertebrates over time. Each point is a replicate\n\n\n\nDo you see any patterns in the evenness between years?\n\nUsing community_diversity()\nSpecies richness and evenness are very simple ways to look at species diversity. However, as you learned from the rank abundance curves, species have different abundances within the community, with some species having very high abundance and most species having low abundance. Species richness does not take into account the relative abundances of each species, which limits the inferences we can make. The Shannon-Weiner diversity metric does take into account these relative abundances when calculating the diversity of a community and allows us to make more meaningful inferences about how biodiversity is changing over time.\n\nShannon diversity with community_diversity()\nThe codyn package allows you to calculate the Shannon diversity index for a single site over time using the community_diversity() function. We will again use the data from the stream with the high logging intensity. Luckily, this function has the exact same syntax as the community_structure() function! The only difference is that the options for the metric argument are Shannon and InverseSimpson.\nWe will first use Shannon.\n\n\nshannon_div_high<-\n  community_diversity(\n    df=subset_codyn_high, \n    time.var=\"year\", \n    abundance.var=\"abundance\", \n    replicate.var=\"replicate\", \n    metric=\"Shannon\")\n\n\nLet’s take a look at the output for this function.\n\n\nhead(shannon_div_high)\n\n  year replicate  Shannon\n1 1995         1 1.836002\n2 1996         1 2.044210\n3 1997         1 2.107977\n4 1998         1 2.016146\n5 1999         1 1.948510\n6 2001         1 2.297970\n\nYou can see it gives us a data frame of year, replicate, and Shannon, which is our measure of Shannon diversity.\nPlot Shannon’s diversity\n\n\nShow code\n\nggplot()+\n  geom_vline(xintercept=1997, linetype=2, color=\"red\", size=2)+\n  geom_point(shannon_div_high, mapping=aes(x=year, y=Shannon), alpha=0.5)+\n  geom_pointrange(shannon_div_high, mapping=aes(x=year, y=Shannon), size=2, stat=\"summary\")+\n  theme_classic()+\n  labs(y=\"Shannon Diversity\", x=\"Year\")+\n   annotation_custom(g, xmin=1996.25, xmax=1997.75, ymin=2.22, ymax=2.5)\n\n\n\nFigure 13: Shannon’s diversity of aquatic macroinvertebrates over time. Each point is a replicate.\n\n\n\nSimpon’s diversity with community_diversity\nWe can also use the same function to calculate Simpson’s diversity by simply changing the metric argument to InverseSimpson.\n\n\nsimpson_div_high <- \n  community_diversity(\n    df=subset_codyn_high, \n    time.var=\"year\", \n    abundance.var=\"abundance\", \n    replicate.var=\"replicate\", \n    metric=\"InverseSimpson\")\n\n\nWe can look at the output.\n\n\nhead(simpson_div_high)\n\n  year replicate InverseSimpson\n1 1995         1       3.757421\n2 1996         1       6.364238\n3 1997         1       5.498534\n4 1998         1       5.016063\n5 1999         1       5.310341\n6 2001         1       6.122265\n\nPlot Simpson’s diversity\nAnd then plot.\n\n\nShow code\n\nggplot()+\n  geom_vline(xintercept=1997, linetype=2, color=\"red\", size=2)+\n  geom_point(simpson_div_high, mapping=aes(x=year, y=InverseSimpson), alpha=0.5)+\n  geom_pointrange(simpson_div_high, mapping=aes(x=year, y=InverseSimpson), size=2, stat=\"summary\")+\n  theme_classic()+\n  labs(y=\"Simpson Diversity\", x=\"Year\")+\n   annotation_custom(g, xmin=1996.5, xmax=1997.5, ymin=8, ymax=10)\n\n\n\nFigure 14: Simpson’s diversity of aquatic macroinvertebrates over time. Each point is a replicate\n\n\n\nHow do these patterns compare to the patterns of Shannon’s diversity over time? How do the values compare?\n\nActivity\nCalculate richness, evenness, and diversity using both the Shannon and Simpson indices for the streams with low intensity logging, high intensity logging, and no logging. The data for these streams are subset_codyn_low, subset_codyn_high, and subset_codyn_ctrl. Plot these indices. Do you see any patterns across years? How do these compare to the patterns in the high intensity logging stream?\nReferences\nI got the equations from this paper: DOI:10.1007/s10531-016-1261-0\n\n\n\n",
    "preview": "lessons/2022-08-26-species-richness-rank-abundance-curves/distill-preview.png",
    "last_modified": "2022-10-17T10:48:55-07:00",
    "input_file": "species-richness-rank-abundance-curves.knit.md"
  },
  {
    "path": "lessons/2022-06-03-chronic-wasting-disease/",
    "title": "Alberta Chronic Wasting Disease Tutorial",
    "description": "This interactive tutorial explores how a simple compartmental model (the SI model) can be used to track and predict the spread of Chronic Wasting Disease (CWD) in Albertan mule deer over time. It begins by introducing CWD and why it is a growing problem in Albertan mule deer. It then investigates and explains how different levels of transmission, death, and culling can change disease dynamics. Students can test how these different parameters influence the spread of CWD using the sliders on each page.",
    "author": [
      {
        "name": "Amy Forsythe",
        "url": {}
      },
      {
        "name": "Bryn Wiley",
        "url": {}
      }
    ],
    "date": "2022-06-03",
    "categories": [],
    "contents": "\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2022-09-09T11:55:27-04:00",
    "input_file": {}
  },
  {
    "path": "lessons/2022-04-07-alberta-trees-tutorial/",
    "title": "Alberta Trees Tutorial",
    "description": "A short description of the post.",
    "author": [
      {
        "name": "Jhoan Chavez",
        "url": {}
      },
      {
        "name": "Zihaohan Sang",
        "url": {}
      },
      {
        "name": "Rolando Trejo Pérez",
        "url": {}
      }
    ],
    "date": "2022-04-07",
    "categories": [],
    "contents": "\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2022-09-09T11:55:26-04:00",
    "input_file": {}
  },
  {
    "path": "lessons/2022-04-07-anticosti-historical-data-tutorial/",
    "title": "Anticosti Historical Data Tutorial",
    "description": "After the storm: Impacts of a hemlock looper outbreak on tree species in Anticosti Island, 1973",
    "author": [
      {
        "name": "Victoria Marie Glynn",
        "url": "mailto:victoria.glynn@mail.mcgill.ca"
      },
      {
        "name": "Maxime Fraser Franco",
        "url": "mailto:fraser_franco.maxime@courrier.uqam.ca"
      }
    ],
    "date": "2022-04-07",
    "categories": [],
    "contents": "\r\nThis tutorial uses a tree damage dataset from Anticosti Island during\r\na hemlock looper outbreak in 1973. The dataset can be found on the\r\ngovernment of Canada’s official data\r\nportal. We would like to thank Anne Cotton-Gagnon, MSc, and\r\nChristian Hébert, PhD, from Natural Resources Canada and the Laurentian\r\nForestry Centre for their insights on the original datasets and access\r\nto the reports and maps associated with such.\r\nThe tutorial was built with the free and open-source software\r\nenvironment R using the leanr package and and\r\ndeployed using Shiny. You can\r\nfind the project folders and files in this GitHub\r\nrepository.\r\nThe present tutorial was developed by Victoria Marie Glynn who is a\r\nPhD student at McGill University in Montréal, Québec, and Maxime Fraser\r\nFranco who is a PhD student at the Université du Québec à Montréal\r\n(UQAM) in Montréal, Québec. Please feel free to contact us if you have\r\nany question (you can do that by clicking on our names on this page\r\nheader).\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2022-09-09T11:55:26-04:00",
    "input_file": {}
  },
  {
    "path": "lessons/2022-04-07-codyn-tutorial/",
    "title": "Codyn Tutorial",
    "description": "A short description of the post.",
    "author": [
      {
        "name": "Jory Griffith",
        "url": {}
      },
      {
        "name": "Maggie Slein",
        "url": {}
      },
      {
        "name": "Egor Katkov",
        "url": {}
      }
    ],
    "date": "2022-04-07",
    "categories": [],
    "contents": "\r\n\r\nContents\r\nLoad Packages\r\nLoad Data\r\nUsing\r\nthe codyn package to analyze diversity data over\r\ntime\r\nUsing\r\ncommunity_structure()\r\nSpecies Richness and\r\nEvenness\r\nPlot species richness\r\nPlot species evenness\r\n\r\n\r\nUsing\r\ncommunity_diversity()\r\nShannon’s diversity\r\nPlot Shannon’s diversity\r\n\r\nSimpson’s diversity\r\nPlot Simpson’s diversity\r\n\r\n\r\nActivity\r\n\r\nLoad Packages\r\nWe will be using the codyn package for this tutorial. We\r\nwill also use ggplot2 and dplyr for plotting\r\nand cleaning.\r\n\r\n\r\nlibrary(ggplot2)\r\nlibrary(codyn)\r\nlibrary(dplyr)\r\n\r\n\r\n\r\nLoad Data\r\nThese data are from the Turkey Lakes watershed experiment. This\r\ndataset contains the abundances of benthic invertebrate species measured\r\nin the May and June from 1995 to 2001. They recorded the type and number\r\nof invertebrates in an area of the stream, with 10 replicates per\r\nsampling event. These forests next to these streams were logged in 1997\r\nwith varying harvest intensities, with low, medium, and high intensity\r\nharvest and a control stream with no forest harvest. We will using the\r\ncodyn package to analyze the diversity of these benthic\r\ninvertebrates over time.\r\n\r\n\r\ndata<-read.csv(\"stream_invertebrates.csv\")\r\nhead(data)\r\n\r\n\r\n  year   species treatment replicate abundance\r\n1 1995 Alloperla   control         1         0\r\n2 1995 Alloperla   control         2         0\r\n3 1995 Alloperla   control         3         4\r\n4 1995 Alloperla   control         4         3\r\n5 1995 Alloperla   control         5         3\r\n6 1995 Alloperla   control         6         3\r\n\r\nFor many functions, the codyn package can only look at\r\ndata from one stream at a time. So first we will separate each stream\r\ninto it’s own data frame.\r\n\r\n\r\n# high intensity logging treatment\r\nsubset_codyn_high <- data %>%\r\n  filter(treatment == \"high\")\r\n# medium intensity logging treatment\r\nsubset_codyn_med <- data %>%\r\n  filter(treatment == \"medium\")\r\n# low intensity logging treatment\r\nsubset_codyn_low <- data %>%\r\n  filter(treatment == \"low\") \r\n# control stream (no logging)\r\nsubset_codyn_ctrl <- data %>%\r\n  filter(treatment==\"control\")\r\n\r\n\r\n\r\nUsing\r\nthe codyn package to analyze diversity data over time\r\nEcologists are often interested in how diversity changes over time in\r\none place. This is particularly interesting when you are looking at how\r\nspecies diversity responds to environmental change. This environmental\r\nchange can be a single disturbance event such as a forest fire or more\r\nlong-term change such as temperature increases due to climate change.\r\nThe Turkey Lakes dataset provides us with an opportunity to look at how\r\nthe diversity of benthic invertebrates changes over time and in response\r\nto logging. We can compare the diversity of different streams with\r\ndifferent logging intensities and we can also compare the diversity of\r\nstreams.\r\nThe codyn package allows us to analyze the change in\r\nbiodiversity over time using different metrics.\r\nUsing\r\ncommunity_structure()\r\ncommunity_structure() is a function in the package\r\ncodyn that calculates species richness and evenness.\r\nSpecies Richness and\r\nEvenness\r\nFor example, we can use community_structure() to look at\r\nthe change in species richness and evenness over time in one of the\r\nTurkey Lake streams. We will choose the stream with high logging\r\nintensity as an example. This function can only look at one stream at a\r\ntime so make sure to subset out the stream that you are interested\r\nin.\r\nLet’s take a look at the high intensity logging stream data.\r\n\r\n\r\nhead(subset_codyn_high)\r\n\r\n\r\n  year     species treatment replicate abundance\r\n1 1995 Amphinemura      high         1         9\r\n2 1995 Amphinemura      high         2        24\r\n3 1995 Amphinemura      high         3        53\r\n4 1995 Amphinemura      high         4        15\r\n5 1995 Amphinemura      high         5        59\r\n6 1995 Amphinemura      high         6        37\r\n\r\nAs you can see, there is a column for year, species, replicate, and\r\nabundance.\r\nThe community structure function has five arguments. The first is\r\ndf where you put in the data frame of interest, in our case\r\nsubset_codyn_high. The time.var argument is\r\nwhere you put in your time variable (year), the\r\nabundance.var argument is where you put the column that holds the\r\nabundance variable (abundance) and the\r\nreplicate.var argument holds the column with the replicates\r\n(replicate). In the metric argument, you can\r\nspecify the metric of evenness that you want the function to calculate.\r\nThere are three possible metrics: Evar,\r\nSimpsonEvenness, and EQ, which all calculate\r\nevenness in different ways. We will use Simpson’s Evenness in this\r\ntutorial. Remember, if you ever need a refresher on the syntax you can\r\ntype ?community_structure into the R script.\r\n\r\n\r\nrichness_high<-community_structure(df=subset_codyn_high, time.var=\"year\", abundance.var=\"abundance\",\r\n                                   replicate.var=\"replicate\", metric=\"SimpsonEvenness\")\r\n\r\n\r\n\r\nWe can take a look at the output.\r\n\r\n\r\nhead(richness_high)\r\n\r\n\r\n  year replicate richness SimpsonEvenness\r\n1 1995         1       17       0.2210248\r\n2 1996         1       11       0.5785671\r\n3 1997         1       16       0.3436584\r\n4 1998         1       18       0.2786702\r\n5 1999         1       15       0.3540228\r\n6 2001         1       23       0.2661854\r\n\r\nAs you can see, this returns a data frame with the year, replicate,\r\nrichness calculation, and evenness measure. It calculates richness and\r\nevenness separately for each replicate sample in the stream, so we have\r\na measure of variability within samples as well as variability across\r\nyears.\r\nPlot species richness\r\nWe can plot this data frame to see the changes over time.\r\n\r\n\r\n\r\nHere is a plot of species richness, with a different value for each\r\nreplicate. The red line is the year that the streams were logged. Do you\r\nsee any change? Do you think there are any significant patterns? How\r\ndoes the variability between replicates compare to the variability\r\nbetween years?\r\nPlot species evenness\r\nWe can also plot species evenness over time.\r\n\r\n\r\n\r\nDo you see any patterns in the evenness between years?\r\nUsing\r\ncommunity_diversity()\r\nShannon’s diversity\r\nSpecies richness and evenness are very simple ways to look at species\r\ndiversity. However, as you learned from the rank abundance curves,\r\nspecies have different abundances within the community, with some\r\nspecies having very high abundance and most species having low\r\nabundance. Species richness does not take into account the relative\r\nabundances of each species, which limits the inferences we can make. The\r\nShannon-Weiner diversity metric does take into account these relative\r\nabundances when calculating the diversity of a community and allows us\r\nto make more meaningful inferences about how biodiversity is changing\r\nover time.\r\nThe codyn package allows you to calculate the Shannon\r\ndiversity index for a single site over time using the\r\ncommunity_diversity() function. We will again use the data\r\nfrom the stream with the high logging intensity. Luckily, this function\r\nhas the exact same syntax as the community_structure()\r\nfunction! The only difference is that the options for the\r\nmetric argument are Shannon and\r\nInverseSimpson. We will first use Shannon.\r\n\r\n\r\nshannon_div_high<-community_diversity(df=subset_codyn_high, time.var=\"year\", abundance.var=\"abundance\",\r\n                                      replicate.var=\"replicate\", metric=\"Shannon\")\r\n\r\n\r\n\r\nLet’s take a look at the output for this function.\r\n\r\n\r\nhead(shannon_div_high)\r\n\r\n\r\n  year replicate  Shannon\r\n1 1995         1 1.836002\r\n2 1996         1 2.044210\r\n3 1997         1 2.107977\r\n4 1998         1 2.016146\r\n5 1999         1 1.948510\r\n6 2001         1 2.297970\r\n\r\nYou can see it gives us a data frame of year,\r\nreplicate, and Shannon, which is our measure\r\nof Shannon diversity.\r\nPlot Shannon’s diversity\r\nWe can plot these to see change over time.\r\n\r\n\r\nggplot()+\r\n  geom_point(shannon_div_high, mapping=aes(x=year, y=Shannon))+\r\n  theme_classic()+\r\n  labs(y=\"Shannon Diversity\", x=\"Year\")+\r\n  geom_vline(xintercept=1997, linetype=2, color=\"red\")\r\n\r\n\r\n\r\n\r\nSimpson’s diversity\r\nWe can also use the same function to calculate Simpson’s diversity by\r\nsimply changing the metric argument to\r\nInverseSimpson.\r\n\r\n\r\nsimpson_div_high<-community_diversity(df=subset_codyn_high, time.var=\"year\", abundance.var=\"abundance\",\r\n                                      replicate.var=\"replicate\", metric=\"InverseSimpson\")\r\n\r\n\r\n\r\nWe can look at the output.\r\n\r\n\r\nhead(simpson_div_high)\r\n\r\n\r\n  year replicate InverseSimpson\r\n1 1995         1       3.757421\r\n2 1996         1       6.364238\r\n3 1997         1       5.498534\r\n4 1998         1       5.016063\r\n5 1999         1       5.310341\r\n6 2001         1       6.122265\r\n\r\nPlot Simpson’s diversity\r\nAnd then plot.\r\n\r\n\r\n\r\nHow do these patterns compare to the patterns of Shannon’s diversity\r\nover time? How do the values compare?\r\nActivity\r\nCalculate richness, evenness, and diversity using both the Shannon\r\nand Simpson indices for the streams with low intensity logging, high\r\nintensity logging, and no logging. The data for these streams are\r\nsubset_codyn_low, subset_codyn_high, and\r\nsubset_codyn_ctrl. Plot these indices. Do you see any\r\npatterns across years? How do these compare to the patterns in the high\r\nintensity logging stream?\r\n\r\n\r\n\r\n",
    "preview": "lessons/2022-04-07-codyn-tutorial/codyn-tutorial_files/figure-html5/unnamed-chunk-7-1.png",
    "last_modified": "2022-09-09T11:55:27-04:00",
    "input_file": {}
  }
]
