[
  {
    "path": "lessons/2022-08-26-species-richness-rank-abundance-curves/",
    "title": "Understanding Biodiversity with Metrics & Rank Abundance Curves",
    "description": "Learn to understand what biodiversity means, how to quantify and compare it using metrics such as Shannon-Weiner and Simpson's indexes, and visualize it using Rank-Abundance Curves. We use a dataset featuring rich invertebrate diversity collected from shallow stream beds in the Turkey Lakes area in Ontario, Canada.",
    "author": [
      {
        "name": "Jory Griffith",
        "url": {}
      },
      {
        "name": "Egor Katkov",
        "url": {}
      },
      {
        "name": "Maggie Slein",
        "url": {}
      }
    ],
    "date": "2022-08-26",
    "categories": [],
    "contents": "\n\nContents\nTutorial overview\nLearning objectives\nWhy biodiversity matters\nTypes of data typically collected\nReal-world biodiversity data\nData collection and structure\nDownloading and tidying the data\n\nMetrics of biodiversity\nVisualizing biodiversity\nRank abundance curves with Turkey Lakes invertebrate data\nComparing rank-abundance curves\n\nMeasure and visualize biodiversity with codyn\nLoad data and packages\nUsing the codyn package to analyze diversity data over time\nEvenness\nBiodiversity metrics\nActivity\n\nConclusion\n\nTutorial overview\nBiodiversity is a hot topic in the face of unprecedented global change in the 21st century.\nWith a publicly available dataset, from the Turkey Lakes Watershed in Ontario, Canada, we demonstrate how to quantify biodiversity quantitatively and visually using R.\nLearning objectives\nUsing historical data from a freshwater lake ecosystem, by the end of this tutorial you will be able to:\nIdentify, calculate, and implement commonly used metrics to quantify biodiversity\nUnderstand and create figures used to display biodiversity data\nAnalyze biodiversity change in benthic invertebrates over multiple years and disturbance levels\nWhy biodiversity matters\nIn an ever-changing world, we are often concerned with how organisms will be able to cope with disturbances and increasingly, global climate change.\nBiodiversity is the variety of life at all levels, from genes to ecosystems.\nNot only is biodiversity important for ecosystems to function properly, it is also an important buffer for withstanding changing environments.\nWhen there is high biodiversity, there is a higher chance of some organisms surviving ecosystem change due to disturbance or climate change.\nBiodiversity therefore increases the resiliency of these ecosystems and the likelihood that they will be able to persist.\nWe have hidden the R code that is not part of the learning objectives, but if you want to view or recreate this code, click the “Show Code” button\n\n\nShow code\n\nknitr::include_graphics(\"biodiv_scheme.png\") # including an image\n\n\n\nFigure 1: Importance of biodiversity for downstream effects on ecosystem success, structure, and function. Reproduced from (Loreau et al. 2001).\n\n\n\nEcologists are often interested in the effects of perturbations (e.g. disturbances like fires, logging, flooding or pollution) on biodiversity, which can yield information and context for ecosystem health.\nHowever, boiling biodiversity down to a single metric can be difficult and incomplete depending on the goal.\nWith the help of the Turkey Lake dataset of benthic invertebrates, we will present you with a number of common metrics to assess biodiversity, their meaning, and how they can be visualized with the help of rank-abundance curves.\nFirst, we will teach you how to calculate these metrics using equations and abundance data, and then we will teach you how to use the codyn package to calculate these biodiversity metrics quickly and easily.\nYou will then have the option to learn to calculate biodiversity metrics yourself using an R package codyn.\n\n\nShow code\n\nlibrary(leaflet)\n\nprefix = 'https://api.gbif.org/v2/map/occurrence/density/{z}/{x}/{y}@1x.png?' \n# downloading global species occurrence data\nstyle = 'style=purpleYellow.point'\ntile = paste0(prefix,style)\n\nleaflet() %>% # making an interactive map\nsetView(lng = 20, lat = 20, zoom = 01) %>% # setting the coordinates\naddTiles() %>%  \naddTiles(urlTemplate=tile) # adding our biodiversity layer\n\n\n\n\nFigure 2: Species biodiversity across the globe, downloaded from the Global Biodiversity Information Facility (GBIF.org 2022).\n\n\n\nTypes of data typically collected\nBiodiversity is a broad term, and can be difficult to quantify.\nBiologists have created several standard measures of biodiversity that convey different information about ecosystems and the species living there.\nOften times, biologists interested in collecting biodiversity data collect a standard set of responses (see Fig. 3).\nThese often include:\nThe different kinds of species in a given area or environment\nThe number of individuals of each species (abundance)\nInformation about the area itself (i.e. habitat type, weather conditions, etc.)\nIf the work involves an setting up an experiment, collecting the control vs. experimental groups as well as metrics for replication and statistical power\nThe time frame over which the data were collected\nOften this data is collected over a long period of time, which we call time series data.\nThis allows us to see how these ecosystems are changing due to some disturbance or other changing environmental condition.\n\n\nShow code\n\nknitr::include_graphics(\"species_scheme.png\") # adding an image\n\n\n\nFigure 3: Schematic of freshwater lake ecosystem demonstrating the different information biologists to collect to understand biodiversity\n\n\n\nReal-world biodiversity data\nThe Turkey Lakes watershed is located in Ontario, Canada, approximately 50 km north of Sault Ste.\nMarie.\nIt is 10 km2 in area and contains a chain of 4 lakes.\nThe Turkey Lakes Watershed Study (see map) is an initiative by several agencies of the government of Canada, initially designed to study the effects of acid rain on forest ecosystems.\n\n\nShow code\n\nknitr::include_graphics(\"TurkeyMap.jpg\")\n\n\n\nFigure 4: Turkey Lakes watershed and catchment areas (labelled as cXX). Map reproduced from Webster et al. (2021), which features a summary of the research carried out within this watershed in the past 40 years (circa 2020).\n\n\n\nFrom 1995 to 2009, scientists collected, identified and counted benthic invertebrates from various stream beds around the Turkey Lakes catchment.\nBenthic invertebrates are small, often microscopic organisms (see Fig. 5), but form an important link between aquatic and terrestrial habitats.\nThey can decompose terrestrial matter such as leaves, or consume periphyton (algae and cyanobacteria) growing on rocks within their streams.\nBenthic invertebrates can be a food source for aquatic animals like small fish, or terrestrial animals such as birds.\nAn experiment was conducted in 1997 where certain sampling sites were logged with different intensities.\nWe can hypothesize that the biodiversity of benthic invertebrate communities might be affected by logging because of the effects that logging has on the stream ecosystem such as increased sunlight and temperature, increased photosynthetic activity in the stream, and decreased leaf litter.\nThis 14 year time series allows us to look at the immediate effects of logging as well as the subsequent recovery of the stream as foliage begins to grow back.\n\n\nShow code\n\nknitr::include_graphics(\"benthicmacroinvertebrates_g.carter_noaa600px.jpg\") # include image\n\n\n\nFigure 5: Various benthic macroinvertebrates under a stereo microscope (EPA 2022)\n\n\n\nData collection and structure\nThese data are from the Turkey Lakes watershed experiment.\nThis dataset contains the abundances of benthic invertebrate species measured in the May and June from 1995 to 2001.\nA surber sampler (see video below) was used to collect invertebrates from stream beds.\n\n\nShow code\n\npacman::p_load(\"vembedr\") # load package for including video\n\n\nThe downloaded binary packages are in\n    /var/folders/5x/g_hsyrnj77g9ty9j4n7c0kp80000gn/T//RtmpokR10U/downloaded_packages\n\nShow code\n\nembed_url(\"https://www.youtube.com/watch?v=BNrc9YkPpfA\") %>%\n  use_bs_responsive()\n\n\n\n\n\n\n\nSeveral catchments within the watershed were sampled at ten sites each (for replication).\nIn 1997, some catchments were logged with varying harvest intensities (low, medium, and high).\nFirst, we will subset the data, clean and process it in order to visualize and compare rank-abundance curves.\nLater in the tutorial, we will using the subsetted data with the codyn package to analyze the diversity of these benthic invertebrates over time.\nDownloading and tidying the data\nThe data “TWL_invertebrateDensity.csv” from the Government of Canada “Open Government” Portal on the “Turkey Lakes Watershed” page can be downloaded and saved as a data.frame object using the read.csv function.\nWe can look at all the columns of the dataset using the colnames() function.\n\n\n# load Turkey Lakes invertebrate density data \n# from the Govornament of Canada website\ndf.read <- read.csv(file=\"https://ftp.maps.canada.ca/pub//nrcan_rncan/Forests_Foret/TLW/TLW_invertebrateDensity.csv\") \n\n# Or, if that doesn't work, from our GitHub:\nif(!exists(\"df.read\")) { \n  df.read <- \n  read.csv(\"https://raw.githubusercontent.com/Living-Data-Tutorials/website/main/_lessons/2022-08-26-species-richness-rank-abundance-curves/Data/TLW_invertebrateDensity.csv\")\n} \n\n\nNow, take a look at the column names:\n\n\ncolnames(df.read) \n\n [1] \"catchment\"         \"year\"              \"month\"            \n [4] \"replicate\"         \"Aeshna\"            \"Alloperla\"        \n [7] \"Ameletus\"          \"Amphinemura\"       \"Antocha\"          \n[10] \"Baetis\"            \"Boyeria\"           \"Centroptilum\"     \n[13] \"Ceratopogonidae\"   \"Chelifera\"         \"Cheumatopsyche\"   \n[16] \"Chironomidae\"      \"Chloroperlidae\"    \"Chloroperlinae\"   \n[19] \"Clinocera\"         \"Clitellata\"        \"Collembola\"       \n[22] \"Culicidae\"         \"Dicranota\"         \"Diptera\"          \n[25] \"Diura\"             \"Dixa\"              \"Dixidae\"          \n[28] \"Dolichopodidae\"    \"Dolophilodes\"      \"Dytiscidae\"       \n[31] \"Elmidae\"           \"Empididae\"         \"Epeorus\"          \n[34] \"Ephemerella\"       \"Ephemerellidae\"    \"Epitheca\"         \n[37] \"Eurylophella\"      \"Glossosoma\"        \"Gomphidae\"        \n[40] \"Habrophlebia\"      \"Haploperla\"        \"Heptagenia\"       \n[43] \"Heptageniidae\"     \"Hesperophylax\"     \"Heterocloeon\"     \n[46] \"Hexatoma\"          \"Holorusia\"         \"Hydatophylax\"     \n[49] \"Hydrophilidae\"     \"Hydropsyche\"       \"Hydropsychidae\"   \n[52] \"Hydroptila\"        \"Isogenoides\"       \"Isoperla\"         \n[55] \"Lepidostoma\"       \"Leptoceridae\"      \"Leptophlebia\"     \n[58] \"Leptophlebiidae\"   \"Leuctra\"           \"Limnephilidae\"    \n[61] \"Limnephilus\"       \"Limnophila\"        \"Lype\"             \n[64] \"Molophilus\"        \"Natarsia\"          \"Nemoura\"          \n[67] \"Neophylax\"         \"Neurocordulia\"     \"Odonata\"          \n[70] \"Onocosmoecus\"      \"Oreogeton\"         \"Ormosia\"          \n[73] \"Oxyethira\"         \"Paracapnia\"        \"Paraleptophlebia\" \n[76] \"Parapsyche\"        \"Pedicia\"           \"Plecoptera\"       \n[79] \"Polycentropus\"     \"Prosimulium\"       \"Pseudolimnophila\" \n[82] \"Pseudostenophylax\" \"Psychoglypha\"      \"Pycnopsyche\"      \n[85] \"Rhithrogena\"       \"Rhyacophila\"       \"Serratella\"       \n[88] \"Simulium\"          \"Stenacron\"         \"Stenonema\"        \n[91] \"Tabanidae\"         \"Taeniopteryx\"      \"Tanypodinae\"      \n[94] \"Tanytarsini\"       \"Tipula\"            \"Tipulidae\"        \n[97] \"Trichoptera\"      \n\nAs you can see, the columns of the dataset are:\nCatchment number.\nThere are 11 catchments (stream study areas), and each has an alphanumeric code.\nYear and month that the data was collected.\nA number for the replicate (there are 10 replicates for each sampling date, which means they counted the abundances of benthic invertebrates from ten sites within each catchment on each sampling date).\nA column for each of the species with their densities.\nDensities in units of individuals per m2 were calculated by dividing the counts by the area of the surber sampler (see video above; 0.32 m2 in this case).\nFirst, in order to quantify biodiversity, we will convert the species densities reported in the dataset back to the raw counts (i.e. abundances) to obtain whole numbers of individuals.\nTo do this, it is helpful to transform the “wide” format data.frame (where each species is a column) to “long” format, where species names are all found in a single column using the tidyr::pivot_longer() function.\n\n\nlibrary(dplyr)\ndf.count <- \n  df.read %>% \n  # Convert from wide to long format to simplify the operation\n  tidyr::pivot_longer( \n    # Select the columns we want in long format \n    #  (i.e. the columns with invertebrate species)\n    \"Aeshna\":\"Trichoptera\", \n    # Name the column that we are creating for \n    #  the names of the invertebrate species\n    names_to = \"Species\", \n    # Name the column that we want the density values to do to\n    values_to = \"Density\" ) %>% \n  mutate(\n     # Change densities to counts\n    Count = Density * 0.33,\n    # Replace NAs with 0 because NA \n    #  signifies species absnce\n    Count = tidyr::replace_na(Count, 0) \n    )\n\n\nMetrics of biodiversity\n\n⚠️ If you plan on using metrics of biodiversity, we recommend using Hill numbers for your analysis.\nSee Roswell, Dushoff, and Winfree (2021).\nAlthough Hill numbers are outside the scope of this tutorial, understanding the biodiversity metrics presented here will help you understand Hill numbers as well.\n\nThere are several different ways to analyse and understand changes in community composition, or the relative abundances of all taxa in a community.\nEach of these metrics allow us to look at different aspects of the biodiversity data we collect (MacDonald, Nielsen, and Acorn 2016).\nSpecies richness quantifies the number of different species in a community.\nThe Shannon-Weiner Index (Shannon for short) estimates species diversity by taking into account the number of species living in a habitat (richness) and their relative abundance (evenness).\nSimpson’s Diversity Index also takes into account species richness and evenness, but puts more emphasis on evenness (i.e. rare species).\nEvenness Indexes assesses the evenness of the abundances of each species.\nEach of these metrics can be calculated by hand using an equation.\nClick through the tabs to learn how to calculate these different measures of biodiversity mathematically and using R!\n\nSpecies richness\nPerhaps the simplest measure of biodiversity is species richness (\\(S\\)).\nThe equation for species richness is:\n\\(S = \\sum_{i=1}^{S}p_i^o\\)\n\\(p_i^o\\) represents the proportion of individuals of species \\(i\\), taking the sum across each of these species.\nStep 1: Count the number of unique species recorded in that year.\nThen you can look at how the number of different species in a community changes over time.\nInterpretation: A higher number means there are more species, and therefore species richness is higher.\n\n\nShow code\n\n#loading necessary libraries (kableExtra makes tables)\npacman::p_load(kableExtra) # load package for making table\nrichness_table <- df.count %>%\n  # Removing species that had 0 observations\n  filter(Count > 0,\n         year %in% c(1995, 1997, 2001, 2009)) %>%\n  group_by(year) %>%\n  summarise(richness=length(unique(Species)), # counting the number of species that were observed in each year\n            # Check how many catchments were sampled in each year\n            catchments = length(unique(catchment)))\n#Nice looking table using the kable() function\nkable(richness_table, col.names=c(\"Year\", \"Richness\", \"Catchments Sampled\"), align=\"c\")%>%\n  kable_classic(full_width = F, html_font = \"Cambria\")\n\n\nYear\n\n\nRichness\n\n\nCatchments Sampled\n\n\n1995\n\n\n48\n\n\n6\n\n\n1997\n\n\n51\n\n\n9\n\n\n2001\n\n\n65\n\n\n9\n\n\n2009\n\n\n50\n\n\n3\n\n\nWe can see in this table that across years, the number of species in the same area fluctuated.\nHowever, this metric is particularly sensitive to changes in sampling efforts because additional sampling is likely to uncover additional, rare species.\nAs a result, the only reliable comparison is between 1997 and 2001, which suggests that species richness increased following the logging operations of 1997.\nHowever, this does not tell us anything about how the abundances of different species changed.\nShannon (H’)\nAnother metric we can use to analyze biodiversity is the Shannon-Wiener Index (\\(H\\)), which indexes across the sum of all relative proportions of species richness with an additional logarithmic transformation.\nThis equation takes into account both the number of species in a specific area (richness) and relative abundances (evenness).\nThe equation for the Shannon-Weiner Index is:\n\\[\nH' = - \\sum_{i=1}^{S}p_i~\\ln(p_i)\n\\]\nStep 1: Calculate \\(p_i\\) for each species.\n\\[\np_i = n_i/N\n\\]\nWhere \\(n_i\\) is the number of individuals of species \\(i\\) and \\(N\\) is the total number of individuals in the community.\nStep 2: Multiply the proportion of each species (\\(p_i\\)) by the natural logarithm of the proportion (\\(\\ln(p_i)\\))\nStep 3: Sum each of these values for each species.\nStep 4: Multiply the sum by -1.\nInterpretation: The minimum value of the Shannon’s diversity index is 0, which means that there is no diversity (i.e. only one species is found in that habitat).\nThe values increase as the number of species increase, and is maximized at a given number of species when is an equal abundance of each species.\n\n\nShow code\n\nshannon <- \n  df.count %>%\n  filter(year %in% c(1995, 1997, 2001, 2009)) %>%\n  # Summarise over catchments and replicate sites\n  group_by(year, Species) %>%\n  summarise(TotalCount=sum(Count)) %>% \n  mutate(\n    # Step 1\n    # Note that sum(TotalCounts) calculates the \"N\"\n    # for each year separately because the data.frame \n    # was previously grouped by year using the\n    # function group_by().\n    pi = TotalCount/sum(TotalCount), \n    # Step 2\n    pi_ln_pi = pi*log(pi)) %>%       \n  # Steps 3 & 4. \n  # Note that na.rm = T because for species abundances = 0, \n  # p_i * log(p_i) = 0 * -Inf = NaN\n  summarise(shannon = -1*sum(pi_ln_pi, na.rm=T))\n\nkable(shannon, col.names=c(\"Year\", \"Shannon's Index\"), align=\"c\")%>%\n  kable_classic(full_width = F, html_font = \"Cambria\")\n\n\nYear\n\n\nShannon’s Index\n\n\n1995\n\n\n2.407170\n\n\n1997\n\n\n2.081374\n\n\n2001\n\n\n2.448311\n\n\n2009\n\n\n2.540719\n\n\nWe can see that the Shannon diversity changes over time, with the lowest value being the year of the forest harvesting operations (1997).\nHowever, it seems that biodiversity quickly recovers in the years following the harvesting.\nSimpson (D)\nAnother metric we can use to analyse biodiversity in the Simpson’s index (\\(D\\)) which indexes across the sum of all relative proportions of species richness with an additional square power transformation.\nThough very similar to the calculation in the Shannon-Wiener Index, the Simpson index is more focused on dominance of species as it highlights the proportion of species in a sample.\nThe equation for Simpson’s diversity is:\n\\[D = 1-\\sum_{i=1}^{S} \\frac {n_i(n_i-1)}{N(N-1)}\\]\nWhere \\(n_i\\) is the number of individuals of species \\(i\\) and \\(N\\) is the total number of individuals in the community.\nStep 1: Multiply the number of individuals of a given species (\\(n_i\\)) by (\\(n_i-1\\)).\nStep 2 Multiply the total number of individuals in the community (\\(N\\)) by (\\(N-1\\)).\nStep 3: Divide the number from step 1 by the number from step 2.\nStep 4: Once you have the numbers from step 3 for each species in the community, sum all of these together and substract from 1.\nInterpretation: The higher the value of \\(D\\), the greater the diversity in the community.\nAn index close to 1 means that there are several species in the community, and the population proportion of species is even.\nOn the other hand, \\(D=0\\) indicates a single-species community\n\n\nShow code\n\nsimpson <-  df.count %>%\n  filter(year %in% c(1995, 1997, 2001, 2009)) %>%\n  # Summarise over catchments and replicate sites\n  group_by(year, Species) %>%\n  summarise(TotalCount=sum(Count)) %>%\n  mutate(\n    # Step 1\n    num = TotalCount*(TotalCount - 1 ),\n    # Step 2 (Note: data.frame grouped by year)\n    denom = sum(TotalCount)*(sum(TotalCount)-1), \n    # Step 3\n    frac = num/denom) %>% \n  # Step 4\n  summarise(simpson = 1 - sum(frac))\n\nkable(simpson, col.names=c(\"Year\", \"Simpson's Index\"), align=\"c\")%>%\n  kable_classic(full_width = F, html_font = \"Cambria\")\n\n\nYear\n\n\nSimpson’s Index\n\n\n1995\n\n\n0.8372515\n\n\n1997\n\n\n0.7452368\n\n\n2001\n\n\n0.8423991\n\n\n2009\n\n\n0.8757629\n\n\nSimilarly to the Shannon-Weiner index, biodiversity dropped in 1997, but had recovered by 2001.\nEvenness (E)\nAdditionally, we can think about the evenness of species across a given area.\nEvenness is a type of metric for assessing species dominance.\nIf evenness is high, it means most species are of equal dominance.\nIf evenness if low, it means some species are more dominant (i.e. have higher abundance) than others.\nEvenness is maximized when all species have equal abundances.\nMultiple metrics can be used to measure evenness, here we show an example of “Shannon-Wiener” evenness, however a similar approach can be used for simpson evenness.\nThe equation for “Shannon-Wiener” evenness is:\n\\(E = H / ln(S)\\)\nStep 1: Divide the value of the Shannon-Wiener index (\\(H\\)) by the species richness (\\(S\\)).\nInterpretation: Values closer to one signify more evenness and values closer to 0 signify lower evenness.\n\n\nShow code\n\n# Combine previously calculated species richness \n#  and shannon index tables\nevenness = \n  left_join(richness_table, shannon) %>%\n  # Step 1\n  mutate(evenness = shannon/log(richness)) %>%\n  select(year, evenness)\n\nkable(evenness, col.names=c(\"Year\", \"Evenness\"), align=\"c\")%>%\n  kable_classic(full_width = F, html_font = \"Cambria\")\n\n\nYear\n\n\nEvenness\n\n\n1995\n\n\n0.6218149\n\n\n1997\n\n\n0.5293657\n\n\n2001\n\n\n0.5865078\n\n\n2009\n\n\n0.6494644\n\n\nAs with previous biodiversity metrics, we find that evenness is lowest in 1997, and recovers in the following years.\n\nVisualizing biodiversity\nApart from calculating biodiversity using the metrics above we can also visualize differences using plots.\nOne way to visualize biodiversity data is to make a rank-abundance curve.\nOn the y-axis we have the species (numbered), and on the y axis we have the abundance.\nThe plots are organized from high to low abundance.\nUsing rank-abundance curves, we can visualize the change in relative abundance and species dominance over time.\nAs an example, we use a subset of the Turkey Lakes data with six of the more abundant species from the dataset to make a simple rank-abundance curve.\n\n\nShow code\n\n#loading necessary libraries\npacman::p_load(tidyverse, patchwork)\n#creating a subset of the full data with just 6 species, across 4 years\nsubset <- df.count %>%\n  filter(Species %in% c(\"Chironomidae\", \"Prosimulium\", \"Baetis\", \"Heterocloeon\", \"Chelifera\", \"Leuctra\")) %>%\n  filter(year %in% c(1995, 1997, 2001, 2009)) %>%\n  group_by(year, Species) %>%\n  summarise(sum=sum(Count))\n\n#1995\na<- subset %>%\n  filter(year==1995) %>%\nggplot(aes(x=reorder(Species, -sum), y=sum, shape=Species, colour=Species))+\n  geom_point(size=4)+\n  scale_colour_viridis_d()+\n  ggtitle(\"1995\")+\n  theme_classic()+\n  labs(x=\"Species\", y=\"Abundance\", color=\"Species\")+\n  theme(axis.text.x = element_text(face=\"italic\"), legend.position=\"none\") # Use italics for species names\n\n\n#2001\nb<- subset %>%\n  filter(year==2001) %>%\n  ggplot(aes(x=reorder(Species, -sum), y=sum, shape=Species, colour=Species))+\n  geom_point(size=4)+\n  scale_colour_viridis_d()+\n  ggtitle(\"2001\")+\n  theme_classic()+\n  labs(x=\"Species\", y=\"Abundance\", color=\"Species\") +\n  theme(axis.text.x = element_text(face=\"italic\"), legend.position=\"none\") # Use italics for species names\n\n\na / b\n\n\n\nFigure 6: Simple rank-abundance curve with 6 species from the Turkey Lakes dataset, with counts from 1995 and 2001. Colour and shape indicate a unique species, with y axis representing abundance.\n\n\n\nWe can see here between 1995 and 2001 in our benthic community, there were small differences in absolute counts, with the most abundant species (Chrironomidae) decreasing ~5000 in abundance of individuals, but still remaining the most abundance species overall across both years.\nChironomidae are often very abundant in streams, and are good at taking advantage of the benefits that may be provided by logging, such as increased sunlight availability causing an increase in photosynthetic activity and increased periphyton (algae), which is their primary food source.\nOverall abundance of all species decreases in 2001 compared to 2005, likely because of the regrowth of foliage after logging and decrease in photosynthetic activity in the stream.\nBaetis was the 2nd most abundant species in 1995, but dropped to 5th most abundant by 2001.\nThis suggests that this species may do better immediately following disturbance.\nHowever, we would need to look at data from more years to draw conclusions.\n\n\nShow code\n\nknitr::include_graphics(\"TopSpecies.png\")\n\n\n\nFigure 7: A) Chironomus plumosus, a type of chironomid, also called nonbiting midges, or lake flies (Wikipedia 2022b). B) Baetis intercalaris, a type of mayfly, also known as blue-winged olives (Wikipedia 2022a).\n\n\n\nRank abundance curves with Turkey Lakes invertebrate data\nThe Turkey Lakes dataset spans multiple years, months, and catchments within the Turkey Lakes watershed and includes densities for a wide array of invertebrate species across multiple replicate sites.\nEach site has an alphanumeric code.\nYou can visualize Rank Abundances for any subset of the dataset using the following Shiny App.\n\nAdditional data wrangling\nUsing information obtained from the metadata of this dataset, we can add some interesting details to the data (for at least a few catchments and years).\nFor the purposes of this portion of the tutorial, we also select a different subset of the data to work with.\n\n\nShow code\n\n## Different catchments had different logging intensities\ntreatment = tibble(catchment =             c(\"34M\",  \"34U\",    \"34L\"),\n                   `Logging Intensity`   = c(\"none\", \"medium\", \"high\"))\n\n## Logging happened in 1997\nyearAnnot = tibble(\n  year = 1995:2001,\n  trt  = c( rep(\"pre-logging\", 2), \"logging\", rep(\"post-logging\", 4))\n)\n\ndf.subset =  \n  df.count %>%\n    right_join(treatment) %>%\n    right_join(yearAnnot) %>%\n  filter(month %in% c(\"june\", \"may\"))\n\n\nThen, we will clean up the data by removing any species whose count is zero across all the different sites and years.\n\n\nShow code\n\n## Find species that have 0 abundance across all sites and years.\nNA_sp = df.subset %>%\n  group_by(Species) %>%\n  summarize(Count = sum(Count, na.rm=T)) %>%\n  filter(Count==0) %>%\n  select(Species)\n\n## Remove those species from the dataset\ndf.clean = df.subset %>% \n  anti_join(NA_sp)\n\n\nSummarise data\nLet’s start by looking at catchment “34L”, which saw high levels of deforestation in June of 1998, the year following the logging event.\n\n\nShow code\n\ndf.subset1 <- df.subset %>% \n  filter(catchment == \"34L\", # high loggineg\n         year      == 1998,\n         month     == \"june\")\n\n\nNext, we can sum the count data over all the replicate sites within the catchment to obtain a total count within the catchment.\n\n\nShow code\n\ndf.raw.summary1 = \n  df.subset1 %>%\n  group_by(Species) %>%\n  summarise(\n    TotalCount = sum(Count))\n\n\nThen, we order the species from most abundant to least abundant.\n\n\nShow code\n\ndf.ordered.summary1 = \n  df.raw.summary1 %>%\n  arrange(desc(TotalCount)) \n\n\nFinally, we assign a rank to the species (rank 1 = the most abundant species) and filter out any species which are not actually present in this catchment.\n\n\ndf.summary1 = \n  df.ordered.summary1 %>%            \n  mutate( Rank = seq_along(Species) ) %>%  \n  # Keep only species with abundances greater than zero.\n  filter(TotalCount > 0)                   \n\n\nPlot the data\nWe make a plot to represent the data.\nNote that we need to use the stats::reorder() function to get the species on the x-axis in the correct order:\n\n\nShow code\n\nlibrary(ggplot2)\nplot1 = \n  df.summary1 %>%\n  ggplot(aes(x=reorder(Species, -1*TotalCount), \n             y=TotalCount)) + \n  geom_col() +\n  xlab(\"Taxon\") +\n  ylab(\"Total count (sum of replicates)\") + \n  theme_classic(base_size=16) +  # Aesthetic\n  theme(axis.text.x = element_text(face=\"italic\", size=9, angle=90)) # Use italics for genus names\nplot1\n\n\n\nFigure 8: Abundance of species in catchment 34L of the Turkey Lakes in June 1998\n\n\n\nAs you can see, rank-abundance curves in nature are rarely as evenly distributed as the simulated data.\nThere is often few highly abundant species and many very rare species.\nAs a result, a log transform is frequently applied to the y-axis.\nAdditionally, when analyzing rank-abundance curves, the focus is on the shape of the curve, not on the species names.\nAs a result, we can substitute the species name with it’s rank.\nThis is where the term rank-abundance comes from.\nThis also has the added benefit of simplifying the code:\n\n\nShow code\n\ndf.summary1 %>%\n  ggplot(aes(x=Rank, y=TotalCount)) + \n  geom_col() +\n  xlab(\"Rank\") +\n  scale_y_log10() + \n  ylab(\"log Total count\") + \n  theme_classic(base_size=16) # Aesthetic\n\n\n\nFigure 9: Abundance of species in catchment 34L of the Turkey Lakes in June 1998\n\n\n\n\nComparing rank-abundance curves\nInstead of using bars to represent abundances, we can simply use lines to trace the distribution.\nThis allows us to compare multiple distributions.\nFirst, let’s compare the different replicates (i.e., sites) within a single catchment area (34L).\n\n\nShow code\n\ndf.subset1 %>%\n  group_by(replicate) %>% \n  # Order by rank, for each catchment (.by_group=T)\n  arrange(desc(Count), .by_group = T) %>%\n  mutate( Rank = seq_along(Species) ) %>%  \n  # Keep only species with abundances greater than zero.\n  filter(Count > 0) %>%\n  # Line Plot\n  ggplot(aes(x=Rank, y=Count, color=as.factor(replicate))) + \n    xlab(\"Rank\") + \n    ylab(\"log Count\") + \n    geom_line(size=2) + \n    scale_y_log10() +\n    # Some aesthetic choices:\n    theme_classic(base_size=16) +\n    scale_color_brewer(name = \"Site\", palette = \"Paired\")\n\n\n\nFigure 10: Comparison of rank-abundance curve changes across different sites (replicate)\n\n\n\nHere, the y-intercept of the line represents the abundance of the most abundant species.\nThe slope represents the evenness of the rank abundance curve.\nA steeper slope means that the site is more dominated by one or two species, while a less steep slope means the abundances are more even between species.\nA slope of 0 would represent complete evenness among samples.\nThe x-intercept represents how many species are in the sample (i.e. species richness).\nThis is also called the highest maximum rank.\nThe site with the highest maximum rank here is site 6.\nNotice that there is some variation in the shape and the “evenness” (i.e., slope) of the different rank-abundance curves.\nIn the plot above we are showing different sites separately from one catchment, but we can pool the samples from the 10 sites in each catchment and compare catchments to one another.\nThis allows us to compare rank-abundance curves from three different catchments, each of which has a different logging intensity.\nHere are the rank abundance curves for of the 3 catchments with different logging treatment.\nThis is only the data from 1998, which is a couple years after logging.\n\n\nShow code\n\nplot = \n  df.subset %>% \n  # Subset\n  filter( year      == 1998,\n          month     == \"june\") %>%\n  # Summarise across replicates\n  group_by(`Logging Intensity`, catchment, Species) %>%\n  summarise(TotalCount=sum(Count)) %>% \n  # Order by rank, for each catchment (.by_group=T)\n  group_by(catchment, `Logging Intensity`) %>%\n    arrange(desc(TotalCount), .by_group = T) %>%\n    mutate( Rank = seq_along(Species) ) %>%\n  # Keep only species with abundances greater than zero.\n  filter(TotalCount > 0) %>%\n  # Line Plot\n  ggplot(aes(x=Rank, y=TotalCount, color=`Logging Intensity`)) + \n    xlab(\"Rank\") + \n    ylab(\"log Total count\") + \n    geom_line(aes(size=`Logging Intensity`)) + \n    scale_y_log10() +\n    # Some aesthetic choices:\n    scale_size_manual(values=c(2.5, 2, 1.5)) +\n    theme_classic(base_size=16) +\n    scale_color_brewer(palette=\"Dark2\") + \n    theme(legend.position = c(0.87,0.87))\nplot\n\n\n\nFigure 11: Comparison of rank-abundance curve changes across sites with different logging intensity\n\n\n\nFirst of all, you can see that when we pool all of the samples from the 10 sites in each catchment, the species richness increases.\nIn the first plot at the site level, the highest richness was 29, where here it is 40.\nYou can see that the catchment with high intensity logging had the highest species richness (highest maximum rank).\nIt is common for species richness to increase following a disturbance.\nIn this case, it is potentially because the removal of trees increased photosynthetic activity and temperature, which provided more food and a more hospitable habitat for benthic invertebrates.\nInterestingly, the slope of the rank abundance curve for high intensity logging is similar to the slope of the rank abundance curve for no logging, suggesting that logging caused an increase in overall richness but did not effect evenness.\nThe catchment that was logged with medium intensity has a less “even” rank-abundance curve compared to the other two.\nIn other words, the slope is slightly steeper for the “medium” intensity site than for the “high” and “none” (no logging) catchments.\nOf course, many more sites over several years need to be compared in order to make any generalizable claims about the effects of logging on invertebrate biodiversity in the Turkey Lakes area.\nFor more details about the effects of logging at the Turkey Lakes, see Kreutzweiser, Capell, and Good (2005).\nFurthermore, several models have been developed to understand rank-abundance curves (e.g. log-normal, broken stick model).\nThe radfit function from the vegan R package allows fitting of these different curve models (RDocumentation 2022).\nFor more information about rank-abundance curves, see this Nature article.\nMeasure and visualize biodiversity with codyn\nNow that we have calculated different biodiversity metrics and rank abundance curves by hand, we can also use existing functions in the R package codyn (Hallett et al. 2016) to quantify and visualizing changes in biodiversity with the Turkey Lakes dataset.\nLoad data and packages\nAlong with the codyn package, we will also use ggplot2, dplyr and tidyr for plotting, cleaning, and re-formatting data.\n\n\nlibrary(ggplot2)\nlibrary(codyn)\nlibrary(dplyr)\nlibrary(tidyr)\n\n\nLoad, subset and clean the data (see “Rank abundance curves with Turkey Lakes invertebrate data” above for details) :\n\n\ndata  <- \n  read.csv(file=\"https://ftp.maps.canada.ca/pub//nrcan_rncan/Forests_Foret/TLW/TLW_invertebrateDensity.csv\") %>%\n  pivot_longer( \"Aeshna\":\"Trichoptera\", names_to = \"species\", values_to = \"density\") %>%\n  mutate(abundance = density * 0.33, \n         treatment = case_when(catchment %in% c(\"33\") ~ \"low\", \n                               catchment %in% c(\"34U\") ~ \"medium\", \n                               catchment %in% c(\"34L\") ~ \"high\", \n                               catchment %in% c(\"34M\") ~ \"control\", \n                               TRUE ~ \"natural\"), \n         date_yr_m = zoo::as.yearmon(paste0(year,month), \"%Y %b\")) %>%\n  drop_na(abundance) %>% \n  filter(year >= 1995, \n         year <= 2001, \n         # stringr::str_starts(catchment, stringr::fixed(\"34\")), \n         month %in% c(\"june\", \"may\"))\n\n\nFor many functions, the codyn package can only look at data from one stream at a time.\nSo first we will separate each stream into it’s own data frame.\n\n\n# high intensity logging treatment\nsubset_codyn_high <- data %>%\n  filter(treatment == \"high\")\n# medium intensity logging treatment\nsubset_codyn_med <- data %>%\n  filter(treatment == \"medium\")\n# low intensity logging treatment\nsubset_codyn_low <- data %>%\n  filter(treatment == \"low\") \n# control stream (no logging)\nsubset_codyn_ctrl <- data %>%\n  filter(treatment==\"control\")\n\n\nUsing the codyn package to analyze diversity data over time\nEcologists are often interested in how diversity changes over time in one place.\nThis is particularly interesting when you are looking at how species diversity responds to environmental change.\nThis environmental change can be a single disturbance event such as a forest fire or more long-term change such as temperature increases due to climate change.\nThe Turkey Lakes dataset provides us with an opportunity to look at how the diversity of benthic invertebrates changes over time and in response to logging, given that areas of the river were subjected to different levels of logging.\nWe can compare the diversity of different streams with different logging intensities.\nThe codyn package allows us to analyze the change in biodiversity over time using different metrics.\nEvenness\nAs we learned earlier, evenness is a metric which allows us to compare the abundance of rare versus rich species, or the slope of the rank-abundance curve.\ncommunity_structure() is a function in the package codyn that calculates species richness and a number of evenness metrics.\n\nSubset data\nLet’s take a look at the high intensity logging stream data.\n\n\nhead(subset_codyn_high)\n\n# A tibble: 6 × 9\n  catchment  year month replicate species  density abundance treatment\n  <chr>     <int> <chr>     <int> <chr>      <dbl>     <dbl> <chr>    \n1 34L        2001 may           1 Alloper…     0           0 high     \n2 34L        2001 may           1 Ameletus     0           0 high     \n3 34L        2001 may           1 Antocha      0           0 high     \n4 34L        2001 may           1 Baetis     100          33 high     \n5 34L        2001 may           1 Ceratop…    45.5        15 high     \n6 34L        2001 may           1 Chelife…    12.1         4 high     \n# ℹ 1 more variable: date_yr_m <yearmon>\n\nAs you can see, there is a column for year, species, replicate, and abundance.\nCalculate evenness\nWe can use the community_structure() function to look at the change in species richness and evenness over time in one of the Turkey Lake streams.\nWe will choose the stream with high logging intensity as an example.\nThis function can only look at one stream at a time so make sure to subset out the stream that you are interested in.\nThe community structure function has five arguments.\ndf: the data frame of interest, in our case subset_codyn_high.\ntime.var: (optional) the name of the time variable column (year)\nabundance.var: the name of the abundance variable column (abundance).\nreplicate.var:(optional) the name of the replicates column (replicate)\nmetric: the evenness metric that you want the function to calculate.\nThere are three possible metrics: Evar, SimpsonEvenness, and EQ, which all calculate evenness in different ways.\nWe will use Simpson’s evenness in this tutorial.\nYou can find more information about the function, and the different evenness metrics by typing ?community_structure into the R console.\n\n\nrichness_high <- community_structure(\n  df=subset_codyn_high, \n  time.var=\"year\", \n  abundance.var=\"abundance\", \n  replicate.var=\"replicate\", \n  metric=\"SimpsonEvenness\")\n\nhead(richness_high)\n\n  year replicate richness SimpsonEvenness\n1 1995         1       17       0.2210248\n2 1996         1       11       0.5785671\n3 1997         1       16       0.3436584\n4 1998         1       18       0.2786702\n5 1999         1       15       0.3540228\n6 2001         1       23       0.2661854\n\nAs you can see, community_structure() returns a data frame with species richness and evenness for each year and replicate.\nIt is possible to calculate a measure of variability for each year since we have multiple replicates.\nWe leave this as an exercise for the reader.\nPlot species richness\nWe can plot this data frame to see the changes over time.\n\n\nShow code\n\npacman::p_load(png, grid, ggplot2)\nimg <- readPNG(\"logging.png\")\ng <- rasterGrob(img, interpolate=TRUE)\n\n\nggplot()+\n  geom_vline(xintercept=1997, linetype=2, color=\"red\", size=2)+\n  geom_point(richness_high, mapping=aes(x=year, y=richness), alpha=0.5)+\n  geom_pointrange(richness_high, mapping=aes(x=year, y=richness), size=2, stat=\"summary\")+\n  theme_classic()+\n  labs(y=\"Species Richness\", x=\"Year\")+\n   annotation_custom(g, xmin=1996.5, xmax=1997.5, ymin=20, ymax=30)\n\n\n\nFigure 12: Species richness of aquatic macroinvertebrates over time. Each point is a replicate\n\n\n\nHere is a plot of species richness, with a different value for each replicate.\nThe red line is the year that the streams were logged.\nDo you see any change?\nDo you think there are any significant patterns?\nHow does the variability between replicates compare to the variability between years?\nPlot evenness\nWe can also plot species evenness over time.\n\n\nShow code\n\nggplot()+\n  geom_vline(xintercept=1997, linetype=2, color=\"red\", size=2)+\n  geom_point(richness_high, mapping=aes(x=year, y=SimpsonEvenness), alpha=0.5)+\n  geom_pointrange(richness_high, mapping=aes(x=year, y=SimpsonEvenness), size=2, stat=\"summary\")+\n  theme_classic()+\n  labs(y=\"Species Evenness\", x=\"Year\")+\n   annotation_custom(g, xmin=1996.5, xmax=1997.5, ymin=0.57, ymax=0.75)\n\n\n\nFigure 13: Species evenness of aquatic macroinvertebrates over time. Each point is a replicate\n\n\n\nDo you see any patterns in the evenness between years?\n\nBiodiversity metrics\nSpecies richness and evenness are very effective ways to simplify highly complex biodiversity datasets.\nHowever, as you learned from the rank abundance curves, species have different abundances within the community, with some species having very high abundance and most species having low abundance.\nAs a result, it is difficult to precisely estimate species richness, since more species can often be uncovered by additional sampling.\nThe Shannon-Weiner diversity metric addresses this shortcoming to some extent by taking species abundance into account, which allows us to make more meaningful inferences about how biodiversity is changing over time.\nThe codyn package allows us to calculate the Shannon diversity index for a single site over time using the community_diversity() function.\n\nCalculate Shannon diversity\nWe will again use the data from the stream with the high logging intensity.\nLuckily, this function has the exact same syntax as the community_structure() function!\nThe only difference is that the options for the metric argument are Shannon and InverseSimpson.\nWe will first use Shannon, which gives more weight to species richness, as opposed to evenness.\n\n\nshannon_div_high<-\n  community_diversity(\n    df=subset_codyn_high, \n    time.var=\"year\", \n    abundance.var=\"abundance\", \n    replicate.var=\"replicate\", \n    metric=\"Shannon\")\n\n\nLet’s take a look at the output for this function.\n\n\nhead(shannon_div_high)\n\n  year replicate  Shannon\n1 1995         1 1.836002\n2 1996         1 2.044210\n3 1997         1 2.107977\n4 1998         1 2.016146\n5 1999         1 1.948510\n6 2001         1 2.297970\n\nYou can see it gives us a data frame of year, replicate, and Shannon, which is our measure of Shannon diversity.\nPlot Shannon diversity\n\n\nShow code\n\nggplot()+\n  geom_vline(xintercept=1997, linetype=2, color=\"red\", size=2)+\n  geom_point(shannon_div_high, mapping=aes(x=year, y=Shannon), alpha=0.5)+\n  geom_pointrange(shannon_div_high, mapping=aes(x=year, y=Shannon), size=2, stat=\"summary\")+\n  theme_classic()+\n  labs(y=\"Shannon Diversity\", x=\"Year\")+\n   annotation_custom(g, xmin=1996.25, xmax=1997.75, ymin=2.22, ymax=2.5)\n\n\n\nFigure 14: Shannon’s diversity of aquatic macroinvertebrates over time. Each point is a replicate.\n\n\n\n\n\nCalculate Simpon diversity\nWe can also use the same function to calculate Simpson’s diversity by simply changing the metric argument to InverseSimpson.\nSimpson diversity gives more weight to species evenness, as opposed to species richness.\n\n\nsimpson_div_high <- \n  community_diversity(\n    df=subset_codyn_high, \n    time.var=\"year\", \n    abundance.var=\"abundance\", \n    replicate.var=\"replicate\", \n    metric=\"InverseSimpson\")\n\n\nWe can look at the output.\n\n\nhead(simpson_div_high)\n\n  year replicate InverseSimpson\n1 1995         1       3.757421\n2 1996         1       6.364238\n3 1997         1       5.498534\n4 1998         1       5.016063\n5 1999         1       5.310341\n6 2001         1       6.122265\n\nPlot Simpson diversity\nAnd then plot.\n\n\nShow code\n\nggplot()+\n  geom_vline(xintercept=1997, linetype=2, color=\"red\", size=2)+\n  geom_point(simpson_div_high, mapping=aes(x=year, y=InverseSimpson), alpha=0.5)+\n  geom_pointrange(simpson_div_high, mapping=aes(x=year, y=InverseSimpson), size=2, stat=\"summary\")+\n  theme_classic()+\n  labs(y=\"Simpson Diversity\", x=\"Year\")+\n   annotation_custom(g, xmin=1996.5, xmax=1997.5, ymin=8, ymax=10)\n\n\n\nFigure 15: Simpson’s diversity of aquatic macroinvertebrates over time. Each point is a replicate\n\n\n\nHow do these patterns compare to the patterns of Shannon’s diversity over time?\nHow do the values compare?\n\nActivity\nCalculate richness, evenness, and diversity using both the Shannon and Simpson indices for the streams with low intensity logging, high intensity logging, and no logging.\nThe data for these streams are subset_codyn_low, subset_codyn_high, and subset_codyn_ctrl.\nPlot these indices.\nDo you see any patterns across years?\nHow do these compare to the patterns in the high intensity logging stream?\nConclusion\nIn this tutorial, we learned how to go about understanding patterns of biodiversity graphically (e.g., rank-abundance curves), and using metrics (e.g., species richness, Shannon index, Simpson’s index, Evenness index(es)).\nWe first calculated metrics without using specialized R packages, and then used the codyn package to do the same thing more easily.\nSince we don’t perform any formal statistical analysis in this tutorial, we cannot make any scintific claims about the effect of logging on invertebrate biodiversity in the Turkey Lakes watershed.\nNevertheless, our preliminary analysis do not lead us to believe that there is a great effect of logging.\nWe encourage you to think of alternative ways to look at the data that may yield different results.\nIndeed, because of the wealth of data, combined with different metrics and considerations, there is no single “best” way to analyse this type of data.\nHowever, multiple different analysis can allow one to have a more complete understanding of the patterns of biodiversity.\n\n\n\nEPA. 2022. “Indicators: Benthic Macroinvertebrates.” October 17, 2022. https://www.epa.gov/national-aquatic-resource-surveys/indicators-benthic-macroinvertebrates.\n\n\nGBIF.org. 2022. “GBIF Home Page.” October 17, 2022. https://www.gbif.org.\n\n\nHallett, Lauren M., Sydney K. Jones, A. Andrew M. MacDonald, Matthew B. Jones, Dan F. B. Flynn, Julie Ripplinger, Peter Slaughter, Corinna Gries, and Scott L. Collins. 2016. “Codyn : An R Package of Community Dynamics Metrics.” Edited by Timothée Poisot. Methods in Ecology and Evolution 7 (10): 1146–51. https://doi.org/10.1111/2041-210x.12569.\n\n\nKreutzweiser, David P., Scott S. Capell, and Kevin P. Good. 2005. “Macroinvertebrate Community Responses to Selection Logging in Riparian and Upland Areas of Headwater Catchments in a Northern Hardwood Forest.” Journal of the North American Benthological Society 24 (1): 208–22. https://doi.org/10.1899/0887-3593(2005)024<0208:mcrtsl>2.0.co;2.\n\n\nLoreau, M., S. Naeem, P. Inchausti, J. Bengtsson, J. P. Grime, A. Hector, D. U. Hooper, et al. 2001. “Biodiversity and Ecosystem Functioning: Current Knowledge and Future Challenges.” Science 294 (5543): 804–8. https://doi.org/10.1126/science.1064088.\n\n\nMacDonald, Zachary G., Scott E. Nielsen, and John H. Acorn. 2016. “Negative Relationships Between Species Richness and Evenness Render Common Diversity Indices Inadequate for Assessing Long-Term Trends in Butterfly Diversity.” Biodiversity and Conservation 26 (3): 617–29. https://doi.org/10.1007/s10531-016-1261-0.\n\n\nRDocumentation. 2022. “Radfit: Rank – Abundance or Dominance / Diversity Models.” October 17, 2022. https://www.rdocumentation.org/packages/vegan/versions/2.4-2/topics/radfit.\n\n\nRoswell, Michael, Jonathan Dushoff, and Rachael Winfree. 2021. “A Conceptual Guide to Measuring Species Diversity.” Oikos 130 (3): 321–38. https://doi.org/10.1111/oik.07202.\n\n\nWebster, Kara L., Jason A. Leach, Paul W. Hazlett, Robert L. Fleming, Erik J. S. Emilson, Daniel Houle, Kara H. Y. Chan, et al. 2021. “Turkey Lakes Watershed, Ontario, Canada: 40 Years of Interdisciplinary Whole-Ecosystem Research.” Hydrological Processes 35 (4). https://doi.org/10.1002/hyp.14109.\n\n\nWikipedia. 2022a. “Baetis — Wikipedia, the Free Encyclopedia.” http://en.wikipedia.org/w/index.php?title=Baetis&oldid=1094891032.\n\n\n———. 2022b. “Chironomidae — Wikipedia, the Free Encyclopedia.” http://en.wikipedia.org/w/index.php?title=Chironomidae&oldid=1119637014.\n\n\n\n\n",
    "preview": "lessons/2022-08-26-species-richness-rank-abundance-curves/distill-preview.png",
    "last_modified": "2024-01-30T14:22:28-08:00",
    "input_file": {}
  },
  {
    "path": "lessons/2022-06-03-chronic-wasting-disease/",
    "title": "Disease Modelling in Mule Deer",
    "description": "This interactive tutorial explores how a simple compartmental model (the SI model) can be used to track and predict the spread of Chronic Wasting Disease (CWD) in Albertan mule deer over time. It begins by introducing CWD and why it is a growing problem in Albertan mule deer. It then investigates and explains how different levels of transmission, death, and culling can change disease dynamics. Students can test how these different parameters influence the spread of CWD using the sliders on each page.",
    "author": [
      {
        "name": "Amy Forsythe",
        "url": {}
      },
      {
        "name": "Bryn Wiley",
        "url": {}
      }
    ],
    "date": "2022-06-03",
    "categories": [],
    "contents": "\n\n\n\n\n\n\n",
    "preview": {},
    "last_modified": "2023-07-20T12:46:52-07:00",
    "input_file": {}
  },
  {
    "path": "lessons/2022-04-07-alberta-trees-tutorial/",
    "title": "Tree Diversity & Dendrochronology in Alberta, BC Forests",
    "description": "This tutorial allows students to estimate and visualize vascular plant diversity along space and the environment as well as tree ring dynamics over time.",
    "author": [
      {
        "name": "Jhoan Chavez",
        "url": {}
      },
      {
        "name": "Zihaohan Sang",
        "url": {}
      },
      {
        "name": "Rolando Trejo Pérez",
        "url": {}
      }
    ],
    "date": "2022-04-07",
    "categories": [],
    "contents": "\n\n\n\n\n\n\n",
    "preview": {},
    "last_modified": "2024-01-30T14:19:37-08:00",
    "input_file": {}
  },
  {
    "path": "lessons/2022-04-07-anticosti-historical-data-tutorial/",
    "title": "Community Ecology: Hemlock Looper Outbreak on Anticosti Island",
    "description": "Impacts of a hemlock looper outbreak on tree species in Anticosti Island, 1973.",
    "author": [
      {
        "name": "Victoria Marie Glynn",
        "url": "mailto:victoria.glynn@mail.mcgill.ca"
      },
      {
        "name": "Maxime Fraser Franco",
        "url": "mailto:fraser_franco.maxime@courrier.uqam.ca"
      }
    ],
    "date": "2022-04-07",
    "categories": [],
    "contents": "\nThis tutorial uses a tree damage dataset from Anticosti Island during a hemlock looper outbreak in 1973. The dataset can be found on the government of Canada’s official data portal. We would like to thank Anne Cotton-Gagnon, MSc, and Christian Hébert, PhD, from Natural Resources Canada and the Laurentian Forestry Centre for their insights on the original datasets and access to the reports and maps associated with such.\nThe tutorial was built with the free and open-source software environment R using the leanr package and and deployed using Shiny. You can find the project folders and files in this GitHub repository.\nThe present tutorial was developed by Victoria Marie Glynn who is a PhD student at McGill University in Montréal, Québec, and Maxime Fraser Franco who is a PhD student at the Université du Québec à Montréal (UQAM) in Montréal, Québec. Please feel free to contact us if you have any question (you can do that by clicking on our names on this page header).\n\n\n\n\n\n\n",
    "preview": {},
    "last_modified": "2023-07-20T12:46:52-07:00",
    "input_file": {}
  },
  {
    "path": "lessons/2022-04-07-sexual-dimorphism-and-sexual-selection/",
    "title": "Sexual Dimorphism and Sexual Selection in Tree Swallows",
    "description": "This is a tutorial to get you familiar with R and explore ecological concepts through a Tree Swallow nest productivity dataset. Please download the accompanying RMarkdown file and data to follow along with this tutorial in R.",
    "author": [
      {
        "name": "Elizabeth Houghton",
        "url": {}
      },
      {
        "name": "Kirsten Palmier",
        "url": {}
      }
    ],
    "date": "2022-04-07",
    "categories": [],
    "contents": "\n\nContents\nFollow along in RStudio!\nTutorial learning objectives\nBackground\nThe dataset\n\nImporting data and packages\nSexual dimorphism in Tree Swallows\nAspects of Tree Swallow Life History\nTrade-offs\nLife history trade-offs\nDo larger birds have bigger clutches?\n\nChanges through time\nTake-homes\n\nFollow along in RStudio!\nFor this tutorial, you have the option to follow along online or you can download the R Markdown file and datasets and follow along and practice coding in RStudio. To follow along in RStudio, download the following files:\n\nDownload required RMarkdown file\n\n\nDownload required data\n\nNext, you must unzip the folder containing the datasets (TRES) and place the “tree-swallow-dataset.Rmd” R Markdown file into a new folder (e.g. folder name: “Tree-Swallows-tutorial”) with the datasets folder (TRES). An example file structure is depicted below:\n\nNOTE: in order for this tutorial to run in RStudio, you must follow the file structure above. Your .Rmd file must be labeled “sexual-dimorphism-and-sexual-selection.Rmd” and the datasets folder must be labeled “TRES”. Make sure you do not use spaces or special characters in your folder name either as good practice!\nTutorial learning objectives\nIn this tutorial, you will:\nIdentify if sexual dimorphism is present in a population of Tree Swallows found in Long Point, Ontario, Canada\nExplore some of the life history traits of Tree Swallows\nEvaluate trade-offs between the number of clutches a bird may have and the number of eggs in each clutch\nEvaluate how the sampled population of Tree Swallow’s birth rates have changed over time\nBackground\nThe dataset\nLooking to explore the dataset used in this tutorial more in-depth? Check out this tutorial where we use the Tree Swallow Dataset to learn about basic R functions and making plots in R.\nThe Tree Swallow (Tachycineta bicolor) is one of the most common birds in eastern North America that normally nests in tree cavities excavated by other species like woodpeckers, but also readily accepts human made nest boxes. Based on this quality and their abundance, Birds Canada has monitored nest boxes of Tree Swallows around the Long Point Biosphere Reserve, Ontario, Canada, from 1974 to 2014. Each summer, volunteer research assistants check nest box contents daily, and band the adults and their young. Nest-box records are available from about 300 boxes from 3-4 sites during this period. Data collected includes nest box observations, clutch initiation dates, clutch size and egg weight, nest success, weather, insect abundance, and banding data. Clutch here refers to the total eggs a bird lays in a nesting attempt. This dataset includes all data entry related to eggs, nests, nestlings, nest check observations, and banding data from 1977 to 2014. More information on this dataset can be found here.\nAdditionally, in 2021, this dataset was quality checked and made open access by Jonathan Diamond through a Data Rescue internship with the Living Data Project, an initiative through the Canadian Institute of Ecology and Evolution that rescues legacy datasets.\nThrough Bird Studies Canada, Long Point Bird Observatory monitored three nest box colonies of Tree Swallows.\n\n\n\n\n\nTree Swallows utilising a nest box. Photo by Peter Ward. Image from Nature Vancouver.\nFor this tutorial we will be looking at the banding dataset which adults were trapped sometime between the first young hatch and when they were 12 days old. All adult birds are banded, unless previously banded. Plumage color was recorded, age/sex designations were assigned, and a variety of size measurements were taken.\nPlumage Colour\nColour Code\nAge\nDescription\nBLU\nBlue\nMore than 90% of the upper parts iridescent blue-green\nINT\nIntermediate\nMore than 50% up to 90% of upper parts iridescent blue-green (remainder dull brown or brown tinged with green)\nBRN\nBrown\nUp to 50% of upper parts iridescent blue-green (remainder > 50% dull brown or brown tinged with green)\nAge Description\nAge Code\nAge\nDescription\nJUV\nJuvenile\na recently hatched bird, prior to it’s preformative moult\nHY\nHatch Year\na bird hatched earlier the same year\nAHY\nAfter Hatch Year\na bird hatched in a previous year\nSY\nSecond Year\na bird in its second calendar year\nASY\nAfter Second Year\na bird beyond it’s second year\nTY\nThird Year\na bird in it’s thrid year\nATY\nAfter Third Year\na bird beyond it’s third year\nSex Categories\nSex Code\nSex\nM\nMale\nF\nFemale\nMeasurements of Size and Weight\nMeasure\nExplanation\nwing_chord\nwing_chord length measurement in mm\nwing_flat\nwing_flat measurement in mm\ntail\ntail length measurement in mm\np_9\nlength of the 9th primary, or the outer primary feather, measured in mm\n\nAdults are blue-green above with white below with blacking flight feathers (A). First year females may be brownish above with hints of blue-green (B); adult females can be nearly blue-green as males. Photos courtesy of Max Nootbaar from the Macaulay Library (A), Macaulay Library (B).\nImporting data and packages\nIn this tutorial, we will be working with Tree Swallow data collected by Bird Studies Canada, Long Point Bird Observatory as well as a few additional packages. Run the following code to import the required packages and pull in the dataset that we will be working with throughout this tutorial.\n\n\n# load the following packages\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(tidyr)\nlibrary(lubridate)\nlibrary(reshape)\nlibrary(readr)\nlibrary(ggpubr)\nlibrary(distill)\n\n# Here we are pulling the actual datasets into R\nbanding <- read.csv(\"TRES/banding_final.csv\")\nbanding_nest <- read.csv(\"TRES/banding_nest_final.csv\")\nnest <- read.csv(\"TRES/nest_final.csv\")\n\n\nDouble check that the class of our data are in the correct format.\n\n\n# Now, we want to make sure the class of our data is correct before we move forward:\nstr(banding)\n\n'data.frame':   1602 obs. of  13 variables:\n $ band_or_recapture: chr  \"R\" \"R\" \"R\" \"R\" ...\n $ band_number      : num  1831 1881 2171 1881 2351 ...\n $ sex              : chr  \"F\" \"F\" \"F\" \"M\" ...\n $ colour           : chr  \"BLU\" \"BLU\" \"BLU\" \"BLU\" ...\n $ wing_chord       : num  116 115 112 123 118 123 110 111 112 117 ...\n $ wing_flat        : num  119 119 114 124 119 125 112 113 114 118 ...\n $ tail             : num  58 54 55 60 58 56 55 52 55 54 ...\n $ p_9              : int  89 90 88 96 92 97 89 87 90 92 ...\n $ weight           : num  22 19.6 21.5 21.1 22.1 20.5 20 21.6 19.8 20.5 ...\n $ date             : chr  \"2010-06-01\" \"2010-06-01\" \"2010-06-01\" \"2010-06-01\" ...\n $ nest_box         : chr  \"PT4G\" \"PT2F\" \"PT15G\" \"PT4G\" ...\n $ age_code         : chr  \"ASY\" \"ASY\" \"ASY\" \"AHY\" ...\n $ year             : int  2010 2010 2010 2010 2010 2010 2010 2010 2010 2010 ...\n\n# lets go ahead and convert the sex and nest_box column class into factors:\nbanding$sex <- as.factor(banding$sex)\nbanding$nest_box <- as.factor(banding$nest_box)\nstr(banding_nest)\n\n'data.frame':   1002 obs. of  16 variables:\n $ band_number        : num  1671 1672 1672 1771 1771 ...\n $ year               : int  2010 2010 2010 2010 2010 2011 2011 2012 2010 2011 ...\n $ sex                : chr  \"M\" \"F\" \"F\" \"F\" ...\n $ colour             : chr  \"BLU\" \"BLU\" \"BLU\" \"BLU\" ...\n $ wing_chord         : num  116 120 118 120 116 115 114 109 112 115 ...\n $ wing_flat          : num  117 121 119 121 118 117 116 111 114 119 ...\n $ tail               : num  55 47 53 52 54 55 58 60 46 56 ...\n $ p_9                : int  89 92 93 95 91 95 88 88 92 91 ...\n $ weight             : num  20 22.5 23.8 19.7 19.5 ...\n $ date               : chr  \"2015-06-01\" \"2015-06-01\" \"2017-06-01\" \"2017-06-01\" ...\n $ nest_box           : chr  \"PT16I\" \"PT16I\" \"PT19F\" \"PT09F\" ...\n $ clutch_size        : int  6 6 5 6 4 3 6 6 4 5 ...\n $ clutch_number      : int  1 1 1 1 1 1 1 1 1 1 ...\n $ no_of_young_fledged: int  6 6 4 4 4 1 4 6 4 5 ...\n $ number_hatch       : int  6 6 4 4 4 2 6 6 4 5 ...\n $ location           : chr  \"PT\" \"PT\" \"PT\" \"PT\" ...\n\nNow lets go ahead and fix the class of location, nest_code, and location:\n\n\nShow code\n\n# fix class\nbanding_nest$location <- as.factor(banding_nest$location)\nstr(banding_nest)\n\n'data.frame':   1002 obs. of  16 variables:\n $ band_number        : num  1671 1672 1672 1771 1771 ...\n $ year               : int  2010 2010 2010 2010 2010 2011 2011 2012 2010 2011 ...\n $ sex                : chr  \"M\" \"F\" \"F\" \"F\" ...\n $ colour             : chr  \"BLU\" \"BLU\" \"BLU\" \"BLU\" ...\n $ wing_chord         : num  116 120 118 120 116 115 114 109 112 115 ...\n $ wing_flat          : num  117 121 119 121 118 117 116 111 114 119 ...\n $ tail               : num  55 47 53 52 54 55 58 60 46 56 ...\n $ p_9                : int  89 92 93 95 91 95 88 88 92 91 ...\n $ weight             : num  20 22.5 23.8 19.7 19.5 ...\n $ date               : chr  \"2015-06-01\" \"2015-06-01\" \"2017-06-01\" \"2017-06-01\" ...\n $ nest_box           : chr  \"PT16I\" \"PT16I\" \"PT19F\" \"PT09F\" ...\n $ clutch_size        : int  6 6 5 6 4 3 6 6 4 5 ...\n $ clutch_number      : int  1 1 1 1 1 1 1 1 1 1 ...\n $ no_of_young_fledged: int  6 6 4 4 4 1 4 6 4 5 ...\n $ number_hatch       : int  6 6 4 4 4 2 6 6 4 5 ...\n $ location           : Factor w/ 3 levels \"MC\",\"PT\",\"SL\": 2 2 2 2 3 3 3 3 1 1 ...\n\nShow code\n\n# fix class\nnest$nest_code <- as.factor(nest$nest_code)\nnest$location <- as.factor(nest$location)\n\n\nSexual dimorphism in Tree Swallows\nSexual dimorphism is defined as the phenotypic variations within different sexes of the same species ( Andersson and Iwasa 1998). Differences can include size, weight, plumage (in birds). These differences are thought to arise through species that are part of a social mating system, in which there may be varying degrees of parental care ( Darwin 1871; Wallace 1889; Andersson and Iwasa 1998 ). This phenomenon is often seen in birds, where males are the larger sex and have more ornate plummage than females.\n\nImage from ThoughtCo.\nQuestions\nWhy do you think this phenomenon happens?\nWhy are females generally more drab?\nIn which instance to you think females would be more ornate than males? Can you think of some examples?\nTo determine if sexual dimorphism exists in this Tree Swallow data we will get you to explore the average size measurements taken for each bird. Since birds were tracked using a band number, and birds may have been captured multiple times throughout their life, we will observe the differences in average size measurement taken for each bird.\n\n\nShow code\n\n# look at the following variable to see how they differ by gender : wing_chord, tail, and weight\n# will will take the mean of these measurements by band_number and gender\nwing_chord <- aggregate(wing_chord ~ band_number + sex, banding, mean)\n# Boxplot of these trends based on sex\nggplot(wing_chord, aes(factor(sex), wing_chord, fill=sex)) + \n  geom_boxplot() +\n  scale_fill_manual(\"\", values=c(\"M\"= \"lightskyblue\", \"F\"= \"plum3\")) + \n  xlab('') +\n  ylab('Wing Chord Length (mm)') +\n  ggtitle(\"Wing Chord Length vs. Sex\") + \n  theme_bw() # this changes the background colour of the plot\n\n\n\nNice job! It looks like there is a difference between males and females in terms of wing chord measurements. Before moving forward, try measuring tail length and weight on your own. You’ll see we have included what your graphs should look like below for both tail and weight means by sex.\nHint: Look at the example we just ran using the aggregate function first, then plot with ggplot.\n\n\nShow code\n\n# Lets go ahead and try calculating the mean tail length and weight by sex and band number and graph boxplots of these values:\n#### these are the answers ###\ntail <- aggregate(tail ~ band_number + sex, banding, mean)\nweight <- aggregate(weight ~ band_number + sex, banding, mean)\nggplot(tail, aes(factor(sex), tail, fill=sex)) + \n  geom_boxplot() +\n  scale_fill_manual(\"\", values=c(\"M\"= \"lightskyblue\", \"F\"= \"plum3\")) + \n  xlab('') +\n  ylab('Tail Length (mm)') +\n  ggtitle(\"Tail Length vs. Sex\") + \n  theme_bw() # this changes the background colour of the plot\n\n\nShow code\n\nggplot(weight, aes(factor(sex), weight, fill=sex)) + \n  geom_boxplot() +\n  scale_fill_manual(\"\", values=c(\"M\"= \"lightskyblue\", \"F\"= \"plum3\")) + \n  xlab('') +\n  ylab('Weight (g)') +\n  ggtitle(\"Bird Weight vs. Sex\") + \n  theme_bw() # this changes the background colour of the plot\n\n\n\nNow, to get a sense of how much the wind chord length, tail length, and weight differs between male (M) and female (F) Tree Swallows lets find the mean value for each.\n\n\nShow code\n\n# can calculate the mean female and male wing flat length like this (using aggregate()) or could subset by sex and then calculate\nwing_chord.avg <- aggregate(wing_chord ~ sex, banding, mean)\nwing_chord.avg\n\n  sex wing_chord\n1   F   113.5844\n2   M   118.1836\n\nCalculate the tail and weight average on your own. Cross reference your calculations with the ones below.\n\n\nShow code\n\ntail.avg <- aggregate(tail ~ sex, banding, mean)\nweight.avg <- aggregate(weight ~ sex, banding, mean)\ntail.avg\n\n  sex     tail\n1   F 54.34467\n2   M 55.70160\n\nShow code\n\nweight.avg\n\n  sex   weight\n1   F 20.41623\n2   M 20.75646\n\nBefore we head to our next section, check out this ornate mating dance between males and female birds of paradise. Note the sexual dimorphism between the males and females!\n\n\n\n\n\n\n\nQuestions\nWhat is the average wing chord length, tail length, and weight of the male Tree Swallows?\nWhat is the average wing chord length, tail length, and weight of the female Tree Swallows?\nDo these findings suggest that there is some level of sexual dimorphism in Tree Swallows?\nWhat type of pressures could lead to sexual dimorphism in Tree Swallows?\n\n\nShow code\n\n# Answers\n\n# Male Tree Swallows:\n# average wing chord length = 118.18 mm\n# average tail length = 55.70 mm\n# average weight = 20.76 g\n\n# Female Tree Swallows:\n# average wing chord length = 113.58 mm\n# average tail length = 54.34 mm\n# average weight = 20.41 g\n\n\nAspects of Tree Swallow Life History\nHow and why do organisms evolve over time? How does natural selection, and other evolutionary forces, shape organisms over time so that they are more likely to survive and reproduce? These are some pretty big questions that Life History Theory tries to answer. Although we won’t dive into all aspects of life history with our Tree Swallow datasets, we will explore some possible connections including: trade-offs between clutch size and clutch number, whether or not bigger birds produce larger clutches, and if clutch sizes have changed over time.\nTrade-offs\nTrade-offs exist when “an increase in one life history trait (improving fitness) is coupled to a decrease in another life history trait (reducing fitness), so that the fitness benefit through increasing trait 1 is balanced against a fitness cost through decreasing trait 2” (Fabian and Flatt, 2012). Traits can either be described as negative phenotypic, or genetic correlations between fitness components of individuals in a given population. Trade-offs are generally caused by limited resources, and competition for these resources, to one life history trait verses the other within an individual. For example, an organism might have a relatively short lifespan–but produce many offspring, or vice versa (think about mayflies vs. elephants for example).\nLife history trade-offs\n\n(Image and descriptions adapted from Fabian and Flatt 2012)\nA negative genetic (or phenotypic) correlation, i.e. a trade-off, between reproduction (e.g., # of eggs produced) and adult survival, one of the most commonly found negative relationships between life history traits.\nThe so-called Y model of resource allocation trade-offs. In this example, a limited resource (e.g., a nutrient) is acquired and deferentially (competitively) allocated (invested) into physiological processes that affect survival at the expense of investment into reproductive functions (e.g., egg production, fecundity).\nA useful way of thinking about resource allocation trade-offs is to imagine the life history as being a pie where each pie slice represents how an organism has to allocate its resources amongst different aspects like growth, maintenance, survival, reproduction, and storage.\nTo visualize whether there may be a trade off between clutch size and the number of clutches in a nest lets visualize these factors in a box plot. The nest dataset contains records of the clutch numbers found in nest boxes across Long Point dating back to 1987! Lets take a quick look at the dataset first to figure out what we need to plot.\n\n\nShow code\n\nhead(nest)\n\n  year nest_box clutch_number location nest_code clutch_size\n1 1987     MC02             2       MC MC1987M02           3\n2 1987     MC03             1       MC MC1987M03           5\n3 1987     MC04             1       MC MC1987M04           4\n4 1987     MC07             1       MC MC1987M07           5\n5 1987     MC08             1       MC MC1987M08           6\n6 1987     MC10             1       MC MC1987M10           5\n\nNext, we want to look at how clutch size (clutch_size) may vary between the first and second clutch (clutch_number).\n\n\nShow code\n\nggplot(nest, aes(factor(clutch_number), clutch_size)) + \n  geom_boxplot(outlier.colour=\"black\", outlier.size=0.5, position = position_dodge(preserve = \"single\")) +\n  xlab('Clutch Number') +\n  ylab('Clutch Size') +\n  ggtitle(\"Clutch Size vs. Clutch Number\") +\n  scale_y_continuous(breaks = seq(0, 13, by = 1)) +\n  theme(plot.title = element_text(hjust = 0.5)) + \n  theme_bw() # this changes the background colour of the plot\n\n\n\nLets look at how we would calculate the average clutch size for clutch number 1 and 2.\n\n\nShow code\n\naggregate(clutch_size ~ clutch_number, nest, mean)\n\n\nQuestion\nWhat is the average clutch size for the first and second clutches?\n\n\nShow code\n\n# Answer\n# Average size for the first clutch = 5.61\n# Average size for the second clutch = 4.80\n\n\nYou may have noticed that the second clutches are slightly smaller than the first clutches! However, in order to confirm that there is a statistically significant difference between the two clutch sizes you would need to complete some sort of statistical analysis (e.g a t-test).\nDo larger birds have bigger clutches?\nIs the size and weight of the bird at maturity related to the clutch size? Lets look at wing chord length, tail length, and bird weight to investigate this and lets separate our analysis my male and female birds\nFirst, lets find the mean wing chord length when grouped by year, nest_box, sex, clutch_number, clutch_size and band number.\n\n\nShow code\n\n# wing_chord\nbanding_nest.wing_chord <- aggregate(wing_chord ~ year + sex + nest_box + clutch_number + band_number + clutch_size, banding_nest, mean)\nhead(banding_nest.wing_chord)\n\n  year sex nest_box clutch_number band_number clutch_size wing_chord\n1 2010   F    PT11K             1    1831.384           2        121\n2 2010   M    PT11K             1    1881.064           2        125\n3 2012   M     MC01             2    2401.772           2        116\n4 2012   F     MC14             1    2401.772           2        118\n5 2012   F     MC59             1    2401.772           2        118\n6 2012   M     MC14             1    2401.779           2        119\n\nShow code\n\n# next, you need to double check your data are still in the right class\nstr(banding_nest.wing_chord)\n\n'data.frame':   947 obs. of  7 variables:\n $ year         : int  2010 2010 2012 2012 2012 2012 2011 2011 2012 2011 ...\n $ sex          : chr  \"F\" \"M\" \"M\" \"F\" ...\n $ nest_box     : chr  \"PT11K\" \"PT11K\" \"MC01\" \"MC14\" ...\n $ clutch_number: int  1 1 2 1 1 1 1 1 1 1 ...\n $ band_number  : num  1831 1881 2402 2402 2402 ...\n $ clutch_size  : int  2 2 2 2 2 2 3 3 3 3 ...\n $ wing_chord   : num  121 125 116 118 118 119 115 111 117 115 ...\n\nShow code\n\nbanding_nest.wing_chord$sex <- as.factor(banding_nest.wing_chord$sex)\nbanding_nest.wing_chord$nest_box <- as.factor(banding_nest.wing_chord$nest_box )\n\n\nLets see if we see any patterns between the number of eggs there are per clutch (clutch_size) and the weight or size of the parent Tree Swallow.\n\n\nShow code\n\nplot(clutch_size ~ wing_chord, banding_nest.wing_chord,\n     main=\"Clutch Size vs Parent Wing Chord Length\",\n     pch=20,\n     col=sex,\n     xlab=\"Wing Chord Length (mm)\", \n     ylab=\"Clutch Size\")\nlegend(\"topright\", legend= levels(banding_nest.wing_chord$sex),\n       col= 1:2, pch = 20, cex=0.9)\n\n\n\nNow, you look at tail and weight variables. Compare your results to the results below.\nHint Use similar code to the code above, but change the variables to reflect what you are intersted in looking at.\n\n\nShow code\n\n# tail\nbanding_nest.tail <- aggregate(tail ~ year + sex + nest_box + clutch_number + band_number + clutch_size, banding_nest, mean)\n# weight\nbanding_nest.weight <- aggregate(weight ~ year + sex + nest_box + clutch_number + band_number + clutch_size, banding_nest, mean)\n\n# next, you need to double check your data are still in the right class\nstr(banding_nest.tail)\n\n'data.frame':   947 obs. of  7 variables:\n $ year         : int  2010 2010 2012 2012 2012 2012 2011 2011 2012 2011 ...\n $ sex          : chr  \"F\" \"M\" \"M\" \"F\" ...\n $ nest_box     : chr  \"PT11K\" \"PT11K\" \"MC01\" \"MC14\" ...\n $ clutch_number: int  1 1 2 1 1 1 1 1 1 1 ...\n $ band_number  : num  1831 1881 2402 2402 2402 ...\n $ clutch_size  : int  2 2 2 2 2 2 3 3 3 3 ...\n $ tail         : num  52 48 55 52 58 60 55 57 60 55 ...\n\nShow code\n\nbanding_nest.tail$sex <- as.factor(banding_nest.tail$sex)\nbanding_nest.tail$nest_box <- as.factor(banding_nest.tail$nest_box )\n\nstr(banding_nest.weight)\n\n'data.frame':   947 obs. of  7 variables:\n $ year         : int  2010 2010 2012 2012 2012 2012 2011 2011 2012 2011 ...\n $ sex          : chr  \"F\" \"M\" \"M\" \"F\" ...\n $ nest_box     : chr  \"PT11K\" \"PT11K\" \"MC01\" \"MC14\" ...\n $ clutch_number: int  1 1 2 1 1 1 1 1 1 1 ...\n $ band_number  : num  1831 1881 2402 2402 2402 ...\n $ clutch_size  : int  2 2 2 2 2 2 3 3 3 3 ...\n $ weight       : num  21.2 22.8 19.3 20.9 21.5 ...\n\nShow code\n\nbanding_nest.weight$sex <- as.factor(banding_nest.weight$sex)\nbanding_nest.weight$nest_box <- as.factor(banding_nest.weight$nest_box )\n\n\nplot(clutch_size ~ tail, banding_nest.tail,\n     main=\"Clutch Size vs Parent Tail Length\",\n     pch=20,\n     col=sex,\n     xlab=\"Tail Length (mm)\", \n     ylab=\"Clutch Size\")\nlegend(\"topright\", legend= levels(banding_nest.tail$sex),\n       col= 1:2, pch = 20, cex=0.9)\n\n\nShow code\n\nplot(clutch_size ~ weight,banding_nest.weight,\n     main=\"Clutch size vs Parent Bird Weight\",\n     pch=20,\n     col=sex,\n     xlab=\"Weight (g)\", \n     ylab=\"Clutch Size\")\nlegend(\"topright\", legend= levels(banding_nest.weight$sex),\n       col= 1:2, pch = 20, cex=0.9)\n\n\n\nChanges through time\nCould bird communities be changing over time as a result of climate change or other environmental shifts? Lets observe if the average clutch size over time is changing. First we want to take the average clutch size that was sampled from all of the nest boxes each year.\n\n\nShow code\n\nnest.average <- aggregate(clutch_size ~ year, nest, mean)\n#Then, we'll run a linear regression to test the relationship between clutch size and year. \nlm_clutch_size <- summary(lm(clutch_size ~ year, data= nest.average))\nr2_0 <- lm_clutch_size$r.squared # for R-squared labels\nrlabel_0 <- bquote(italic(R)^2 == .(format(r2_0, digits = 3)))\nplot(clutch_size ~ year, data=nest.average,\n     main=\"Yearly Average Clutch Size over Time\",\n     pch=16,\n     xlab=\"Year\", \n     ylab=\"Yearly Average Clutch Size\",\n     cex.main=1.25, \n     cex.lab=1)\nabline(lm(clutch_size ~ year, data=nest.average))\ntext(2010, 6.2, rlabel_0)\n\n\n\nIt may appear that the average clutch size is declining overtime however when looking at the \\(R^2\\) value of this linear regression we can see that this relationship is not a strong one. \\(R^2\\) is known as the coefficient of determination and it is a goodness of fit measure for linear regression models. Typically, we can conclude that an \\(R^2\\) value above 0.7 indicates a strong effect size.\nTake-homes\nAfter going through these data you have now had the opportunity to learn a bit about Tree Swallows, and more specifically look at a community of Tree Swallows found in Long Point, Ontario. This population appeared to show signs of sexual dimorphism, where the male swallows had longer wing chords and tails and were heavier. As well, we noticed that there appeared t be a trade off between clutch size and the number of clutched in a nest. An important thing to not is that these relationships were speculative and statistical analyses will be required to support these findings in this population.\nLastly, these data did not show trends of larger birds having more eggs and we observed no conclusive temporal trends of changes in birth rates over time. It is not uncommon that data is collected with certain hypotheses in mind and trend or relationships are ultimately not found to support these hypotheses!\n\n\n\n",
    "preview": "https://naturevancouver.ca/wp-content/uploads/2019/10/PeterWard_TreeSwallow.jpg",
    "last_modified": "2024-01-30T14:19:37-08:00",
    "input_file": {}
  },
  {
    "path": "lessons/2022-04-07-tree-swallow-dataset/",
    "title": "Tree Swallow Life History: R Basics & Data Exploration",
    "description": "This is a tutorial to get you familiar with R and explore ecological concepts through a Tree Swallow nest productivity dataset. Please download the accompanying RMarkdown file and data to follow along with this tutorial in R.",
    "author": [
      {
        "name": "Elizabeth Houghton",
        "url": {}
      },
      {
        "name": "Kirsten Palmier",
        "url": {}
      }
    ],
    "date": "2022-04-07",
    "categories": [],
    "contents": "\n\nContents\nFollow along in RStudio!\nTutorial Learning Objectives\nTree Swallow Nest Productivity\nLet’s get to know our dataset!\nBird Banding\nTree Swallow Age\n\nInstalling R\nOverview of R concepts\nImporting data and packages\nData Exploration\nSubsetting and conditional subsetting elements\nApplying different functions to data\nLogical operators\nGraphing basics\n\nMore data exploration\nNext Steps\n\nFollow along in RStudio!\nFor this tutorial, you have the option to follow along online or you can download the R Markdown file and datasets and follow along and practice coding in RStudio. To follow along in RStudio, download the following files:\n\nDownload required RMarkdown file\n\n\nDownload required data\n\nNext, you must unzip the folder containing the datasets (TRES) and place the “tree-swallow-dataset.Rmd” R Markdown file into a new folder (e.g. folder name: “R-basics-tutorial”) with the datasets folder (TRES). An example file structure is depicted below:\n\nNOTE: in order for this tutorial to run in RStudio, you must follow the file structure above. Your .Rmd file must be labeled “tree-swallow-dataset.Rmd” and the datasets folder must be labeled “TRES”. Make sure you do not use spaces or special characters in your folder name either as good practice!\nTutorial Learning Objectives\nIn this tutorial you will:\nExplore and utilize basic commands for handling ecological data in R\ne.g., subsetting, changing class, aggregating data\n\nPractice graphing data in appropriate formats\nGraph a simple bar chart\nGraph a time series\n\nObserve trends and draw conclusions from figures\nTree Swallow Nest Productivity\nLet’s get to know our dataset!\nThe Tree Swallow (Tachycineta bicolor) is one of the most common birds in eastern North America that normally nests in tree cavities excavated by other species like woodpeckers, but also readily accepts human made nest boxes. Based on this quality and their abundance, Birds Canada has monitored nest boxes of Tree Swallows around the Long Point Biosphere Reserve, Ontario, Canada, from 1974 to 2014. Each summer, volunteer research assistants check nest box contents daily, and band the adults and their young. Nest-box records are available from about 300 boxes from 3-4 sites during this period. Data collected includes nest box observations, clutch initiation dates, clutch size and egg weight, nest success, weather, insect abundance, and banding data. Clutch here refers to the total eggs a bird lays in a nesting attempt. This dataset includes all data entry related to eggs, nests, nestlings, nest check observations, and banding data from 1977 to 2014. More information on this dataset can be found here.\nAdditionally, in 2021, this dataset was quality checked and made open access by Jonathan Diamond through a Data Rescue internship with the Living Data Project, an initiative through the Canadian Institute of Ecology and Evolution that rescues legacy datasets.\nThrough Bird Studies Canada, Long Point Bird Observatory monitored three nest box colonies of Tree Swallows.\n\n\n\n\n\nTree Swallows utilising a nest box. Photo by Peter Ward. Image from Nature Vancouver.\nBird Banding\nTree Swallows were banded and banding data was recorded. Each band has a unique number so when the bird is recaptured, it is linked to a database that keeps track of the bird overtime. Once the birds were banded, banders collected multiple measurements including species, age, sex, body condition, bird colour, wing length, cord length and mass. For more information on banding, check out this Government of Canada resource that includes descriptions of banding data codes used by the Bird Banding Laboratory.\nCheck out this video below to see how birds are banded, courtesy of the Monomoy Bird Observatory in Cape Code.\n\n\n\n\n\n\n\nTree Swallow Age\nYou might be asking, how can you tell how old a bird is? For the most part, banders rely on the bird’s wing feathers to determine their age. However, after the bird is 2 years old, it’s very difficult to reliably age the birds. Only recapture data can help determine the age of the banded bird after it’s older than 2 years.\nBelow are age codes used to age birds:\nAge Code\nAge\nDescription\nJUV\nJuvenile\na recently hatched bird, prior to it’s preformative moult\nHY\nHatch Year\na bird hatched earlier the same year\nAHY\nAfter Hatch Year\na bird hatched in a previous year\nSY\nSecond Year\na bird in its second calendar year\nASY\nAfter Second Year\na bird beyond it’s second year\nTY\nThird Year\na bird in it’s thrid year\nATY\nAfter Third Year\na bird beyond it’s third year\n\n\n\n\n\nInstalling R\nTo navigate and complete the following tutorials you will be required to install R and we encourage you to install R Studio.\nR is a freely available software and the most recent version of R can be downloaded from: https://cran.r-project.org. After you have installed R, we encourage you to download R Studio as it provides a more user friendly interface to interact with R. R Studio Desktop is freely available from https://rstudio.com/products/rstudio/download/.\nThe final piece of software that is required for completing the practicals is rmarkdown. Rmarkdown documents weave together narrative text and code to produce formatted, reproducible outputs. If you are unfamiliar with rmarkdown, a short tutorial is available from https://rmarkdown.rstudio.com/articles_intro.html.\nOverview of R concepts\nIn this next section we are going to walk you through a few of the concepts you need to understand in order to work with data in R.\nImporting data and packages\nIn order to work with certain set of data in R, you must first pull them into the program. Before we can pull packages into R, you will first have to install them onto your computer. Run the following code below to download the required packages (without the #s). You only need to install the packages once.\n\n\nShow code\n\n# install.packages(\"dplyr\")\n# install.packages(\"ggplot2\")\n# install.packages(\"tidyr\")\n# install.packages(\"lubridate\")\n# install.packages(\"reshape\")\n# install.packages(\"readr\")\n\n\nNow we can start running those packages by calling on them using the following code:\n\n\nShow code\n\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(tidyr)\nlibrary(lubridate)\nlibrary(reshape)\nlibrary(readr)\nlibrary(distill)\n\n\nAnd lastly, we need to pull the actual datasets into R using the read.csv() function, where banding is the name of the object (or in this case datraframe) and the path to the file is within the ().\n\n\nShow code\n\nbanding <- read.csv(\"TRES/banding_final.csv\") #this dataset set contains banding information\nnest <- read.csv(\"TRES/nest_final.csv\") #this dataset contains nest information\nnestling <- read.csv(\"TRES/nestling_final.csv\") #this dataset contains nestling information\n\n\nData Exploration\nLet’s do some data exploring! First, let’s see what is in the banding dataset. This will help give us a better idea of what we can look at. Look into the first few rows of the banding dataset. You can do this using the head() function.\n\n\nShow code\n\nhead(banding) # where head() is the function and banding is the dataset\n\n  band_or_recapture band_number sex colour wing_chord wing_flat tail\n1                 R    1831.386   F    BLU        116       119   58\n2                 R    1881.065   F    BLU        115       119   54\n3                 R    2171.200   F    BLU        112       114   55\n4                 R    1881.064   M    BLU        123       124   60\n5                 B    2351.397   M    BLU        118       119   58\n6                 R    1881.042   M    BLU        123       125   56\n  p_9 weight       date nest_box age_code year\n1  89   22.0 2010-06-01     PT4G      ASY 2010\n2  90   19.6 2010-06-01     PT2F      ASY 2010\n3  88   21.5 2010-06-01    PT15G      ASY 2010\n4  96   21.1 2010-06-01     PT4G      AHY 2010\n5  92   22.1 2010-06-01    PT15G      AHY 2010\n6  97   20.5 2010-06-01     PT2F      AHY 2010\n\nThere are 13 columns in the dataset, each representing a measurement taken when the bird was banded where:\nColumn Name\nExplanation\nband_or_recapture\nwhether the bird has been banded at the time of data entry or previously banded (i.e., has a band already) by B = band and R = recapture\nband_number\nband number, either from the recaptured birds that already have a band or a new band number\nsex\nsex of the bird by F = female and M = male\ncolour\ncolour of the bird where BLU = blue, BRN = brown, and INT = intermediate\nwing_chord\nwing_chord measurement in mm\nwing_flat\nwing_flat measurement in mm\ntail\ntail measurement in mm\np_9\nlength of the 9th primary, or the outer primary feather, measured in mm\nweight\nweight of the bird in grams\ndate\ndate the bird was captured recorded as yyyy-mm-dd\nnest_box\nlabeled by site and box number with no spaces\nage_code\nage of the bird when captured (see previous section for descriptions)\nyear\nyear the bird was captured and all above data was collected\nYou can dig in deeper by using the summary() and str() functions. This is important, because the variables need to match what they are being used for (i.e., to calculate mean, the variable must be numeric (num), not a character (chr), integer (int), or factor (Factor) type).\n\n\nShow code\n\n# summarise the banding dataset\nsummary(banding) \n\n band_or_recapture   band_number       sex           \n Length:1602        Min.   :1381   Length:1602       \n Class :character   1st Qu.:2312   Class :character  \n Mode  :character   Median :2351   Mode  :character  \n                    Mean   :2310                     \n                    3rd Qu.:2402                     \n                    Max.   :5212                     \n    colour            wing_chord      wing_flat          tail      \n Length:1602        Min.   :100.0   Min.   :102.0   Min.   :44.00  \n Class :character   1st Qu.:113.0   1st Qu.:115.0   1st Qu.:53.00  \n Mode  :character   Median :116.0   Median :118.0   Median :55.00  \n                    Mean   :115.7   Mean   :117.9   Mean   :54.98  \n                    3rd Qu.:118.0   3rd Qu.:121.0   3rd Qu.:57.00  \n                    Max.   :129.0   Max.   :130.0   Max.   :69.00  \n      p_9             weight          date          \n Min.   : 78.00   Min.   :16.50   Length:1602       \n 1st Qu.: 90.00   1st Qu.:19.80   Class :character  \n Median : 92.00   Median :20.50   Mode  :character  \n Mean   : 92.39   Mean   :20.58                     \n 3rd Qu.: 95.00   3rd Qu.:21.40                     \n Max.   :109.00   Max.   :25.90                     \n   nest_box           age_code              year     \n Length:1602        Length:1602        Min.   :2010  \n Class :character   Class :character   1st Qu.:2011  \n Mode  :character   Mode  :character   Median :2012  \n                                       Mean   :2012  \n                                       3rd Qu.:2013  \n                                       Max.   :2014  \n\nShow code\n\n# check the structure of the banding dataset\nstr(banding) #This is important, because the variables need to match what they are being used for (i.e., to calculate mean, the variable must be numeric, not a character type)\n\n'data.frame':   1602 obs. of  13 variables:\n $ band_or_recapture: chr  \"R\" \"R\" \"R\" \"R\" ...\n $ band_number      : num  1831 1881 2171 1881 2351 ...\n $ sex              : chr  \"F\" \"F\" \"F\" \"M\" ...\n $ colour           : chr  \"BLU\" \"BLU\" \"BLU\" \"BLU\" ...\n $ wing_chord       : num  116 115 112 123 118 123 110 111 112 117 ...\n $ wing_flat        : num  119 119 114 124 119 125 112 113 114 118 ...\n $ tail             : num  58 54 55 60 58 56 55 52 55 54 ...\n $ p_9              : int  89 90 88 96 92 97 89 87 90 92 ...\n $ weight           : num  22 19.6 21.5 21.1 22.1 20.5 20 21.6 19.8 20.5 ...\n $ date             : chr  \"2010-06-01\" \"2010-06-01\" \"2010-06-01\" \"2010-06-01\" ...\n $ nest_box         : chr  \"PT4G\" \"PT2F\" \"PT15G\" \"PT4G\" ...\n $ age_code         : chr  \"ASY\" \"ASY\" \"ASY\" \"AHY\" ...\n $ year             : int  2010 2010 2010 2010 2010 2010 2010 2010 2010 2010 ...\n\nSubsetting and conditional subsetting elements\nThe [ operator can be used to select multiple elements of an object: The [ operator can be used to extract specific rows or columns from a dataset where DATA[row, column]\nThe $ operator can be used to extract elements by the element’s name\nLet’s try pulling the first row from the banding dataset\n\n\nShow code\n\nbanding[c(1),] #notice how there is a comma after c(1)? This specifies we want to subset the first row!\n\n  band_or_recapture band_number sex colour wing_chord wing_flat tail\n1                 R    1831.386   F    BLU        116       119   58\n  p_9 weight       date nest_box age_code year\n1  89     22 2010-06-01     PT4G      ASY 2010\n\nLet’s make a mini version of our banding dataset, and call it banding2, by subsetting rows 1 through 50 and columns 2, and 5 through 13\n\n\nShow code\n\nbanding2 <- banding[c(1:50), c(2,5:13)] #where banding2 is our new dataframe containing data from rows 1:50 and columns 2 and 5:13 from the banding dataset. \n\n\nApplying different functions to data\nYou can also run functions on different variables of your datasets which you can select by using $. You can wrap these in different functions to calculate various things. For example, let’s try calculating the mean weight from our banding2 dataset and assign it to a new variable called mean_weight. The following line of code creates a column in banding2 called mean_weight and assigns the mean of the column weight from banding2 to it. Then use the head() function to take a quick look.\n\n\nShow code\n\nbanding2$mean_weight <- mean(banding2$weight)\n\nhead(banding2)\n\n  band_number wing_chord wing_flat tail p_9 weight       date\n1    1831.386        116       119   58  89   22.0 2010-06-01\n2    1881.065        115       119   54  90   19.6 2010-06-01\n3    2171.200        112       114   55  88   21.5 2010-06-01\n4    1881.064        123       124   60  96   21.1 2010-06-01\n5    2351.397        118       119   58  92   22.1 2010-06-01\n6    1881.042        123       125   56  97   20.5 2010-06-01\n  nest_box age_code year mean_weight\n1     PT4G      ASY 2010      20.815\n2     PT2F      ASY 2010      20.815\n3    PT15G      ASY 2010      20.815\n4     PT4G      AHY 2010      20.815\n5    PT15G      AHY 2010      20.815\n6     PT2F      AHY 2010      20.815\n\nWhat if we wanted to calculate the mean weight of the Tree Swallows as recorded in the banding dataset based on their sex? We could do that by grouping how we calculate the mean by using the aggregate() function. The aggregate function can work to group data as follows:\naggregate(y ~ a + b + c + …, df, mean)\nWhere y is the variable you want to take the mean of, a, b, c… are variables that you are interested in grouping these means by, df is the dataframe that you are pulling these data from, and mean is instructing the command that the summary statistic you want to complete is the mean. Lets try it out!\n\n\nShow code\n\n# If we wanted to look at the average weight of female and male birds in the banding dataset we would use aggregate() like this\nbanding3 <- aggregate(weight ~ sex, banding, mean) # banding3 is where these values will be stored\nbanding3\n\n  sex   weight\n1   F 20.41623\n2   M 20.75646\n\nTry coding\n\n\n# Try looking at the mean weight of Tree Swallows grouped by sex and year, call this new data frame 'banding4'\n\n\n\n\nShow code\n\n# Answer\n# banding3 <- aggregate(weight ~ sex, year, mean)\n\n\nLogical operators\nNow that you have a good handle on basic subsetting, let’s dig a little deeper and use logical operators to further subset your data.\nWhat if you want to focus in on looking at just one sex? How would you extract only data related to female birds from these data? One way to do this would be to use the subset() function and logical operators to separate out the data of interests from your dataset.\n< (less than)\n<= (less than or equal to)\n> (greater than)\n>= (greater than or equal to)\n== (exactly equal to)\n!= (not equal to)\nx | y (x OR y)\nx & y (x AND y)\nIt is important to note that certain logical operators only work on certain classes of data. For example, if we looked at sex (class of factor) we can’t subset values that are less than or equal to Female (this would make no sense since Female is not a number or integer!).\n\n\nShow code\n\n# pull out female birds from your banding dataset \nhead(subset(banding, sex == \"F\")) #the head function limits the amount of rows displayed\n\n  band_or_recapture band_number sex colour wing_chord wing_flat tail\n1                 R    1831.386   F    BLU        116       119   58\n2                 R    1881.065   F    BLU        115       119   54\n3                 R    2171.200   F    BLU        112       114   55\n7                 B    2351.397   F    BLU        110       112   55\n8                 R    2321.083   F    BLU        111       113   52\n9                 B    2351.397   F    INT        112       114   55\n  p_9 weight       date nest_box age_code year\n1  89   22.0 2010-06-01     PT4G      ASY 2010\n2  90   19.6 2010-06-01     PT2F      ASY 2010\n3  88   21.5 2010-06-01    PT15G      ASY 2010\n7  89   20.0 2012-06-01     PT1J      ASY 2010\n8  87   21.6 2012-06-01     PT4J      ASY 2010\n9  90   19.8 2012-06-01     PT8K      AHY 2010\n\nRemember, if you want to store this in a df to look at later I would have to assign it to a vector called “female_birds”.\n\n\n\nNotice how the vector female_birds changed from 853 observations to 495 observations?\nTry coding\n\n\n# Try to subset a dataframe called 'male_birds' that consists of male birds with the chord_length less than or equal to 150\n\n\n\n\nShow code\n\n# Answer\n# male_birds <- subset(banding, sex == \"M\" & chord_length <= 150)\n\n\nQuestion\nHow many male birds have a chord_length less than or equal to 150?\n\n\nShow code\n\n# Answer = 749\n\n\nGraphing basics\nHaving fun yet? I know I am! Let’s look at the basics of a plot.\n\nNow that we are refreshed in the elements of a graph, let’s graph a relatively simple bar plot with our banding data frame.\nLet’s look at the number of banded and recaptured birds there were each year.\nWe will use ggplot to visualize the data.\n\n\nShow code\n\n# First, we will create a table base on the band_or_recapture column and the year column\ntbl1 <- with(banding, table(band_or_recapture, year))  \ntbl1\n\n                 year\nband_or_recapture 2010 2011 2012 2013 2014\n                B   62  125  118   68  101\n                R  179  264  292  139  254\n\nShow code\n\n# Next, we can plot our table \nggplot(as.data.frame(tbl1), aes(x =factor(year), y = Freq, fill = band_or_recapture))+ #we've changed the format of our table to a dataframe so we can plot it. \n  geom_col(position = 'dodge') #geom_column is the type of graph, and position='dodge' allows us to visualize the barplots side by side.\n\n\n\nCongrats! You’ve made your first graph. We can change elements of the graph by adding labels and titles, changing the theme and colours of our bars.\n\n\nShow code\n\n# Add labels and change colours\nggplot(as.data.frame(tbl1), aes(x =factor(year), y = Freq, fill = band_or_recapture))+ \n  geom_col(position = 'dodge') +\n  xlab('Year') +\n  ylab('Number of birds') +\n  scale_fill_manual(name= \"Banded or Recaptured\", values=c(\"B\" = 'lightskyblue', \"R\" = 'plum3'))+\n  ggtitle(\"Birds banded or recaptured from 2010-2014\") +\n  theme_classic() #gets rid of grey background\n\n\n\n(If you’d like to learn more about ggplot, this tutorial is great!)\nQuestion\nWhat trends do you see?\nWhy do you think there are more recaptured birds compared to banded birds every year?\nMore data exploration\nNext, let’s change gears and take a quick look at the egg nestling dataset.\n\n\n# Lets get a sense of what columns are present in our dataset\nhead(nestling)\n\n  nest_box band_number year clutch_number day_1_weight day_12_weight\n1     PT7F  2351.39972 2014            NA         <NA>          <NA>\n2     PT7F  2351.39973 2014            NA         <NA>          <NA>\n3     PT7F  2351.39974 2014            NA         <NA>          <NA>\n4    PT14G  2351.39975 2014            NA         <NA>          <NA>\n5    PT14G  2351.39976 2014            NA         <NA>          <NA>\n6    PT14G  2351.39977 2014            NA         <NA>          <NA>\n  site nest_code\n1 <NA>      <NA>\n2 <NA>      <NA>\n3 <NA>      <NA>\n4 <NA>      <NA>\n5 <NA>      <NA>\n6 <NA>      <NA>\n\n# Lets look at the structure of our new dataframe, nestling:\n\nstr(nestling)\n\n'data.frame':   32536 obs. of  8 variables:\n $ nest_box     : chr  \"PT7F\" \"PT7F\" \"PT7F\" \"PT14G\" ...\n $ band_number  : chr  \"2351.39972\" \"2351.39973\" \"2351.39974\" \"2351.39975\" ...\n $ year         : int  2014 2014 2014 2014 2014 2014 2014 2014 2014 2014 ...\n $ clutch_number: int  NA NA NA NA NA NA NA NA NA NA ...\n $ day_1_weight : chr  NA NA NA NA ...\n $ day_12_weight: chr  NA NA NA NA ...\n $ site         : chr  NA NA NA NA ...\n $ nest_code    : chr  NA NA NA NA ...\n\n\n\nShow code\n\n#We don't have entries for all rows of our dataframe. They will appear as **NA**s. We see the weight is a character vector. Let's change that to numeric using the as.numeric() function. Let's start #with the **day_1_weight** column:\n\nnestling$day_1_weight <- as.numeric(nestling$day_1_weight)\n\n# Now the **day_12_weight** column:\n\nnestling$day_12_weight <- as.numeric(nestling$day_12_weight)\n\n\n# Lets look at the structure of our new dataframe, nestling again:\nstr(nestling)\n\n'data.frame':   32536 obs. of  8 variables:\n $ nest_box     : chr  \"PT7F\" \"PT7F\" \"PT7F\" \"PT14G\" ...\n $ band_number  : chr  \"2351.39972\" \"2351.39973\" \"2351.39974\" \"2351.39975\" ...\n $ year         : int  2014 2014 2014 2014 2014 2014 2014 2014 2014 2014 ...\n $ clutch_number: int  NA NA NA NA NA NA NA NA NA NA ...\n $ day_1_weight : num  NA NA NA NA NA NA NA NA NA NA ...\n $ day_12_weight: num  NA NA NA NA NA NA NA NA NA NA ...\n $ site         : chr  NA NA NA NA ...\n $ nest_code    : chr  NA NA NA NA ...\n\nWe want to summarize our data so we can calculate the mean of each weight by year.\n\n\nnestling_weight <- nestling %>%\n  group_by(year) %>% # groups weights by year\n  filter(is.na(day_1_weight) == F,  #gets rid of NAs\n         is.na(day_12_weight) == F) %>%\n  summarise(mean_day_1 = mean(day_1_weight), #calculates the mean of each year \n            mean_day_12 = mean(day_12_weight)) \n\n# NOTE\" '%>%' is known as a pipe operator in R, it helps pass the output of one function \n# as an input to another function to make coding easier and more efficient\n\n# We can convert the mean weights to long format, which gives us a weight column,\n# with both weight variables, and a total column which contains the weights\n\nnestling_weight2 <- gather(nestling_weight, weight, total, mean_day_1:mean_day_12)\n\n#Look at the structure of our new dataframe, nestling_weight2\n\nstr(nestling_weight2)\n\ntibble [74 × 3] (S3: tbl_df/tbl/data.frame)\n $ year  : int [1:74] 1977 1978 1979 1980 1981 1982 1983 1984 1985 1986 ...\n $ weight: chr [1:74] \"mean_day_1\" \"mean_day_1\" \"mean_day_1\" \"mean_day_1\" ...\n $ total : num [1:74] 21.83 1.76 1.69 2.18 2.03 ...\n\nOk, now we can plot it using ggplot.\n\n\nShow code\n\nggplot(data = nestling_weight2,\n       aes(x = year, y = total, group = weight)) + #Year goes on the x axis, weight(totals) on the y axis, and we group by each the means of each day\n  geom_line(aes(linetype = weight, color = weight)) + #aes changes the aesthetics of the lines so that linetype and colors are different from each other\n  theme_classic()\n\n\n\nHmm, looks like something is not quite right in our plot. There seems to be an outlier within the data. If we assume this is a data entry error, we can get rid of it. Since it looks like an earlier date, let’s just look at the first few rows (n = 10) and see if we can find the outlier.\n\n\nShow code\n\nhead(nestling_weight2, n = 10)\n\n# A tibble: 10 × 3\n    year weight     total\n   <int> <chr>      <dbl>\n 1  1977 mean_day_1 21.8 \n 2  1978 mean_day_1  1.76\n 3  1979 mean_day_1  1.69\n 4  1980 mean_day_1  2.18\n 5  1981 mean_day_1  2.03\n 6  1982 mean_day_1  2.54\n 7  1983 mean_day_1  1.90\n 8  1984 mean_day_1  1.57\n 9  1985 mean_day_1  1.68\n10  1986 mean_day_1  1.59\n\nAh ha! The first row contains a mean_day_1 weight of 21.8. This is likely an error. Let’s get rid of it and then re-plot it.\n\n\nShow code\n\nnestling_weight2 <- nestling_weight2[-1,]\nggplot(data = nestling_weight2,\n       aes(x = year, y = total, group = weight)) + #Year goes on the x axis, weight(totals) on the y axis, and we group by each the means of each day\n  geom_line(aes(linetype = weight, color = weight)) + #aes changes the aesthetics of the lines so that linetype and colors are different from each other\n  theme_classic()\n\n\n\nMuch better!\nQuestions\nDo you see any trends within this datasets over time?\nWhat other variables could you look at within the nestling dataset?\nNext Steps\nYou have completed the “Getting familiar with R and the Tree Swallow Dataset” tutorial!\nLooking for more of a challenge? Check out this tutorial where we use the Tree Swallow Dataset to examine ecological concepts like life history traits and sexual dimorphism.\nCheck out this cool video on nesting Tree Swallows!\n\n\n\n\n\n\n\n\n\n\n",
    "preview": "https://naturevancouver.ca/wp-content/uploads/2019/10/PeterWard_TreeSwallow.jpg",
    "last_modified": "2024-01-30T14:19:37-08:00",
    "input_file": {}
  }
]
