[
  {
    "path": "lessons/2022-04-07-anticosti-historical-data-tutorial/",
    "title": "Anticosti Historical Data Tutorial",
    "description": "A short description of the post.",
    "author": [
      {
        "name": "Victoria Marie Glynn",
        "url": {}
      },
      {
        "name": "Maxime Fraser Franco",
        "url": {}
      }
    ],
    "date": "2022-04-07",
    "categories": [],
    "contents": "\n\n\n\n\n\n\n",
    "preview": {},
    "last_modified": "2022-04-08T23:52:03+00:00",
    "input_file": {}
  },
  {
    "path": "lessons/2022-04-07-chronic-wasting-disease-tutorial/",
    "title": "Chronic Wasting Disease Tutorial",
    "description": "A short description of the post.",
    "author": [
      {
        "name": "Amy Forsythe",
        "url": {}
      },
      {
        "name": "Bryn Wiley",
        "url": {}
      }
    ],
    "date": "2022-04-07",
    "categories": [],
    "contents": "\n\n\n\n\n\n\n",
    "preview": {},
    "last_modified": "2022-04-08T23:23:52+00:00",
    "input_file": {}
  },
  {
    "path": "lessons/2022-04-07-codyn-tutorial/",
    "title": "Codyn Tutorial",
    "description": "A short description of the post.",
    "author": [
      {
        "name": "Jory Griffith",
        "url": {}
      },
      {
        "name": "Maggie Slein",
        "url": {}
      },
      {
        "name": "Egor Katkov",
        "url": {}
      }
    ],
    "date": "2022-04-07",
    "categories": [],
    "contents": "\n\nContents\nLoad Packages\nLoad Data\nUsing\nthe codyn package to analyze diversity data over\ntime\nUsing\ncommunity_structure()\nSpecies Richness and\nEvenness\nPlot species richness\nPlot species evenness\n\n\nUsing\ncommunity_diversity()\nShannon’s diversity\nPlot Shannon’s diversity\n\nSimpson’s diversity\nPlot Simpson’s diversity\n\n\nActivity\n\nLoad Packages\nWe will be using the codyn package for this tutorial. We\nwill also use ggplot2 and dplyr for plotting\nand cleaning.\n\n\nlibrary(ggplot2)\nlibrary(codyn)\nlibrary(dplyr)\n\n\n\nLoad Data\nThese data are from the Turkey Lakes watershed experiment. This\ndataset contains the abundances of benthic invertebrate species measured\nin the May and June from 1995 to 2001. They recorded the type and number\nof invertebrates in an area of the stream, with 10 replicates per\nsampling event. These forests next to these streams were logged in 1997\nwith varying harvest intensities, with low, medium, and high intensity\nharvest and a control stream with no forest harvest. We will using the\ncodyn package to analyze the diversity of these benthic\ninvertebrates over time.\n\n\ndata<-read.csv(\"stream_invertebrates.csv\")\nhead(data)\n\n\n  year   species treatment replicate abundance\n1 1995 Alloperla   control         1         0\n2 1995 Alloperla   control         2         0\n3 1995 Alloperla   control         3         4\n4 1995 Alloperla   control         4         3\n5 1995 Alloperla   control         5         3\n6 1995 Alloperla   control         6         3\n\nFor many functions, the codyn package can only look at\ndata from one stream at a time. So first we will separate each stream\ninto it’s own data frame.\n\n\n# high intensity logging treatment\nsubset_codyn_high <- data %>%\n  filter(treatment == \"high\")\n# medium intensity logging treatment\nsubset_codyn_med <- data %>%\n  filter(treatment == \"medium\")\n# low intensity logging treatment\nsubset_codyn_low <- data %>%\n  filter(treatment == \"low\") \n# control stream (no logging)\nsubset_codyn_ctrl <- data %>%\n  filter(treatment==\"control\")\n\n\n\nUsing\nthe codyn package to analyze diversity data over time\nEcologists are often interested in how diversity changes over time in\none place. This is particularly interesting when you are looking at how\nspecies diversity responds to environmental change. This environmental\nchange can be a single disturbance event such as a forest fire or more\nlong-term change such as temperature increases due to climate change.\nThe Turkey Lakes dataset provides us with an opportunity to look at how\nthe diversity of benthic invertebrates changes over time and in response\nto logging. We can compare the diversity of different streams with\ndifferent logging intensities and we can also compare the diversity of\nstreams.\nThe codyn package allows us to analyze the change in\nbiodiversity over time using different metrics.\nUsing\ncommunity_structure()\ncommunity_structure() is a function in the package\ncodyn that calculates species richness and evenness.\nSpecies Richness and\nEvenness\nFor example, we can use community_structure() to look at\nthe change in species richness and evenness over time in one of the\nTurkey Lake streams. We will choose the stream with high logging\nintensity as an example. This function can only look at one stream at a\ntime so make sure to subset out the stream that you are interested\nin.\nLet’s take a look at the high intensity logging stream data.\n\n\nhead(subset_codyn_high)\n\n\n  year     species treatment replicate abundance\n1 1995 Amphinemura      high         1         9\n2 1995 Amphinemura      high         2        24\n3 1995 Amphinemura      high         3        53\n4 1995 Amphinemura      high         4        15\n5 1995 Amphinemura      high         5        59\n6 1995 Amphinemura      high         6        37\n\nAs you can see, there is a column for year, species, replicate, and\nabundance.\nThe community structure function has five arguments. The first is\ndf where you put in the data frame of interest, in our case\nsubset_codyn_high. The time.var argument is\nwhere you put in your time variable (year), the\nabundance.var argument is where you put the column that holds the\nabundance variable (abundance) and the\nreplicate.var argument holds the column with the replicates\n(replicate). In the metric argument, you can\nspecify the metric of evenness that you want the function to calculate.\nThere are three possible metrics: Evar,\nSimpsonEvenness, and EQ, which all calculate\nevenness in different ways. We will use Simpson’s Evenness in this\ntutorial. Remember, if you ever need a refresher on the syntax you can\ntype ?community_structure into the R script.\n\n\nrichness_high<-community_structure(df=subset_codyn_high, time.var=\"year\", abundance.var=\"abundance\",\n                                   replicate.var=\"replicate\", metric=\"SimpsonEvenness\")\n\n\n\nWe can take a look at the output.\n\n\nhead(richness_high)\n\n\n  year replicate richness SimpsonEvenness\n1 1995         1       17       0.2210248\n2 1996         1       11       0.5785671\n3 1997         1       16       0.3436584\n4 1998         1       18       0.2786702\n5 1999         1       15       0.3540228\n6 2001         1       23       0.2661854\n\nAs you can see, this returns a data frame with the year, replicate,\nrichness calculation, and evenness measure. It calculates richness and\nevenness separately for each replicate sample in the stream, so we have\na measure of variability within samples as well as variability across\nyears.\nPlot species richness\nWe can plot this data frame to see the changes over time.\n\n\n\nHere is a plot of species richness, with a different value for each\nreplicate. The red line is the year that the streams were logged. Do you\nsee any change? Do you think there are any significant patterns? How\ndoes the variability between replicates compare to the variability\nbetween years?\nPlot species evenness\nWe can also plot species evenness over time.\n\n\n\nDo you see any patterns in the evenness between years?\nUsing\ncommunity_diversity()\nShannon’s diversity\nSpecies richness and evenness are very simple ways to look at species\ndiversity. However, as you learned from the rank abundance curves,\nspecies have different abundances within the community, with some\nspecies having very high abundance and most species having low\nabundance. Species richness does not take into account the relative\nabundances of each species, which limits the inferences we can make. The\nShannon-Weiner diversity metric does take into account these relative\nabundances when calculating the diversity of a community and allows us\nto make more meaningful inferences about how biodiversity is changing\nover time.\nThe codyn package allows you to calculate the Shannon\ndiversity index for a single site over time using the\ncommunity_diversity() function. We will again use the data\nfrom the stream with the high logging intensity. Luckily, this function\nhas the exact same syntax as the community_structure()\nfunction! The only difference is that the options for the\nmetric argument are Shannon and\nInverseSimpson. We will first use Shannon.\n\n\nshannon_div_high<-community_diversity(df=subset_codyn_high, time.var=\"year\", abundance.var=\"abundance\",\n                                      replicate.var=\"replicate\", metric=\"Shannon\")\n\n\n\nLet’s take a look at the output for this function.\n\n\nhead(shannon_div_high)\n\n\n  year replicate  Shannon\n1 1995         1 1.836002\n2 1996         1 2.044210\n3 1997         1 2.107977\n4 1998         1 2.016146\n5 1999         1 1.948510\n6 2001         1 2.297970\n\nYou can see it gives us a data frame of year,\nreplicate, and Shannon, which is our measure\nof Shannon diversity.\nPlot Shannon’s diversity\nWe can plot these to see change over time.\n\n\nggplot()+\n  geom_point(shannon_div_high, mapping=aes(x=year, y=Shannon))+\n  theme_classic()+\n  labs(y=\"Shannon Diversity\", x=\"Year\")+\n  geom_vline(xintercept=1997, linetype=2, color=\"red\")\n\n\n\n\nSimpson’s diversity\nWe can also use the same function to calculate Simpson’s diversity by\nsimply changing the metric argument to\nInverseSimpson.\n\n\nsimpson_div_high<-community_diversity(df=subset_codyn_high, time.var=\"year\", abundance.var=\"abundance\",\n                                      replicate.var=\"replicate\", metric=\"InverseSimpson\")\n\n\n\nWe can look at the output.\n\n\nhead(simpson_div_high)\n\n\n  year replicate InverseSimpson\n1 1995         1       3.757421\n2 1996         1       6.364238\n3 1997         1       5.498534\n4 1998         1       5.016063\n5 1999         1       5.310341\n6 2001         1       6.122265\n\nPlot Simpson’s diversity\nAnd then plot.\n\n\n\nHow do these patterns compare to the patterns of Shannon’s diversity\nover time? How do the values compare?\nActivity\nCalculate richness, evenness, and diversity using both the Shannon\nand Simpson indices for the streams with low intensity logging, high\nintensity logging, and no logging. The data for these streams are\nsubset_codyn_low, subset_codyn_high, and\nsubset_codyn_ctrl. Plot these indices. Do you see any\npatterns across years? How do these compare to the patterns in the high\nintensity logging stream?\n\n\n\n",
    "preview": "lessons/2022-04-07-codyn-tutorial/codyn-tutorial_files/figure-html5/unnamed-chunk-7-1.png",
    "last_modified": "2022-04-09T04:38:54+00:00",
    "input_file": {}
  },
  {
    "path": "lessons/2022-04-07-sexual-dimorphism-and-sexual-selection/",
    "title": "Sexual Dimorphism and Sexual Selection",
    "description": "A short description of the post.",
    "author": [
      {
        "name": "Elizabeth Houghton",
        "url": {}
      },
      {
        "name": "Kirsten Palmier",
        "url": {}
      }
    ],
    "date": "2022-04-07",
    "categories": [],
    "contents": "\nTutorial learning objectives\nIn this tutorial you will explore:\nWhether sexual dimorphism is present in a population of Tree\nSwallows found in Long Point, Ontario\nLife history traits of Tree Swallow\nTrade offs between the number of clutches a bird may have and the\nnumber of eggs in each clutch\nHow the sampled population of Tree Swallow’s birth rates have\nchanged over time\nBackground of datasets\nThis is a tutorial to get you familiar with R and explore ecological\nconcepts through a Tree Swallow nest productivity dataset. Before we\njump into the weeds, let’s get to know our dataset!\nThe Tree Swallow (Tachycineta bicolor) is one of the most\ncommon birds in eastern North America that normally nests in tree\ncavities excavated by other species like woodpeckers, but also readily\naccepts human made nest’ boxes. Based on this quality and their\nabundance, Birds Canada has monitored nest boxes of tree swallows around\nthe Long Point Biosphere Reserve, Ontario, from 1974 to 2014. Each year,\nMay through June, volunteer research assistants check nest box contents\ndaily, and band the adults and their young. Nest-box records are\navailable from about 300 boxes from 3-4 sites during this period. Data\ncollected includes nest box observations, clutch initiation dates,\nclutch size and egg weight, nest success, weather, insect abundance, and\nbanding data. This data set includes all data entry related to eggs,\nnests, nestlings, nest check observations, and banding data from 1977 to\n2014. More information on this dataset can be found here.\nAdditionally, in 2021, this dataset was quality checked and made open\naccess by Jonathan Diamond through a Data Rescue internship with the Living Data Project,\nan initiative through the Canadian Institute of Ecology and Evolution\nthat rescues legacy datasets.\n\nThrough Bird Studies Canada, Long Point Bird Observatory monitored\nthree nest box “colonies” of Tree Swallows at Long Point, two on the\n“mainland” near Port Rowan (at the Port Rowan sewagelagoons and adjacent\nto agricultural land at mudd creek) and the third at the tip of the\nPoint.\nThe Point\nThis colony was established in its present location in 1969. The nest\nboxes are located about 1 km west of the Tip of the point and are\narranged 24.4m apart in a grid of numbered (north-south) rows and\nlettered (east-west) columns. Each box is designated by its position, so\nbox 10G is in row 10 and column G. At the present time the rows in use\nare 1-19 and the letters are D-K, but many positions are unfilled and\nthere are a total of 64 boxes.\n\nThe Sewage Lagoon\nThis colony was first established in 1977 and has since been expanded\nto a total of 77 boxes. The boxes are in two rows around the lagoon\nembankment, as well as across the street in a small cluster of 5\nboxes.\n\nMud Creek\nEstablished in 1987, the Mud Creek site is located 3.25 km\nnorth-northeast of Sewage Lagoon and contains 80 nest boxes. The habitat\nis an open, uncultivated field adjacent to a small woodlot.\n\nFor this tutorial we will be looking at the banding dataset which\nadults were trapped sometime between the first young hatch and when they\nwere 12 days old. All adult birds are banded, unless previously banded.\nIt was also recorded if the bird had a brood patch (BP) or cloacal\nprotuberance (CP). Plumage color was recorded as blue (BLU), Brown\n(BRN), or Intermediate (INT). Furthermore, plumage categories and\nage/sex designations were assigned and a variety of size measurements\nwere taken:\nPlumage Categories\nBLU birds (ASY) More than 90% of the upper parts iridescent\nblue-green\nINT birds (AHY) More than 50% up to 90% of upper parts iridescent\nblue-green (remainder dull brown or brown tinged with green)\nBRN birds (SY) Up to 50% of upper parts iridescent blue-green\n(remainder > 50% dull brown or brown tinged with green)\nSex Categories\nMale = M\nFemale = F\nMeasurements of Size and\nWeight\nWing chord length (mm) = wing_chord\nWing chord flat (mm) = wing_flat\nTail length (mm) = tail\np_9 = primary feather length\n\nAdults are blue-green above with white below with blacking flight\nfeathers. Photo courtesy of Max Nootbaar from the Macaulay\nLibrary.\n\nFirst year females may be brownish above with hints of blue-green;\nadult females can be nearly blue-green as males. Photo courtesy of Matt\nDavis from the Macaulay\nLibrary\nImporting data and packages\nIn this tutorial, we will be working with Tree Swallow data collected by\nBird Studies Canada, Long Point Bird Observatory as well as a few\nadditional packages. Run the following code to import the required\npackages and pull in the dataset that we will be working with throughout\nthis tutorial.\n\n\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(tidyr)\nlibrary(lubridate)\nlibrary(reshape)\nlibrary(readr)\nlibrary(ggpubr)\n\nbanding <- read.csv(\"TRES/banding_final.csv\")\nbanding_nest <- read.csv(\"TRES/banding_nest_final.csv\")\nnest <- read.csv(\"TRES/nest_final.csv\")\n\n\n\n\n\n# Now, we want to make sure the class of our data is correct before we move forward:\nstr(banding)\n\n\n'data.frame':   1602 obs. of  13 variables:\n $ band_or_recapture: chr  \"R\" \"R\" \"R\" \"R\" ...\n $ band_number      : num  1831 1881 2171 1881 2351 ...\n $ sex              : chr  \"F\" \"F\" \"F\" \"M\" ...\n $ colour           : chr  \"BLU\" \"BLU\" \"BLU\" \"BLU\" ...\n $ wing_chord       : num  116 115 112 123 118 123 110 111 112 117 ...\n $ wing_flat        : num  119 119 114 124 119 125 112 113 114 118 ...\n $ tail             : num  58 54 55 60 58 56 55 52 55 54 ...\n $ p_9              : int  89 90 88 96 92 97 89 87 90 92 ...\n $ weight           : num  22 19.6 21.5 21.1 22.1 20.5 20 21.6 19.8 20.5 ...\n $ date             : chr  \"2010-06-01\" \"2010-06-01\" \"2010-06-01\" \"2010-06-01\" ...\n $ nest_box         : chr  \"PT4G\" \"PT2F\" \"PT15G\" \"PT4G\" ...\n $ age_code         : chr  \"ASY\" \"ASY\" \"ASY\" \"AHY\" ...\n $ year             : int  2010 2010 2010 2010 2010 2010 2010 2010 2010 2010 ...\n\n# lets go ahead and convert the sex and nest_box column class into factors:\nbanding$sex <- as.factor(banding$sex)\nbanding$nest_box <- as.factor(banding$nest_box)\n\n\nstr(banding_nest)\n\n\n'data.frame':   1002 obs. of  16 variables:\n $ band_number        : num  1671 1672 1672 1771 1771 ...\n $ year               : int  2010 2010 2010 2010 2010 2011 2011 2012 2010 2011 ...\n $ sex                : chr  \"M\" \"F\" \"F\" \"F\" ...\n $ colour             : chr  \"BLU\" \"BLU\" \"BLU\" \"BLU\" ...\n $ wing_chord         : num  116 120 118 120 116 115 114 109 112 115 ...\n $ wing_flat          : num  117 121 119 121 118 117 116 111 114 119 ...\n $ tail               : num  55 47 53 52 54 55 58 60 46 56 ...\n $ p_9                : int  89 92 93 95 91 95 88 88 92 91 ...\n $ weight             : num  20 22.5 23.8 19.7 19.5 ...\n $ date               : chr  \"2015-06-01\" \"2015-06-01\" \"2017-06-01\" \"2017-06-01\" ...\n $ nest_box           : chr  \"PT16I\" \"PT16I\" \"PT19F\" \"PT09F\" ...\n $ clutch_size        : int  6 6 5 6 4 3 6 6 4 5 ...\n $ clutch_number      : int  1 1 1 1 1 1 1 1 1 1 ...\n $ no_of_young_fledged: int  6 6 4 4 4 1 4 6 4 5 ...\n $ number_hatch       : int  6 6 4 4 4 2 6 6 4 5 ...\n $ location           : chr  \"PT\" \"PT\" \"PT\" \"PT\" ...\n\n# fix class\nbanding_nest$sex <- as.factor(banding_nest$sex)\nbanding_nest$nest_box <- as.factor(banding_nest$nest_box)\nbanding_nest$location <- as.factor(banding_nest$location)\n\nstr(banding_nest)\n\n\n'data.frame':   1002 obs. of  16 variables:\n $ band_number        : num  1671 1672 1672 1771 1771 ...\n $ year               : int  2010 2010 2010 2010 2010 2011 2011 2012 2010 2011 ...\n $ sex                : Factor w/ 2 levels \"F\",\"M\": 2 1 1 1 1 1 1 1 1 1 ...\n $ colour             : chr  \"BLU\" \"BLU\" \"BLU\" \"BLU\" ...\n $ wing_chord         : num  116 120 118 120 116 115 114 109 112 115 ...\n $ wing_flat          : num  117 121 119 121 118 117 116 111 114 119 ...\n $ tail               : num  55 47 53 52 54 55 58 60 46 56 ...\n $ p_9                : int  89 92 93 95 91 95 88 88 92 91 ...\n $ weight             : num  20 22.5 23.8 19.7 19.5 ...\n $ date               : chr  \"2015-06-01\" \"2015-06-01\" \"2017-06-01\" \"2017-06-01\" ...\n $ nest_box           : Factor w/ 218 levels \"MC01\",\"MC02\",..: 134 134 142 99 214 214 143 202 33 26 ...\n $ clutch_size        : int  6 6 5 6 4 3 6 6 4 5 ...\n $ clutch_number      : int  1 1 1 1 1 1 1 1 1 1 ...\n $ no_of_young_fledged: int  6 6 4 4 4 1 4 6 4 5 ...\n $ number_hatch       : int  6 6 4 4 4 2 6 6 4 5 ...\n $ location           : Factor w/ 3 levels \"MC\",\"PT\",\"SL\": 2 2 2 2 3 3 3 3 1 1 ...\n\n# fix class\nnest$nest_code <- as.factor(nest$nest_code)\nnest$location <- as.factor(nest$location)\n\n\n\nSexual dimorphism in tree\nswallows\nSexual dimorphism is defined as the phenotypic\nvariations within different sexes of the same species (Andersson 1994).\nDifferences can include size, weight, plumage (in birds). These\ndifferences are thought to arise through species that are part of a\nsocial mating system, in which there may be varying degrees of parental\ncare (Darwin 1871; Wallace 1889; Anderson 1994). This phenomenon is\noften seen in birds, where males are the larger sex and have more ornate\nplummage than females.\n[]!(TRES/ornate.png)\nImage from ThoughtCo..\nQuestion\nWhy do you think this phenomenon happens?\nWhy are females generally more drab?\nIn which instance to you think females would be more ornate than\nmales?\nAnswer:\n\n\n\nTo determine if sexual dimorphism exists in this\ntree swallow data were will get you to explore the average size\nmeasurements taken for each bird. Since birds were tracked using a band\nnumber, and birds may have been captured multiple times throughout their\nlife, so we will observe the differences in average size measurement\ntaken for each bird.\n\n\n# look at the following variable to see how they differ by gender : wing_chord, tail, and weight\n\n# will will take the mean of these measurements by band_number and gender\n\nwing_chord_grouped <- aggregate(wing_chord ~ band_number + sex, banding, mean)\n\n\n# Boxplot of these trends based on sex\n\nggplot(wing_chord_grouped, aes(factor(sex), wing_chord, fill=sex)) + \n  geom_boxplot() +\n  scale_fill_manual(\"\", values=c(\"M\"= \"lightskyblue\", \"F\"= \"plum3\")) + \n  xlab('') +\n  ylab('Wing Chord') +\n  ggtitle(\"Wing Chord vs. Sex\")\n\n\n\n\nTry coding\nLets go ahead and try calculating the mean tail length when grouped\nby sex and band number and graph boxplots of these values. Lets call the\ngrouped tail values ‘tail_grouped’ and grouped weight values\n‘weight_grouped’. Hint: think look at how we calculated these values for\nwing_chord.\n\n\n\nNow, to get a sense of how much the wind chord length, tail length,\nand weight differs between male and female tree swallows lets find the\nmean values of both the males and females.\n\n\n# We can calculate the mean female and male wing chord length by grouping the wing chord values by sex and finding the mean like this: \n\naggregate(wing_chord ~ sex, wing_chord_grouped, mean)\n\n\n  sex wing_chord\n1   F   113.5396\n2   M   117.9625\n\n# see how we are using the dataframe 'wing_chord_grouped' that we aggregated previously where we had already grouped our birds by band  number and sex?\n\n\n\nTry coding\nTry calculating the mean female and male tail length and weight\nvalues on your own.\n\n\n\nQuestions\nWhat is the average wing chord length, tail length, and weight of\nthe male tree swallows?\nWhat is the average wing chord length, tail length, and weight of\nthe female tree swallows?\nDo these findings suggest that there is some level of sexual\ndimorphism in tree swallows?\nWhat type of pressures could lead to sexual dimorphism in tree\nswallows?\nAnswer:\n\n\n\n\nAspects of Tree Swallow\nLife History\nTrade offs: Clutch\nsize vs. clutch number?\n\n\n# To visualize whether there may be a trade off between clutch size and the number of clutches in a nest lets visualize these factors in a box plot. The nest dataset contains records of the clutch numbers found in nest boxes across Long Point dating back to 1987!\n\n# lets take a quick look at the dataset first to figure out what we need to plot\nhead(nest)\n\n\n  year nest_box clutch_number location nest_code clutch_size\n1 1987     MC02             2       MC MC1987M02           3\n2 1987     MC03             1       MC MC1987M03           5\n3 1987     MC04             1       MC MC1987M04           4\n4 1987     MC07             1       MC MC1987M07           5\n5 1987     MC08             1       MC MC1987M08           6\n6 1987     MC10             1       MC MC1987M10           5\n\n# we want to look at how clutch size (clutch_size) may vary between the first and second clutch (clutch_number). Lets check these out using the plotting function ggplot\n\nggplot(nest, aes(factor(clutch_number), clutch_size)) + \n  geom_boxplot(outlier.colour=\"black\", outlier.size=0.5, position = position_dodge(preserve = \"single\")) +\n  xlab('Clutch Number') +\n  ylab('Clutch Size') +\n  ggtitle(\"Clutch Number vs. Clutch Size\") +\n  scale_y_continuous(breaks = seq(0, 13, by = 1)) +\n  theme(plot.title = element_text(hjust = 0.5))\n\n\n\n# What is the mean clutch size for the first and second clutch in a nest? This is how we would calculate the average clutch size for clutch number 1 and 2. See how we are finding the mean clutch size by the clutch number, pulling these values from the nest data set?\naggregate(clutch_size ~ clutch_number, nest, mean )\n\n\n  clutch_number clutch_size\n1             1    5.613377\n2             2    4.796196\n\nQuestion\nWhat is the average clutch size for the first and second\nclutches?\nAnswer:\nIt appears that second clutches are slightly smaller than first\nclutches! However, in order to confirm that there is a statistically\nsignificant difference between the two clutch sizes you would need to\ncomplete some sort of statistical analysis (e.g a t-test).\nDo larger birds have\nbigger clutches?\nIs the size and weight of the bird at maturity related to the clutch\nsize? Lets look at wing chord length, tail length, and bird weight to\ninvestigate this. Also, lets make sure we look at male and female birds\nseparately.\n\n\n# First, lets find the mean wing chord length when grouped by year, nest_box, sex, clutch_number, clutch_size and band number. This will help us deal with any repeated measurements taken of the same bird visiting the the same nest box multiple times in a season.\n\n# Here is how we find the mean wing chord length, we will store these calculation in the dataframe 'banding_nest.wing_chord'\n\nbanding_nest.wing_chord <- aggregate(wing_chord ~ year + sex + nest_box + clutch_number + band_number + clutch_size, banding_nest, mean)\n\n# Here is how we find the mean tail length, we will store these calculation in the dataframe 'banding_nest.tail'\n\nbanding_nest.tail <- aggregate(tail ~ year + sex + nest_box + clutch_number + band_number + clutch_size, banding_nest, mean)\n\n# Here is how we find the mean weight, we will store these calculation in the dataframe 'banding_nest.weight'\n\nbanding_nest.weight <- aggregate(weight ~ year + sex + nest_box + clutch_number + band_number + clutch_size, banding_nest, mean)\n\n# lets see if we see any patterns between the number of eggs there are per clutch (clutch_size) and the weight or size of the parent tree swallow\n\nplot(clutch_size ~ wing_chord, banding_nest.wing_chord,\n     main=\"Clutch Size vs Parent Wing Chord Length\",\n     pch=20,\n     col=sex,\n     xlab=\"Wing Chord Length (mm)\", \n     ylab=\"Clutch Size\")\nlegend(\"topright\", legend= levels(banding_nest.wing_chord$sex), # this adds a legend to out plots to tell us\n       col= 1:2, pch = 20, cex=0.9)\n\n\n\nplot(clutch_size ~ tail, banding_nest.tail,\n     main=\"Clutch Size vs Parent Tail Length\",\n     pch=20,\n     col=sex,\n     xlab=\"Tail Length (mm)\", \n     ylab=\"Clutch Size\")\nlegend(\"topright\", legend= levels(banding_nest.tail$sex),\n       col= 1:2, pch = 20, cex=0.9)\n\n\n\nplot(clutch_size ~ weight,banding_nest.weight,\n     main=\"Clutch size vs Parent Bird Weight\",\n     pch=20,\n     col=sex,\n     xlab=\"Weight (g)\", \n     ylab=\"Clutch Size\")\nlegend(\"topright\", legend= levels(banding_nest.weight$sex),\n       col= 1:2, pch = 20, cex=0.9)\n\n\n\n\nQuestion\nDo you notice any relationships between bird size and clutch\nsize?\nAnswer:\nChanges through time\nLastly, lets investigate if the average clutch size over time is\nchanging. Could bird birth rates be changing over time as a result of\nclimate change or other environmental shifts?\n\n\n# first we want to take the average clutch size that was sampled from all of the nest boxes each year\n\nnest.average <- aggregate(clutch_size ~ year, nest, mean)\n\n# next, we will graph these values and add a linear regression with the associated R-squared value to see if there is evidence of a trend!\n\nlm_clutch_size <- summary(lm(clutch_size ~ year, data= nest.average)) # this line helps helps us calculate linear regressions\nr2_0 <- lm_clutch_size$r.squared # this line helps us make R-squared labels\nrlabel_0 <- bquote(italic(R)^2 == .(format(r2_0, digits = 3))) # this line helps us make R-squared labels\nplot(clutch_size ~ year, data=nest.average,\n     main=\"Yearly Average Clutch Size over Time\",\n     pch=16,\n     xlab=\"Year\", \n     ylab=\"Yearly Average Clutch Size\",\n     cex.main=1.25, \n     cex.lab=1)\nabline(lm(clutch_size ~ year, data=nest.average)) # this line adds our linear regression to the plot\ntext(2010, 6.2, rlabel_0)  # this line adds our R-squared labels to the plot\n\n\n\n\nQuestion\nDo you notice any relationships between clutch size and year?\nAnswer:\nTake-homes\nAfter going through these data you have now had the opportunity to\nlearn a bit about tree swallows, and more specifically look at a\n‘community’ of tree swallows found in Long Point, ON. This population\nappeared to show signs of sexual dimorphism, where the male swallows had\nlonger wing chords and tails and were heavier. As well, we noticed that\nthere appeared t be a trade off between clutch size and the number of\nclutched in a nest. An important thing to not is that these\nrelationships were speculative and statistical analyses will be required\nto support these findings in this population.\nLastly, these data did not show trends of larger birds having more\neggs and we observed no conclusive temporal trends of changes in birth\nrates over time. It is not uncommon that data is collected with certain\nhypotheses in mind and trend or relationships are ultimately not found\nto support these hypotheses!\n\n\n\n",
    "preview": "lessons/2022-04-07-sexual-dimorphism-and-sexual-selection/sexual-dimorphism-and-sexual-selection_files/figure-html5/unnamed-chunk-3-1.png",
    "last_modified": "2022-04-09T03:18:27+00:00",
    "input_file": {}
  },
  {
    "path": "lessons/2022-04-07-tree-swallow-dataset/",
    "title": "Tree Swallow Dataset",
    "description": "A short description of the post.",
    "author": [
      {
        "name": "Elizabeth Houghton",
        "url": {}
      },
      {
        "name": "Kirsten Palmier",
        "url": {}
      }
    ],
    "date": "2022-04-07",
    "categories": [],
    "contents": "\nTree Swallow Nest\nProductivity\nThis is a tutorial to get you familiar with R and explore ecological\nconcepts through a Tree Swallow nest productivity dataset. Before we\njump into the weeds, let’s get to know our dataset!\nThe Tree Swallow (Tachycineta bicolor) is one of the most\ncommon birds in eastern North America that normally nests in tree\ncavities excavated by other species like woodpeckers, but also readily\naccepts human made nest’ boxes. Based on this quality and their\nabundance, Birds Canada has monitored nest boxes of tree swallows around\nthe Long Point Biosphere Reserve, Ontario, from 1974 to 2014. Each year,\nMay through June, volunteer research assistants check nest box contents\ndaily, and band the adults and their young. Nest-box records are\navailable from about 300 boxes from 3-4 sites during this period. Data\ncollected includes nest box observations, clutch initiation dates,\nclutch size and egg weight, nest success, weather, insect abundance, and\nbanding data. This data set includes all data entry related to eggs,\nnests, nestlings, nest check observations, and banding data from 1977 to\n2014. More information on this dataset can be found here.\nAdditionally, in 2021, this dataset was quality checked and made open\naccess by Jonathan Diamond through a Data Rescue internship with the Living Data Project,\nan initiative through the Canadian Institute of Ecology and Evolution\nthat rescues legacy datasets.\n\nThrough Bird Studies Canada, Long Point Bird Observatory monitored\nthree nest box “colonies” of Tree Swallows at Long Point, two on the\n“mainland” near Port Rowan (at the Port Rowan sewagelagoons and adjacent\nto agricultural land at mudd creek) and the third at the tip of the\nPoint.\nThe Point\nThis colony was established in its present location in 1969. The nest\nboxes are located about 1 km west of the Tip of the point and are\narranged 24.4m apart in a grid of numbered (north-south) rows and\nlettered (east-west) columns. Each box is designated by its position, so\nbox 10G is in row 10 and column G. At the present time the rows in use\nare 1-19 and the letters are D-K, but many positions are unfilled and\nthere are a total of 64 boxes.\n\nThe Sewage Lagoon\nThis colony was first established in 1977 and has since been expanded\nto a total of 77 boxes. The boxes are in two rows around the lagoon\nembankment, as well as across the street in a small cluster of 5\nboxes.\n\nMud Creek\nEstablished in 1987, the Mud Creek site is located 3.25 km\nnorth-northeast of Sewage Lagoon and contains 80 nest boxes. The habitat\nis an open, uncultivated field adjacent to a small woodlot.\n\nTutorial Learning Objectives\nIn this tutorial you will learn how to:\nLearn to work with data within R studio\nUse simple commands in R (e.g., subsetting, changing class,\naggregating data)\nGraph a simple bar chart\nGraph a time series\n\nObserve trends in figures\nInstalling R\nTo navigate and complete the following tutorials you will be required\nto install R and we encourage you to install R Studio.\nR is a freely available software and the most recent\nversion of R can be downloaded from: https://cran.r-project.org. After you have installed\nR, we encourage you to download R Studio as it provides a\nmore user friendly interface to interact with R. R Studio\nDesktop is freely available from https://rstudio.com/products/rstudio/download/.\nThe final piece of software that is required for completing the\npracticals is rmarkdown. R Markdown documents weave\ntogether narrative text and code to produce formatted, fully\nreproducible outputs. If you are unfamiliar with R Markdown, a short\ntutorial is available from https://rmarkdown.rstudio.com/articles_intro.html.\nOverview of R concepts\nIn this next section we are going to walk you through a few of the\nconcepts you need to understand in order to work with data in\nR.\nImporting data and packages\nIn order to work with certain set of data in R, you must first pull\nthem into the program.\n\n\n# Before we can pull packages into 'R', you will first have to install them onto your computer. Run the following code to download the required packages (without the #s, you only need to install them once):\n\n# install.packages(\"dplyr\")\n# install.packages(\"ggplot2\")\n# install.packages(\"tidyr\")\n# install.packages(\"lubridate\")\n# install.packages(\"reshape\")\n# install.packages(\"readr\")\n\n# Now we can start running those packages by calling on them using the following code:\n\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(tidyr)\nlibrary(lubridate)\nlibrary(reshape)\nlibrary(readr)\n\nbanding <- read.csv(\"TRES/banding_final.csv\") #this dataset set contains banding information\n\nnest <- read.csv(\"TRES/nest_final.csv\") #this dataset contains nest information\n\nnestling <- read.csv(\"TRES/nestling_final.csv\") #this dataset contains nestling information\n\n\n\nData Exploration\nLet’s do some data exploring! First, let’s see what is in the banding\ndataset. This will help give us a better idea of what we can look\nat.\n\n\n#look into the first few rows of the banding dataset. You can do this using the head() function\nhead(banding) #where head() is the function and banding is the dataset\n\n\n  band_or_recapture band_number sex colour wing_chord wing_flat tail\n1                 R    1831.386   F    BLU        116       119   58\n2                 R    1881.065   F    BLU        115       119   54\n3                 R    2171.200   F    BLU        112       114   55\n4                 R    1881.064   M    BLU        123       124   60\n5                 B    2351.397   M    BLU        118       119   58\n6                 R    1881.042   M    BLU        123       125   56\n  p_9 weight       date nest_box age_code year\n1  89   22.0 2010-06-01     PT4G      ASY 2010\n2  90   19.6 2010-06-01     PT2F      ASY 2010\n3  88   21.5 2010-06-01    PT15G      ASY 2010\n4  96   21.1 2010-06-01     PT4G      AHY 2010\n5  92   22.1 2010-06-01    PT15G      AHY 2010\n6  97   20.5 2010-06-01     PT2F      AHY 2010\n\nYou can dig in deeper by using the summary() and str() functions\n\n\n#summarise the banding dataset\nsummary(banding) \n\n\n band_or_recapture   band_number       sex           \n Length:1602        Min.   :1381   Length:1602       \n Class :character   1st Qu.:2312   Class :character  \n Mode  :character   Median :2351   Mode  :character  \n                    Mean   :2310                     \n                    3rd Qu.:2402                     \n                    Max.   :5212                     \n    colour            wing_chord      wing_flat          tail      \n Length:1602        Min.   :100.0   Min.   :102.0   Min.   :44.00  \n Class :character   1st Qu.:113.0   1st Qu.:115.0   1st Qu.:53.00  \n Mode  :character   Median :116.0   Median :118.0   Median :55.00  \n                    Mean   :115.7   Mean   :117.9   Mean   :54.98  \n                    3rd Qu.:118.0   3rd Qu.:121.0   3rd Qu.:57.00  \n                    Max.   :129.0   Max.   :130.0   Max.   :69.00  \n      p_9             weight          date          \n Min.   : 78.00   Min.   :16.50   Length:1602       \n 1st Qu.: 90.00   1st Qu.:19.80   Class :character  \n Median : 92.00   Median :20.50   Mode  :character  \n Mean   : 92.39   Mean   :20.58                     \n 3rd Qu.: 95.00   3rd Qu.:21.40                     \n Max.   :109.00   Max.   :25.90                     \n   nest_box           age_code              year     \n Length:1602        Length:1602        Min.   :2010  \n Class :character   Class :character   1st Qu.:2011  \n Mode  :character   Mode  :character   Median :2012  \n                                       Mean   :2012  \n                                       3rd Qu.:2013  \n                                       Max.   :2014  \n\n#check the structure of the banding dataset\nstr(banding) #This is important, because the variables need to match what they are being used for (i.e., to calculate mean, the variable must be numeric, not a character type)\n\n\n'data.frame':   1602 obs. of  13 variables:\n $ band_or_recapture: chr  \"R\" \"R\" \"R\" \"R\" ...\n $ band_number      : num  1831 1881 2171 1881 2351 ...\n $ sex              : chr  \"F\" \"F\" \"F\" \"M\" ...\n $ colour           : chr  \"BLU\" \"BLU\" \"BLU\" \"BLU\" ...\n $ wing_chord       : num  116 115 112 123 118 123 110 111 112 117 ...\n $ wing_flat        : num  119 119 114 124 119 125 112 113 114 118 ...\n $ tail             : num  58 54 55 60 58 56 55 52 55 54 ...\n $ p_9              : int  89 90 88 96 92 97 89 87 90 92 ...\n $ weight           : num  22 19.6 21.5 21.1 22.1 20.5 20 21.6 19.8 20.5 ...\n $ date             : chr  \"2010-06-01\" \"2010-06-01\" \"2010-06-01\" \"2010-06-01\" ...\n $ nest_box         : chr  \"PT4G\" \"PT2F\" \"PT15G\" \"PT4G\" ...\n $ age_code         : chr  \"ASY\" \"ASY\" \"ASY\" \"AHY\" ...\n $ year             : int  2010 2010 2010 2010 2010 2010 2010 2010 2010 2010 ...\n\nSubsetting and\nconditional subsetting elements\nThe [ operator can be used to select multiple\nelements of an object: The [ operator can be used to\nextract specific rows or columns from a data set where DATA[row,\ncolumn]\nThe $ operator can be used to extract elements by\nthe element’s name\nLet’s try pulling the first row from the banding dataset\n\n\nbanding[c(1),] #notice how there is a comma after c(1)? This specifies the first row!\n\n\n  band_or_recapture band_number sex colour wing_chord wing_flat tail\n1                 R    1831.386   F    BLU        116       119   58\n  p_9 weight       date nest_box age_code year\n1  89     22 2010-06-01     PT4G      ASY 2010\n\nLet’s make a mini version of our banding dataset, and call it\nbanding2, by subsetting rows 1 through 50 and columns 2, and 5 through\n13\n\n\nbanding2 <- banding[c(1:50), c(2,5:13)] #where banding2 is our new dataframe containing data from rows 1:50 and columns 1 and 5:13 from the banding dataset. \n\n\n\nYou can also run functions on different variables of your datasets\nwhich you can select by using $. You can wrap these in\ndifferent functions to calculate various things. Let’s calculate the\nmean weight from our banding2 dataset and assign it to a new variable\ncalled mean_weight.\n\n\nbanding2$mean_weight <- mean(banding2$weight)\n\n#Let's take a quick look at banding2 now\nhead(banding2)\n\n\n  band_number wing_chord wing_flat tail p_9 weight       date\n1    1831.386        116       119   58  89   22.0 2010-06-01\n2    1881.065        115       119   54  90   19.6 2010-06-01\n3    2171.200        112       114   55  88   21.5 2010-06-01\n4    1881.064        123       124   60  96   21.1 2010-06-01\n5    2351.397        118       119   58  92   22.1 2010-06-01\n6    1881.042        123       125   56  97   20.5 2010-06-01\n  nest_box age_code year mean_weight\n1     PT4G      ASY 2010      20.815\n2     PT2F      ASY 2010      20.815\n3    PT15G      ASY 2010      20.815\n4     PT4G      AHY 2010      20.815\n5    PT15G      AHY 2010      20.815\n6     PT2F      AHY 2010      20.815\n\nWhat if we wanted to calculate the mean weight of the Tree Swallows\nas recorded in the banding dataset based on their sex? We could do that\nby grouping how we calculate the mean by using the aggregate() function.\nThe aggregate function can work to group data as follows:\naggregate(y ~ a + b + c + …, df, mean)\nWhere y is the variable you want to take the mean of, a, b, c… are\nvariables that you are interested in grouping these means by, df is the\ndataframe that you are pulling these data from, and ‘mean’ is\ninstructing the command that the summary statistic you want to complete\nis the mean. Lets try it out!\n\n\n# If we wanted to look at the average weight of female and male birds in the banding dataset we would use aggregate() like this\nbanding3 <- aggregate(weight ~ sex, banding, mean) # banding3 is where these values will be stored\nbanding3\n\n\n  sex   weight\n1   F 20.41623\n2   M 20.75646\n\nTry coding\n\n\n# Try looking at the mean weight of Tree Swallows grouped by sex and year, call this new data frame 'banding4'\n\n\n\nNow that you have a good handle on basic subsetting, let’s dig a\nlittle deeper and use logical operators to further subset your data.\nWhat if you want to focus in on looking at just one sex? How would\nyou extract only data related to female birds from these data? One way\nto do this would be to use the subset() function and logical operators\nto separate out the data of interests from your data set.\n< (less than)\n<= (less than or equal to)\n> (greater than)\n>= (greater than or equal to)\n== (exactly equal to)\n!= (not equal to)\nx | y (x OR y)\nx & y (x AND y)\nIt is important to note that certain logical operators only work on\ncertain classes of data. For example, if we looked at sex (class of\nfactor) we can’t subset values that are less than or equal to Female\n(this would make no sense since Female is not a number or integer!).\n\n\n# pull out female birds from your banding dataset \nhead(subset(banding, sex == \"F\")) #the head function limits the amount of rows displayed\n\n\n  band_or_recapture band_number sex colour wing_chord wing_flat tail\n1                 R    1831.386   F    BLU        116       119   58\n2                 R    1881.065   F    BLU        115       119   54\n3                 R    2171.200   F    BLU        112       114   55\n7                 B    2351.397   F    BLU        110       112   55\n8                 R    2321.083   F    BLU        111       113   52\n9                 B    2351.397   F    INT        112       114   55\n  p_9 weight       date nest_box age_code year\n1  89   22.0 2010-06-01     PT4G      ASY 2010\n2  90   19.6 2010-06-01     PT2F      ASY 2010\n3  88   21.5 2010-06-01    PT15G      ASY 2010\n7  89   20.0 2012-06-01     PT1J      ASY 2010\n8  87   21.6 2012-06-01     PT4J      ASY 2010\n9  90   19.8 2012-06-01     PT8K      AHY 2010\n\n# Remember, if you want to store this in a df to look at later I would have to assign it to a vector called \"female_birds\"\nfemale_birds <- subset(banding, sex == \"F\")\n\nhead(female_birds)\n\n\n  band_or_recapture band_number sex colour wing_chord wing_flat tail\n1                 R    1831.386   F    BLU        116       119   58\n2                 R    1881.065   F    BLU        115       119   54\n3                 R    2171.200   F    BLU        112       114   55\n7                 B    2351.397   F    BLU        110       112   55\n8                 R    2321.083   F    BLU        111       113   52\n9                 B    2351.397   F    INT        112       114   55\n  p_9 weight       date nest_box age_code year\n1  89   22.0 2010-06-01     PT4G      ASY 2010\n2  90   19.6 2010-06-01     PT2F      ASY 2010\n3  88   21.5 2010-06-01    PT15G      ASY 2010\n7  89   20.0 2012-06-01     PT1J      ASY 2010\n8  87   21.6 2012-06-01     PT4J      ASY 2010\n9  90   19.8 2012-06-01     PT8K      AHY 2010\n\n# what if you wanted to look at female birds that weighed over 20g?\nfemale_birds <- subset(banding, sex == \"F\" & weight > 20)\n\nhead(female_birds)\n\n\n   band_or_recapture band_number sex colour wing_chord wing_flat tail\n1                  R    1831.386   F    BLU        116       119   58\n3                  R    2171.200   F    BLU        112       114   55\n8                  R    2321.083   F    BLU        111       113   52\n12                 R    1771.437   F    BLU        111       114   53\n13                 R    2311.936   F    BRO        115       117   54\n19                 R    2311.933   F    INT        116       119   57\n   p_9 weight       date nest_box age_code year\n1   89   22.0 2010-06-01     PT4G      ASY 2010\n3   88   21.5 2010-06-01    PT15G      ASY 2010\n8   87   21.6 2012-06-01     PT4J      ASY 2010\n12  87   20.2 2012-06-01    PT11I      ASY 2010\n13  91   20.2 2012-06-01    PT10G      AHY 2010\n19  93   20.4 2012-06-01    PT13G      AHY 2010\n\n#Notice how the vector female_birds changed from 853 observations to 495 observations?\n\n\n\nTry coding\n\n\n# Try to subset a dataframe called 'male_birds' that consists of male birds with the chord_length less than or equal to 150\n\n\n\nQuestion\nHow many male birds have a chord_length less than or equal to\n150?\nAnswer:\nHaving fun yet? I know I am! Let’s look at the basics of a plot. This\nimage was pulled from here.\n\nNow that we are refreshed in the elements of a graph, let’s graph a\nrelatively simple bar plot with our banding data frame.\nLet’s look at the number of banded and recaptured birds there were\neach year. We will use ggplot to visualize the\ndata.\n\n\n#First, we will create a table base on the band_or_recapture column and the year column\ntbl1 <- with(banding, table(band_or_recapture, year))  \ntbl1\n\n\n                 year\nband_or_recapture 2010 2011 2012 2013 2014\n                B   62  125  118   68  101\n                R  179  264  292  139  254\n\n#Next, we can plot our table \nggplot(as.data.frame(tbl1), aes(x =factor(year), y = Freq, fill = band_or_recapture))+ #we've changed the format of our table to a dataframe so we can plot it. \n  geom_col(position = 'dodge') #geom_column is the type of graph, and position='dodge' allows us to visualize the barplots side by side.\n\n\n\n\nCongrats! You’ve made your first graph. We can change elements of the\ngraph by adding labels and titles, changing the theme and colours of our\nbars.\n\n\n#Add labels and change colours\nggplot(as.data.frame(tbl1), aes(x =factor(year), y = Freq, fill = band_or_recapture))+ \n  geom_col(position = 'dodge') +\n  xlab('Year') +\n  ylab('Number of birds') +\n  scale_fill_manual(name= \"Banded or Recaptured\", values=c(\"B\" = 'lightskyblue', \"R\" = 'plum3'))+\n  ggtitle(\"Birds banded or recaptured from 2010-2014\") +\n  theme_classic() #gets rid of grey background\n\n\n\n\nQuestion\nWhat trends do you see? Why do you think there are more recaptured\nbirds compared to banded birds every year?\nAnswer:\n(If you’d like to learn more about ggplot, this\ntutorial is great!)\nNext, let’s change gears and take a quick look at the egg nestling\ndataset.\n\n\nhead(nestling)\n\n\n  nest_box band_number year clutch_number day_1_weight day_12_weight\n1     PT7F  2351.39972 2014            NA         <NA>          <NA>\n2     PT7F  2351.39973 2014            NA         <NA>          <NA>\n3     PT7F  2351.39974 2014            NA         <NA>          <NA>\n4    PT14G  2351.39975 2014            NA         <NA>          <NA>\n5    PT14G  2351.39976 2014            NA         <NA>          <NA>\n6    PT14G  2351.39977 2014            NA         <NA>          <NA>\n  site nest_code\n1 <NA>      <NA>\n2 <NA>      <NA>\n3 <NA>      <NA>\n4 <NA>      <NA>\n5 <NA>      <NA>\n6 <NA>      <NA>\n\nIf we look at the structure of our new dataframe, nestling:\n\n\nstr(nestling)\n\n\n'data.frame':   32536 obs. of  8 variables:\n $ nest_box     : chr  \"PT7F\" \"PT7F\" \"PT7F\" \"PT14G\" ...\n $ band_number  : chr  \"2351.39972\" \"2351.39973\" \"2351.39974\" \"2351.39975\" ...\n $ year         : int  2014 2014 2014 2014 2014 2014 2014 2014 2014 2014 ...\n $ clutch_number: int  NA NA NA NA NA NA NA NA NA NA ...\n $ day_1_weight : chr  NA NA NA NA ...\n $ day_12_weight: chr  NA NA NA NA ...\n $ site         : chr  NA NA NA NA ...\n $ nest_code    : chr  NA NA NA NA ...\n\nWe don’t have entries for all rows of our dataframe. They will appear\nas NAs. We see the weight is a character vector. Let’s\nchange that to numeric using the as.numeric() function. Let’s start with\nthe day_1_weight column:\n\n\nnestling$day_1_weight <- as.numeric(nestling$day_1_weight)\n\n\n\nNow the day_12_weight column:\n\n\nnestling$day_12_weight <- as.numeric(nestling$day_12_weight)\n\n\n\nWe want to summarize our data so we can calculate the mean of each\nweight by year\n\n\nnestling_weight <- nestling %>%\n  group_by(year) %>% #groups weights by year\n  filter(is.na(day_1_weight) == F,  #gets rid of NAs\n         is.na(day_12_weight) == F) %>%\n  summarise(mean_day_1 = mean(day_1_weight), #calculates the mean of each year \n            mean_day_12 = mean(day_12_weight)) \n\n\n\nWe can convert the mean weights to long format, which gives us a\nweight column, with both weight variables, and a total column which\ncontains the weights\n\n\nnestling_weight2 <- gather(nestling_weight, weight, total, mean_day_1:mean_day_12)\n\n\n\nLook at the structure of our new dataframe, nestling_weight2\n\n\nstr(nestling_weight2)\n\n\ntibble [74 × 3] (S3: tbl_df/tbl/data.frame)\n $ year  : int [1:74] 1977 1978 1979 1980 1981 1982 1983 1984 1985 1986 ...\n $ weight: chr [1:74] \"mean_day_1\" \"mean_day_1\" \"mean_day_1\" \"mean_day_1\" ...\n $ total : num [1:74] 21.83 1.76 1.69 2.18 2.03 ...\n\nOk, now we can plot it using ggplot.\n\n\nggplot(data = nestling_weight2,\n       aes(x = year, y = total, group = weight)) + #Year goes on the x axis, weight(totals) on the y axis, and we group by each the means of each day\n  geom_line(aes(linetype = weight, color = weight)) + #aes changes the aesthetics of the lines so that linetype and colors are different from each other\n  theme_classic()\n\n\n\n\nHmm, looks like something is not quite right in our plot. There seems\nto be an outlier within the data. If we assume this is a data entry\nerror, we can get rid of it. Since it looks like an earlier date, let’s\njust look at the first few rows (n = 10) and see if we can find the\noutlier.\n\n\nhead(nestling_weight2, n = 10)\n\n\n# A tibble: 10 × 3\n    year weight     total\n   <int> <chr>      <dbl>\n 1  1977 mean_day_1 21.8 \n 2  1978 mean_day_1  1.76\n 3  1979 mean_day_1  1.69\n 4  1980 mean_day_1  2.18\n 5  1981 mean_day_1  2.03\n 6  1982 mean_day_1  2.54\n 7  1983 mean_day_1  1.90\n 8  1984 mean_day_1  1.57\n 9  1985 mean_day_1  1.68\n10  1986 mean_day_1  1.59\n\nAh ha! The first row contains a mean_day_1 weight of 21.828571. This\nis likely an error. Let’s get rid of it and then re-plot it.\n\n\nnestling_weight2 <- nestling_weight2[-1,]\nggplot(data = nestling_weight2,\n       aes(x = year, y = total, group = weight)) + #Year goes on the x axis, weight(totals) on the y axis, and we group by each the means of each day\n  geom_line(aes(linetype = weight, color = weight)) + #aes changes the aesthetics of the lines so that linetype and colors are different from each other\n  theme_classic()\n\n\n\n\nQuestion\nMuch better! Do you see any trends within this datasets over time?\nWhat other variables could you look at within the nestling dataset?\nAnswer:\nCheck out this cool video on nesting Tree Swallows!\n\n\n\n\n\n\n\n\n\n\n",
    "preview": "lessons/2022-04-07-tree-swallow-dataset/tree-swallow-dataset_files/figure-html5/unnamed-chunk-11-1.png",
    "last_modified": "2022-04-09T03:16:21+00:00",
    "input_file": {}
  },
  {
    "path": "lessons/2022-04-07-alberta-trees-tutorial/",
    "title": "Alberta Trees Tutorial",
    "description": "A short description of the post.",
    "author": [
      {
        "name": "Jhoan Chavez",
        "url": {}
      },
      {
        "name": "Zihaohan Sang",
        "url": {}
      },
      {
        "name": "Rolando Trejo Pérez",
        "url": {}
      }
    ],
    "date": "2022-04-07",
    "categories": [],
    "contents": "\n\n\n\n\n\n\n",
    "preview": {},
    "last_modified": "2022-04-16T22:38:26-04:00",
    "input_file": "alberta-trees-tutorial.knit.md"
  }
]
