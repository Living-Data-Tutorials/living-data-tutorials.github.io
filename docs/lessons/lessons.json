[
  {
    "path": "lessons/2022-08-26-species-richness-rank-abundance-curves/",
    "title": "So Many Species, So Little Time: Calculating and Visualizing Biodiversity",
    "description": "We present a number of common metrics for quantifying biodiversity, their meaning, and how they can be visualized with the help of a Rank-Abundance curves",
    "author": [
      {
        "name": "Jory Griffith",
        "url": {}
      },
      {
        "name": "Egor Katkov",
        "url": {}
      },
      {
        "name": "Maggie Slein",
        "url": {}
      }
    ],
    "date": "2022-08-26",
    "categories": [],
    "contents": "\n\nContents\nWhy biodiversity matters\nTypes of data typically\ncollected\nWays to calculate\ndiversity\nVisualizing species diversity\nRank abundance curves\nwith simulated data\nRank\nabundance curves with Turkey lakes invertebrate data\nThe Data\n\ncodyn\ntutorial\nLoad\nPackages\nUsing\nthe codyn package to analyze diversity data over\ntime\nUsing\ncommunity_structure()\nSpecies Richness and\nEvenness\n\nUsing\ncommunity_diversity()\nShannon’s\ndiversity\nSimpson’s\ndiversity\n\nActivity\n\nReferences\n\n\n\nhide\n\nknitr::opts_chunk$set(include = T, warning=F, message=F)\n# knitr::opts_knit$set(root.dir = \"..\")\nknitr::opts_chunk$set(error = TRUE)\n\n\n\nEcologists are often interested in the effects of perturbations\n(e.g. fires, logging, flooding or pollution) on biodiversity, which can\nyield information and context for ecosystem health. However, boiling\nbiodiversity down to a single metric can be difficult and incomplete\ndepending on the goal. With the help of the Turkey lake dataset of\nbenthic invertebrates, we will present you with a number of common\nmetrics to assess biodiversity, their meaning, and how they can be\nvisualized with the help of Rank-Abundance curves.\nYou will then have the option to learn to calculate biodiversity\nmetrics yourself using an R package called codyn.\nWhy biodiversity matters\nIn an ever-changing world, we are often concerned with how organisms\nwill be able to cope with disturbances and increasingly, global climate\nchange. Biodiversity is the variety of life at all levels, from genes to\necosystems. Not only is biodiversity important for ecosystems to\nfunction properly, it is also an important buffer to withstanding\nchanging environments. When there is high biodiversity, there is a\nhigher chance of some organisms surviving ecosystems that are changing\ndue to disturbance or climate change. Biodiversity therefore increases\nthe resiliency of these ecosystems and the likelihood that they will be\nable to persist beyond this change.\nTypes of data typically\ncollected\nBiodiversity is a broad term, and can be difficult to quantify.\nBiologists have created several standard measures of biodiversity that\nconvey different information about ecosystems and the species living\nthere.\nOften times, biologists interested in collecting biodiversity data\ncollect a standard set of responses. These often include:\nThe different kinds of species in a given area or environment\nThe number of individuals of each species (abundance)\nInformation about the area itself (i.e. habitat type, weather\nconditions, etc.)\nIf the work involves an setting up an experiment, collecting the\ncontrol vs. experimental groups as well as metrics for replication and\nstatistical power\nThe time frame over which the data were collected\n(We should include a figure here we where show schematics or\npictures of each of these responses people collect)\n\n\nhide\n\npacman::p_load(tidyverse, patchwork)\nset.seed(222)\nsim1 <- data.frame(\n  species = sample(1:10, 20, replace=2), \n  abundance = sample(0:200, 20, replace=2), \n  time= 2001)\nset.seed(723)\nsim2 <- data.frame(\n  species = sample(1:10, 20, replace=2), \n  abundance = sample(0:200, 20, replace=2), \n  time= 2009)\nset.seed(117)\nsim3 <- data.frame(\n  species = sample(1:7, 20, replace=2), \n  abundance = sample(0:200, 20, replace=2), \n  time= 2020)\nsim <- rbind(sim1, sim2, sim3)\nhead(sim)\n\n\n  species abundance time\n1       2       149 2001\n2       7       104 2001\n3       8        42 2001\n4       6         8 2001\n5      10       191 2001\n6       4       196 2001\n\nWays to calculate\ndiversity\nOnce we have collected our biodiversity data, there are several\ndifferent ways to analyse and understand changes in community\ncomposition, or the relative abundances of all taxa in a community. Each\nof these metrics allow us to look at different aspects of the\nbiodiversity data we collect.\nSpecies richness quantifies the number of different species\nin a community.\nThe Shannon-Weiner Index estimates species diversity by\ntaking into account the number of species living in a habitat (richness)\nand their relative abundance (evenness).\nSimpson’s Diversity Index also takes into account species\nrichness and evenness, but puts more emphasis on rare species.\nThe Evenness Index assesses the evenness of the abundances\nof each species.\nTo explore these different diversity metrics and how they are\ncalculated, we have simulated a biodiversity dataset with 10 unique\nspecies and random abundances across 3 years. This will allow us to look\nat how diversity changes over time.\n\nThe Data\nHere is a look at the simulated data.\n\n\nhide\n\nsim %>%\n  ggplot(aes(x=as.factor(species), y=abundance, colour=as.factor(time)))+\n  geom_pointrange(mapping = aes(x = as.factor(species), y=abundance, colour=as.factor(time)),\n                  stat = \"summary\", size=1)+\n  scale_colour_viridis_d(name=\"Year\")+\n  theme_bw()+\n  coord_flip()+\n  xlab(\"Species\")\n\n\n\n\nFigure 1. Simulated species abundances for 3 different years\nand 10 different species. Points are the abundances of the species.\nDescribe what the points and lines mean (I am not sure why there\nare error bars and not just points)\nWe can see that this data is quite messy and hard to find clear\npatterns in changes across species, abundance, and years. Below are\nmetrics we can use to better define and clarify these patterns.\nSpecies richness\nPerhaps the simplest measure of biodiversity is species richness\n(\\(S\\)).\nThe equation for species richness is:\n\\(S = \\sum_{i=1}^{S}p_i^o\\)\n(Describe what the variables mean).\nStep 1: Count the number of unique species recorded\nin that year. Then you can look at how the number of different species\nin a community changes over time.\nInterpretation: A higher number means there are more\nspecies, and therefore species richness is higher.\n\n\nhide\n\npacman::p_load(codyn, kableExtra)\n#table just showing the number of unique species\n#species richness calcs i used to manually enter below\nrichness_table <- sim %>%\n  group_by(time) %>%\n  summarise(richness=length(unique(species)))\n#we should probably make this into a nice looking kable?\nkable(richness_table, col.names=c(\"Year\", \"Richness\"), align=\"c\")%>%\n  kable_classic(full_width = F, html_font = \"Cambria\")\n\n\n\nYear\n\n\nRichness\n\n\n2001\n\n\n9\n\n\n2009\n\n\n9\n\n\n2020\n\n\n7\n\n\nWe can see in this table that across years, the number of species in\nthe same area fluctuated, some years with more species, other years with\nless.\nShannon-Wiener Index (H)\nAnother metric we can use to analyze biodiversity is the\nShannon-Wiener Index (\\(H\\)), which\nindexes across the sum of all relative proportions of species richness’s\nwith an additional logarithmic transformation. This equation uses both\nthe number of species in a specific area (richness) and relative\nabundance (evenness).\nThe equation for the Shannon-Weiner Index is:\n\\(H = - \\sum_{i=1}^{S}p_ilnp_i\\)\nStep 1: Calculate \\(p_i\\), which is the proportion of \\(i\\)th individuals in the community. \\(p_i = n_i/N\\)\nWhere \\(n_i\\) is the number of\nindividuals in the ith species and and \\(N\\) is the total number of individuals in\nthe community.\nStep 2: Multiply the proportion of each species\n(\\(p_i\\)) by the logarithm of the\nproportion (\\(lnp_i\\))\nStep 3: Sum each of these values for each\nspecies.\nStep 5: Multiply the sum by -1.\nInterpretation: The minimum value of the Shannon’s\ndiversity index is 0, which means that there is no diversity (i.e. only\none species is found in that habitat). The values increase as the number\nof species increase, and is maximized at a given number of species when\nis an equal abundance of each species.\n\n\nhide\n\nshannon <-  sim %>%\n    group_by(time, species) %>%\n    summarise(n=n()) %>%\n    mutate(prop = n/sum(n),\n    shannon= sum(prop/log(prop))) %>%\n    summarise(shannon = mean(shannon))\n\nkable(shannon, col.names=c(\"Year\", \"Shannon's Index\"), align=\"c\")%>%\n  kable_classic(full_width = F, html_font = \"Cambria\")\n\n\n\nYear\n\n\nShannon’s Index\n\n\n2001\n\n\n-0.4990620\n\n\n2009\n\n\n-0.5188309\n\n\n2020\n\n\n-0.5458555\n\n\nFrom our simulated dataset, we can see that the Shannon diversity\nincreases over time.\nSimpson’s Index (D)\nAnother metric we can use to analyse biodiversity in the Simpson’s\nindex (\\(D\\)) which indexes across the\nsum of all relative proportions of species’s richness with an additional\nsquare power transformation. Though very similar to the calculation in\nthe Shannon-Wiener Index, the Simpson index is more focused on dominance\nof species as it highlights the proportion of species in a sample.\nThe equation for Simpson’s diversity is:\n\\(D = 1-(\\sum\nn_i(n_i-1))/N(N-1))\\)\nWhere \\(n\\) is the number of\nindividuals of the ith species and \\(N\\) is the total number of individuals in\nthe community.\nStep 1: Multiply the number of individuals of a\ngiven species (\\(n_i\\)) by (\\(n_i-1\\)).\nStep 2 Multiply the total number of individuals in\nthe community (\\(N\\)) by (\\(N-1\\)).\nStep 3: Divide the number from step 1 by the number\nfrom step 2.\nStep 4: Once you have a number from step 3 for each\nspecies in the community, sum all of these together.\nInterpretation: The higher the value of \\(D\\), the greater the diversity in the\ncommunity. An index close to 1 means that there are several species in\nthe community, and the population proportion of species is even.\n\n\nhide\n\nsimpson<-  sim %>%\n    group_by(time, species) %>%\n    summarise(n=n()) %>%\n    mutate(prop = n/sum(n),\n    simpson = sum((prop)^2)) %>%\n    summarise(simpson = mean(simpson))\n\nkable(simpson, col.names=c(\"Year\", \"Simpson's Index\"), align=\"c\")%>%\n  kable_classic(full_width = F, html_font = \"Cambria\")\n\n\n\nYear\n\n\nSimpson’s Index\n\n\n2001\n\n\n0.135\n\n\n2009\n\n\n0.145\n\n\n2020\n\n\n0.160\n\n\nThe Simpson index increases over time, which tells us that by this\nmeasure, biodiversity is increasing.\nEvenness Index (E)\nAdditionally, we can think about the evenness of species across a\ngiven area. Evenness is a metric for assessing species dominance. If\nevenness is high, it means most species are of equal dominance. If\nevenness if low, it means some species are more dominant (i.e. have\nhigher abundance) than others. Evenness is maximized when all species\nhave equal abundances.\nThe equation for species evenness is:\n\\(E = H / ln(S)\\)\nStep 1: Divide the value of the Shannon-Wiener index\n(\\(H\\)) by the species richness (\\(S\\)).\nInterpretation: Values closer to one signify more\nevenness and values closer to 0 signify lower evenness.\n\n\nhide\n\nevenness<-  sim %>%\n    group_by(time, species) %>%\n    summarise(n=n()) %>%\n    mutate(richness= case_when(time %in% c(\"2001\", \"2009\") ~ 9, \n                             TRUE~ 7),\n           prop = n/sum(n),\n    shannon= sum(prop/log(prop)), \n    evenness = shannon/log(richness)) %>%\n    summarise(evenness = mean(evenness))\n\nkable(evenness, col.names=c(\"Year\", \"Evenness\"), align=\"c\")%>%\n  kable_classic(full_width = F, html_font = \"Cambria\")\n\n\n\nYear\n\n\nEvenness\n\n\n2001\n\n\n-0.2271329\n\n\n2009\n\n\n-0.2361301\n\n\n2020\n\n\n-0.2805142\n\n\nIn our simulated dataset, we can see that evenness is low from the\nstart and increases over time, suggesting that species abundances are\nbecoming more even.\n\nVisualizing species\ndiversity\nRank abundance curves\nwith simulated data\nOne way to visualize biodiversity data is to make a Rank Abundance\nCurve (RAC). On the y-axis we have the species (numbered), and on the y\naxis we have the abundance. The plots are organized from high to low\nabundance. Using RACs, we can visualize the change in relative abundance\nand species dominance over time.\n\n\nhide\n\nlibrary(tidyverse, viridis)\n# Code or exercise on calculating species richness?\n#before \npacman::p_load(tidyverse, patchwork)\ndata_2007 <- data.frame(\n  species = c(1,2,3,4,5,6), \n  abundance = c(77, 109, 24, 38, 11, 6),\n  time= 2007)\n\ndata_2018 <- data.frame(\n  species = c(1,2,3,4,5,6), \n  abundance = c(47, 79, 2, 15, 169, 111),\n  time= 2018)\n\ndata <- rbind(data_2007, data_2018) %>%\n  group_by(species, time) %>%\n  summarise(abundance= sum(abundance))\n\n\n#2007\na<- data %>%\n  filter(time==2007) %>%\nggplot( aes(x=reorder(species, -abundance), y=abundance, shape=as.factor(species), colour=as.factor(species)))+\n  geom_point(size=4)+\n  scale_colour_viridis_d()+\n  ggtitle(\"2007\")+\n  labs(x=\"Species\", y=\"Abundance\")+\n  theme_classic()+\n  theme(legend.position=\"none\")+\n  labs(x=\"Species\", y=\"Abundance\", color=\"Species\")\n\n#2007\nb<- data %>%\n  filter(time==2018) %>%\nggplot(aes(x=reorder(species, -abundance), y=abundance, shape=as.factor(species),  colour=as.factor(species)))+\n  geom_point(size=4)+\n  scale_colour_viridis_d()+\n  ggtitle(\"2018\")+\n  labs(x=\"Species\", y=\"Abundance\")+\n  theme_classic()+\n  theme(legend.position=\"none\")+\n  labs(x=\"Species\", y=\"Abundance\", color=\"Species\")\n\na / b\n\n\n\n\nWe can see here between 2007 and 2018 in our simulated community,\nthere were differences in absolute abundance as well as which species\nwere dominant, which species disappeared, and which species were new.\nFor instance, in 2007, species 2 was the most abundant species, but it\n2018, it was the 3rd most abundant species. However, species 3 is lost\nby 2018, while species 6 is gained in 2018.\nThis where I couldn’t seem to get the second panel set to\nshow up\nRank\nabundance curves with Turkey lakes invertebrate data\nThe Data\nThe Turkey Lakes watershed is located in Ontario, Canada,\napproximately 50km North of Sault Ste. Marie. It is 10\\(km^2\\) in area and contains a chain of 4\nlakes. The Turkey Lakes Watershed Study (see map) is an initiative by\nseveral agencies of the government of Canada, initially designed to\nstudy the effects of acid rain on forest ecosystems. From 1995 to 2009,\nscientists collected, identified and counted benthic invertebrates from\nvarious stream beds around the Turkey Lakes catchment.\nBenthic invertebrates are small, often microscopic organisms (see\nFig. 1), but form an important link between aquatic and terrestrial\nhabitats . They can decompose terrestrial matter such as leaves, or\nconsume periphyton (algae and cyanobacteria) growing on rocks within\ntheir streams. Benthic invertebrates can be a food source for aquatic\nanimals, like small fish, or terrestrial animals such as birds. An\nexperiment was conducted in 1997 where certain sampling sites\nexperienced different levels of logging intensity. Due to their\ninteraction with the terrestrial realm, we can hypothesize that the\nbiodiversity of benthic invertebrate communities might be affected by\nlogging.\nFig. 1: Various benthic\nmacroinvertebrates under a stereo microscope. Source: G. Carter via\nNOAA/GLERL\n\nhide\n\npacman::p_load(leaflet)\n\nleaflet() %>%\n  addTiles() %>%  # Add default OpenStreetMap map tiles\n  addMarkers(lng=-84.4110, lat=47.0515, popup=\"Turkey Lakes\") %>%\n  setView(lng=-84.4110, lat=47.0515, zoom=2)\n\n\n\n\nFigure 2. Interactive map of the Turkey Lakes study site\n\nLoad Data\nThese data are from the Turkey Lakes watershed experiment. This\ndataset contains the abundances of benthic invertebrate species measured\nin the May and June from 1995 to 2001. They recorded the type and number\nof invertebrates in an area of the stream, with 10 replicates per\nsampling event. These forests next to these streams were logged in 1997\nwith varying harvest intensities, with low, medium, and high intensity\nharvest and a control stream with no forest harvest. We will using the\ncodyn package to analyze the diversity of these benthic\ninvertebrates over time.\n\n\nhide\n\ndata<-read.csv(\"stream_invertebrates.csv\")\nhead(data)\n\n\n  year   species treatment replicate abundance\n1 1995 Alloperla   control         1         0\n2 1995 Alloperla   control         2         0\n3 1995 Alloperla   control         3         4\n4 1995 Alloperla   control         4         3\n5 1995 Alloperla   control         5         3\n6 1995 Alloperla   control         6         3\n\nRaw data\nRACs in nature are rarely as evenly distributed as the simulated\ndata. There is often few highly abundant species and many very rare\nspecies. Below, you can see the rank-abundance distribution from one of\nthe catchments in our Turkey Lakes benthic invertebrate dataset from the\nyear following logging treatments (1998).\n\n\nhide\n\nsource(\"R/RankAbundance/plotRankAbundance.R\") \nyr = 1998\nplotRankAbundance(log=F,\n                  select_catchment = c(\"34M\",  \"34U\",    \"34L\"),     \n                  select_year      = c(yr,yr),     \n                  select_month     = c(\"june\"))\n\n\n\n\nLog transformed data\nTo better visualize the distribution, the y-axis is typically\nlog-transformed\n\n\nhide\n\nplotRankAbundance(log=T,\n                  select_catchment = c(\"34M\",  \"34U\",    \"34L\"),     \n                  select_year      = c(yr,yr),     \n                  select_month     = c(\"june\"))\n\n\n\n\nRank\nBecause most classic metrics of biodiversity do not take the species\nidentity into account, we can drop species names from the x-axis, and\nsimply refer to it’s rank in the community. This is where the term\nrank-abundance comes from.\n\n\nhide\n\nplotRankAbundance(log=T,\n                  select_catchment = c(\"34M\",  \"34U\",    \"34L\"),     \n                  select_year      = c(yr,yr),     \n                  select_month     = c(\"june\"), \n                  SpName           = F)\n\n\n\n\nCurve\nFinally, instead of using bars to represent abundances, we can simply\nuse lines to trace the distribution. This allows us to compare multiple\ndistributions, in this case, from different three different sites with\nthree levels of logging intensity.\n\n\nhide\n\nsource(\"R/RankAbundance/plotRAC.R\")\ndf <- rankSpecies() %>% \n  filter(year==yr) \nComparisonPlot = df %>%\n  plotRAC(facets = F) +  theme(legend.position = c(0.87,0.87))\nComparisonPlot\n\n\n\n\nSpecies Richness\nWe can compare species richness by comparing the maximum rank.\n\n\nhide\n\ndfRank = df %>% \n  filter(TotalCount > 0)\nannotations = dfRank %>% summarise(maxRank = max(Rank))\n\nannotations$xend = c(40, 31, 34)\nannotations$yend = rep(1, 3)\nannotations$x    = annotations$xend + 3\nannotations$y    = rep(5, 3)\n\nComparisonPlot + \n  geom_segment(data = annotations, aes(yend=yend, xend=xend, x=x, y=y), size=1.2, arrow = arrow(), show.legend = FALSE) + \n  geom_text(data = annotations, aes(x = x+1, y=y+2, label=maxRank), size=6, show.legend = FALSE) \n\n\n\n\nEveness\nThe biodiversity metrics described (Shannon, Simpson, etc.) also\nincorporate community evenness, which can be thought of as the slope of\nrank-abundance curve. For example, a community with one very dominant\nspecies and a rapid drop-off in species abundance will have a lower\nevenness than a community where more species are common. In the plot\nbelow, the community at the site of “medium” logging (orange) is less\neven than the other two since it has a steeper average slope.\n\n\nhide\n\nq = {ComparisonPlot +  geom_smooth(method=lm, se=FALSE, data=dfRank) }%>%\n  ggplot_build()\nq$data[[1]]$alpha = 0.5\n\nggplot_gtable(q) %>% \n  plot \n\n\n\n\nSeveral models have been developed to understand rank-abundance\ncurves (e.g. log-normal, broken stick model). The radfit\nfunction from the vegan R package allows\nfitting of these different curve models (see https://search.r-project.org/CRAN/refmans/vegan/html/radfit.html)\n\ncodyn tutorial\nLoad Packages\nWe will be using the codyn package for this tutorial. We\nwill also use ggplot2 and dplyr for plotting\nand cleaning.\n\n\nhide\n\nlibrary(ggplot2)\nlibrary(codyn)\nlibrary(dplyr)\n\n\n\nFor many functions, the codyn package can only look at\ndata from one stream at a time. So first we will separate each stream\ninto it’s own data frame.\n\n\nhide\n\n# high intensity logging treatment\nsubset_codyn_high <- data %>%\n  filter(treatment == \"high\")\n# medium intensity logging treatment\nsubset_codyn_med <- data %>%\n  filter(treatment == \"medium\")\n# low intensity logging treatment\nsubset_codyn_low <- data %>%\n  filter(treatment == \"low\") \n# control stream (no logging)\nsubset_codyn_ctrl <- data %>%\n  filter(treatment==\"control\")\n\n\n\nUsing\nthe codyn package to analyze diversity data over time\nEcologists are often interested in how diversity changes over time in\none place. This is particularly interesting when you are looking at how\nspecies diversity responds to environmental change. This environmental\nchange can be a single disturbance event such as a forest fire or more\nlong-term change such as temperature increases due to climate change.\nThe Turkey Lakes dataset provides us with an opportunity to look at how\nthe diversity of benthic invertebrates changes over time and in response\nto logging. We can compare the diversity of different streams with\ndifferent logging intensities and we can also compare the diversity of\nstreams.\nThe codyn package allows us to analyze the change in\nbiodiversity over time using different metrics.\nUsing\ncommunity_structure()\ncommunity_structure() is a function in the package\ncodyn that calculates species richness and evenness.\nSpecies Richness and\nEvenness\nFor example, we can use community_structure() to look at\nthe change in species richness and evenness over time in one of the\nTurkey Lake streams. We will choose the stream with high logging\nintensity as an example. This function can only look at one stream at a\ntime so make sure to subset out the stream that you are interested\nin.\nLet’s take a look at the high intensity logging stream data.\n\n\nhide\n\nhead(subset_codyn_high)\n\n\n  year     species treatment replicate abundance\n1 1995 Amphinemura      high         1         9\n2 1995 Amphinemura      high         2        24\n3 1995 Amphinemura      high         3        53\n4 1995 Amphinemura      high         4        15\n5 1995 Amphinemura      high         5        59\n6 1995 Amphinemura      high         6        37\n\nAs you can see, there is a column for year, species, replicate, and\nabundance.\nThe community structure function has five arguments. 1.\ndf is where you put in the data frame of interest, in our\ncase subset_codyn_high. 2. The time.var\nargument is where you put in your time variable (year) 3.\nThe abundance.var argument is where you put the column that\nholds the abundance variable (abundance). 4. The\nreplicate.var argument holds the column with the replicates\n(replicate) 5. The metric argument allows you\nto specify the metric of evenness that you want the function to\ncalculate. There are three possible metrics: Evar,\nSimpsonEvenness, and EQ, which all calculate\nevenness in different ways. We will use Simpson’s Evenness in this\ntutorial.\nRemember, if you ever need a refresher on the syntax you can type\n?community_structure into the R script.\n\n\nhide\n\nrichness_high<-community_structure(df=subset_codyn_high, time.var=\"year\", abundance.var=\"abundance\", replicate.var=\"replicate\", metric=\"SimpsonEvenness\")\n\n\n\nWe can take a look at the output.\n\n\nhide\n\nhead(richness_high)\n\n\n  year replicate richness SimpsonEvenness\n1 1995         1       17       0.2210248\n2 1996         1       11       0.5785671\n3 1997         1       16       0.3436584\n4 1998         1       18       0.2786702\n5 1999         1       15       0.3540228\n6 2001         1       23       0.2661854\n\nAs you can see, this returns a data frame with the year, replicate,\nrichness calculation, and evenness measure. It calculates richness and\nevenness separately for each replicate sample in the stream, so we have\na measure of variability within samples as well as variability across\nyears.\nPlot species richness\nWe can plot this data frame to see the changes over time.\n\n\nhide\n\nggplot()+\n  geom_point(richness_high, mapping=aes(x=year, y=richness))+\n  theme_classic()+\n  labs(y=\"Species Richness\", x=\"Year\")+\n  geom_vline(xintercept=1997, linetype=2, color=\"red\")\n\n\n\n\nFigure Species richness of aquatic\nmacroinvertebrates over time. Each point is a replicate.\nHere is a plot of species richness, with a different value for each\nreplicate. The red line is the year that the streams were logged. Do you\nsee any change? Do you think there are any significant patterns? How\ndoes the variability between replicates compare to the variability\nbetween years?\nPlot species evenness\nWe can also plot species evenness over time.\n\n\nhide\n\nggplot()+\n  geom_point(richness_high, mapping=aes(x=year, y=SimpsonEvenness))+\n  theme_classic()+\n  labs(y=\"Simpson's Evenness\", x=\"Year\")+\n  geom_vline(xintercept=1997, linetype=2, color=\"red\")\n\n\n\n\nFigure Species evenness of aquatic\nmacroinvertebrates over time. Each point is a replicate.\nDo you see any patterns in the evenness between years?\nUsing\ncommunity_diversity()\nShannon’s diversity\nSpecies richness and evenness are very simple ways to look at species\ndiversity. However, as you learned from the rank abundance curves,\nspecies have different abundances within the community, with some\nspecies having very high abundance and most species having low\nabundance. Species richness does not take into account the relative\nabundances of each species, which limits the inferences we can make. The\nShannon-Weiner diversity metric does take into account these relative\nabundances when calculating the diversity of a community and allows us\nto make more meaningful inferences about how biodiversity is changing\nover time.\nThe codyn package allows you to calculate the Shannon\ndiversity index for a single site over time using the\ncommunity_diversity() function. We will again use the data\nfrom the stream with the high logging intensity. Luckily, this function\nhas the exact same syntax as the community_structure()\nfunction! The only difference is that the options for the\nmetric argument are Shannon and\nInverseSimpson. We will first use Shannon.\n\n\nhide\n\nshannon_div_high<-community_diversity(df=subset_codyn_high, time.var=\"year\", abundance.var=\"abundance\", replicate.var=\"replicate\", metric=\"Shannon\")\n\n\n\nLet’s take a look at the output for this function.\n\n\nhide\n\nhead(shannon_div_high)\n\n\n  year replicate  Shannon\n1 1995         1 1.836002\n2 1996         1 2.044210\n3 1997         1 2.107977\n4 1998         1 2.016146\n5 1999         1 1.948510\n6 2001         1 2.297970\n\nYou can see it gives us a data frame of year,\nreplicate, and Shannon, which is our measure\nof Shannon diversity.\nPlot Shannon’s diversity\nWe can plot these to see change over time.\n\n\nhide\n\nggplot()+\n  geom_point(shannon_div_high, mapping=aes(x=year, y=Shannon))+\n  theme_classic()+\n  labs(y=\"Shannon Diversity\", x=\"Year\")+\n  geom_vline(xintercept=1997, linetype=2, color=\"red\")\n\n\n\n\nFigure Shannon’s diversity of aquatic\nmacroinvertebrates over time. Each point is a replicate.\nSimpson’s diversity\nWe can also use the same function to calculate Simpson’s diversity by\nsimply changing the metric argument to\nInverseSimpson.\n\n\nhide\n\nsimpson_div_high<-community_diversity(df=subset_codyn_high, time.var=\"year\", abundance.var=\"abundance\", replicate.var=\"replicate\", metric=\"InverseSimpson\")\n\n\n\nWe can look at the output.\n\n\nhide\n\nhead(simpson_div_high)\n\n\n  year replicate InverseSimpson\n1 1995         1       3.757421\n2 1996         1       6.364238\n3 1997         1       5.498534\n4 1998         1       5.016063\n5 1999         1       5.310341\n6 2001         1       6.122265\n\nPlot Simpson’s diversity\nAnd then plot.\n\n\nhide\n\nggplot()+\n  geom_point(simpson_div_high, mapping=aes(x=year, y=InverseSimpson))+\n  theme_classic()+\n  labs(y=\"Simpson Diversity\", x=\"Year\")+\n  geom_vline(xintercept=1997, linetype=2, color=\"red\")\n\n\n\n\nFigure Simpson’s diversity of aquatic\nmacroinvertebrates over time. Each point is a replicate.\nHow do these patterns compare to the patterns of Shannon’s diversity\nover time? How do the values compare?\nActivity\nCalculate richness, evenness, and diversity using both the Shannon\nand Simpson indices for the streams with low intensity logging, high\nintensity logging, and no logging. The data for these streams are\nsubset_codyn_low, subset_codyn_high, and\nsubset_codyn_ctrl. Plot these indices. Do you see any\npatterns across years? How do these compare to the patterns in the high\nintensity logging stream?\nReferences\nI got the equations from this paper: DOI:10.1007/s10531-016-1261-0\n\n\n\n",
    "preview": "lessons/2022-08-26-species-richness-rank-abundance-curves/distill-preview.png",
<<<<<<< HEAD
    "last_modified": "2022-10-14T12:14:48-04:00",
    "input_file": "species-richness-rank-abundance-curves.knit.md"
=======
    "last_modified": "2022-10-19T15:07:17-06:00",
    "input_file": {}
>>>>>>> 46b1ed1d4b2cdbe43886429d176846bec8b0173a
  },
  {
    "path": "lessons/2022-06-03-chronic-wasting-disease/",
    "title": "Alberta Chronic Wasting Disease Tutorial",
    "description": "This interactive tutorial explores how a simple compartmental model (the SI model) can be used to track and predict the spread of Chronic Wasting Disease (CWD) in Albertan mule deer over time. It begins by introducing CWD and why it is a growing problem in Albertan mule deer. It then investigates and explains how different levels of transmission, death, and culling can change disease dynamics. Students can test how these different parameters influence the spread of CWD using the sliders on each page.",
    "author": [
      {
        "name": "Amy Forsythe",
        "url": {}
      },
      {
        "name": "Bryn Wiley",
        "url": {}
      }
    ],
    "date": "2022-06-03",
    "categories": [],
    "contents": "\n\n\n\n\n\n\n",
    "preview": {},
<<<<<<< HEAD
    "last_modified": "2022-09-01T13:05:38-04:00",
=======
    "last_modified": "2022-10-19T15:07:17-06:00",
>>>>>>> 46b1ed1d4b2cdbe43886429d176846bec8b0173a
    "input_file": {}
  },
  {
    "path": "lessons/2022-04-07-alberta-trees-tutorial/",
    "title": "Alberta Trees Tutorial",
    "description": "A short description of the post.",
    "author": [
      {
        "name": "Jhoan Chavez",
        "url": {}
      },
      {
        "name": "Zihaohan Sang",
        "url": {}
      },
      {
        "name": "Rolando Trejo Pérez",
        "url": {}
      }
    ],
    "date": "2022-04-07",
    "categories": [],
    "contents": "\n\n\n\n\n\n\n",
    "preview": {},
<<<<<<< HEAD
    "last_modified": "2022-09-01T13:05:36-04:00",
=======
    "last_modified": "2022-10-19T15:07:17-06:00",
>>>>>>> 46b1ed1d4b2cdbe43886429d176846bec8b0173a
    "input_file": {}
  },
  {
    "path": "lessons/2022-04-07-anticosti-historical-data-tutorial/",
    "title": "Anticosti Historical Data Tutorial",
    "description": "After the storm: Impacts of a hemlock looper outbreak on tree species in Anticosti Island, 1973",
    "author": [
      {
        "name": "Victoria Marie Glynn",
        "url": "mailto:victoria.glynn@mail.mcgill.ca"
      },
      {
        "name": "Maxime Fraser Franco",
        "url": "mailto:fraser_franco.maxime@courrier.uqam.ca"
      }
    ],
    "date": "2022-04-07",
    "categories": [],
    "contents": "\nThis tutorial uses a tree damage dataset from Anticosti Island during\na hemlock looper outbreak in 1973. The dataset can be found on the\ngovernment of Canada’s official data\nportal. We would like to thank Anne Cotton-Gagnon, MSc, and\nChristian Hébert, PhD, from Natural Resources Canada and the Laurentian\nForestry Centre for their insights on the original datasets and access\nto the reports and maps associated with such.\nThe tutorial was built with the free and open-source software\nenvironment R using the leanr package and and\ndeployed using Shiny. You can\nfind the project folders and files in this GitHub\nrepository.\nThe present tutorial was developed by Victoria Marie Glynn who is a\nPhD student at McGill University in Montréal, Québec, and Maxime Fraser\nFranco who is a PhD student at the Université du Québec à Montréal\n(UQAM) in Montréal, Québec. Please feel free to contact us if you have\nany question (you can do that by clicking on our names on this page\nheader).\n\n\n\n\n\n\n",
    "preview": {},
<<<<<<< HEAD
    "last_modified": "2022-09-01T13:05:36-04:00",
=======
    "last_modified": "2022-10-19T15:07:17-06:00",
>>>>>>> 46b1ed1d4b2cdbe43886429d176846bec8b0173a
    "input_file": {}
  },
  {
    "path": "lessons/2022-04-07-codyn-tutorial/",
    "title": "Codyn Tutorial",
    "description": "A short description of the post.",
    "author": [
      {
        "name": "Jory Griffith",
        "url": {}
      },
      {
        "name": "Maggie Slein",
        "url": {}
      },
      {
        "name": "Egor Katkov",
        "url": {}
      }
    ],
    "date": "2022-04-07",
    "categories": [],
    "contents": "\n\nContents\nLoad Packages\nLoad Data\nUsing\nthe codyn package to analyze diversity data over\ntime\nUsing\ncommunity_structure()\nSpecies Richness and\nEvenness\nPlot species richness\nPlot species evenness\n\n\nUsing\ncommunity_diversity()\nShannon’s diversity\nPlot Shannon’s diversity\n\nSimpson’s diversity\nPlot Simpson’s diversity\n\n\nActivity\n\nLoad Packages\nWe will be using the codyn package for this tutorial. We\nwill also use ggplot2 and dplyr for plotting\nand cleaning.\n\n\nlibrary(ggplot2)\nlibrary(codyn)\nlibrary(dplyr)\n\n\n\nLoad Data\nThese data are from the Turkey Lakes watershed experiment. This\ndataset contains the abundances of benthic invertebrate species measured\nin the May and June from 1995 to 2001. They recorded the type and number\nof invertebrates in an area of the stream, with 10 replicates per\nsampling event. These forests next to these streams were logged in 1997\nwith varying harvest intensities, with low, medium, and high intensity\nharvest and a control stream with no forest harvest. We will using the\ncodyn package to analyze the diversity of these benthic\ninvertebrates over time.\n\n\ndata<-read.csv(\"stream_invertebrates.csv\")\nhead(data)\n\n\n  year   species treatment replicate abundance\n1 1995 Alloperla   control         1         0\n2 1995 Alloperla   control         2         0\n3 1995 Alloperla   control         3         4\n4 1995 Alloperla   control         4         3\n5 1995 Alloperla   control         5         3\n6 1995 Alloperla   control         6         3\n\nFor many functions, the codyn package can only look at\ndata from one stream at a time. So first we will separate each stream\ninto it’s own data frame.\n\n\n# high intensity logging treatment\nsubset_codyn_high <- data %>%\n  filter(treatment == \"high\")\n# medium intensity logging treatment\nsubset_codyn_med <- data %>%\n  filter(treatment == \"medium\")\n# low intensity logging treatment\nsubset_codyn_low <- data %>%\n  filter(treatment == \"low\") \n# control stream (no logging)\nsubset_codyn_ctrl <- data %>%\n  filter(treatment==\"control\")\n\n\n\nUsing\nthe codyn package to analyze diversity data over time\nEcologists are often interested in how diversity changes over time in\none place. This is particularly interesting when you are looking at how\nspecies diversity responds to environmental change. This environmental\nchange can be a single disturbance event such as a forest fire or more\nlong-term change such as temperature increases due to climate change.\nThe Turkey Lakes dataset provides us with an opportunity to look at how\nthe diversity of benthic invertebrates changes over time and in response\nto logging. We can compare the diversity of different streams with\ndifferent logging intensities and we can also compare the diversity of\nstreams.\nThe codyn package allows us to analyze the change in\nbiodiversity over time using different metrics.\nUsing\ncommunity_structure()\ncommunity_structure() is a function in the package\ncodyn that calculates species richness and evenness.\nSpecies Richness and\nEvenness\nFor example, we can use community_structure() to look at\nthe change in species richness and evenness over time in one of the\nTurkey Lake streams. We will choose the stream with high logging\nintensity as an example. This function can only look at one stream at a\ntime so make sure to subset out the stream that you are interested\nin.\nLet’s take a look at the high intensity logging stream data.\n\n\nhead(subset_codyn_high)\n\n\n  year     species treatment replicate abundance\n1 1995 Amphinemura      high         1         9\n2 1995 Amphinemura      high         2        24\n3 1995 Amphinemura      high         3        53\n4 1995 Amphinemura      high         4        15\n5 1995 Amphinemura      high         5        59\n6 1995 Amphinemura      high         6        37\n\nAs you can see, there is a column for year, species, replicate, and\nabundance.\nThe community structure function has five arguments. The first is\ndf where you put in the data frame of interest, in our case\nsubset_codyn_high. The time.var argument is\nwhere you put in your time variable (year), the\nabundance.var argument is where you put the column that holds the\nabundance variable (abundance) and the\nreplicate.var argument holds the column with the replicates\n(replicate). In the metric argument, you can\nspecify the metric of evenness that you want the function to calculate.\nThere are three possible metrics: Evar,\nSimpsonEvenness, and EQ, which all calculate\nevenness in different ways. We will use Simpson’s Evenness in this\ntutorial. Remember, if you ever need a refresher on the syntax you can\ntype ?community_structure into the R script.\n\n\nrichness_high<-community_structure(df=subset_codyn_high, time.var=\"year\", abundance.var=\"abundance\",\n                                   replicate.var=\"replicate\", metric=\"SimpsonEvenness\")\n\n\n\nWe can take a look at the output.\n\n\nhead(richness_high)\n\n\n  year replicate richness SimpsonEvenness\n1 1995         1       17       0.2210248\n2 1996         1       11       0.5785671\n3 1997         1       16       0.3436584\n4 1998         1       18       0.2786702\n5 1999         1       15       0.3540228\n6 2001         1       23       0.2661854\n\nAs you can see, this returns a data frame with the year, replicate,\nrichness calculation, and evenness measure. It calculates richness and\nevenness separately for each replicate sample in the stream, so we have\na measure of variability within samples as well as variability across\nyears.\nPlot species richness\nWe can plot this data frame to see the changes over time.\n\n\n\nHere is a plot of species richness, with a different value for each\nreplicate. The red line is the year that the streams were logged. Do you\nsee any change? Do you think there are any significant patterns? How\ndoes the variability between replicates compare to the variability\nbetween years?\nPlot species evenness\nWe can also plot species evenness over time.\n\n\n\nDo you see any patterns in the evenness between years?\nUsing\ncommunity_diversity()\nShannon’s diversity\nSpecies richness and evenness are very simple ways to look at species\ndiversity. However, as you learned from the rank abundance curves,\nspecies have different abundances within the community, with some\nspecies having very high abundance and most species having low\nabundance. Species richness does not take into account the relative\nabundances of each species, which limits the inferences we can make. The\nShannon-Weiner diversity metric does take into account these relative\nabundances when calculating the diversity of a community and allows us\nto make more meaningful inferences about how biodiversity is changing\nover time.\nThe codyn package allows you to calculate the Shannon\ndiversity index for a single site over time using the\ncommunity_diversity() function. We will again use the data\nfrom the stream with the high logging intensity. Luckily, this function\nhas the exact same syntax as the community_structure()\nfunction! The only difference is that the options for the\nmetric argument are Shannon and\nInverseSimpson. We will first use Shannon.\n\n\nshannon_div_high<-community_diversity(df=subset_codyn_high, time.var=\"year\", abundance.var=\"abundance\",\n                                      replicate.var=\"replicate\", metric=\"Shannon\")\n\n\n\nLet’s take a look at the output for this function.\n\n\nhead(shannon_div_high)\n\n\n  year replicate  Shannon\n1 1995         1 1.836002\n2 1996         1 2.044210\n3 1997         1 2.107977\n4 1998         1 2.016146\n5 1999         1 1.948510\n6 2001         1 2.297970\n\nYou can see it gives us a data frame of year,\nreplicate, and Shannon, which is our measure\nof Shannon diversity.\nPlot Shannon’s diversity\nWe can plot these to see change over time.\n\n\nggplot()+\n  geom_point(shannon_div_high, mapping=aes(x=year, y=Shannon))+\n  theme_classic()+\n  labs(y=\"Shannon Diversity\", x=\"Year\")+\n  geom_vline(xintercept=1997, linetype=2, color=\"red\")\n\n\n\n\nSimpson’s diversity\nWe can also use the same function to calculate Simpson’s diversity by\nsimply changing the metric argument to\nInverseSimpson.\n\n\nsimpson_div_high<-community_diversity(df=subset_codyn_high, time.var=\"year\", abundance.var=\"abundance\",\n                                      replicate.var=\"replicate\", metric=\"InverseSimpson\")\n\n\n\nWe can look at the output.\n\n\nhead(simpson_div_high)\n\n\n  year replicate InverseSimpson\n1 1995         1       3.757421\n2 1996         1       6.364238\n3 1997         1       5.498534\n4 1998         1       5.016063\n5 1999         1       5.310341\n6 2001         1       6.122265\n\nPlot Simpson’s diversity\nAnd then plot.\n\n\n\nHow do these patterns compare to the patterns of Shannon’s diversity\nover time? How do the values compare?\nActivity\nCalculate richness, evenness, and diversity using both the Shannon\nand Simpson indices for the streams with low intensity logging, high\nintensity logging, and no logging. The data for these streams are\nsubset_codyn_low, subset_codyn_high, and\nsubset_codyn_ctrl. Plot these indices. Do you see any\npatterns across years? How do these compare to the patterns in the high\nintensity logging stream?\n\n\n\n",
    "preview": "lessons/2022-04-07-codyn-tutorial/codyn-tutorial_files/figure-html5/unnamed-chunk-7-1.png",
<<<<<<< HEAD
    "last_modified": "2022-09-01T13:05:37-04:00",
=======
    "last_modified": "2022-10-19T15:07:17-06:00",
    "input_file": {}
  },
  {
    "path": "lessons/2022-04-07-sexual-dimorphism-and-sexual-selection/",
    "title": "Sexual Dimorphism and Sexual Selection in Tree Swallows",
    "description": "This is a tutorial to get you familiar with R and explore ecological concepts through a Tree Swallow nest productivity dataset. Please download the accompanying RMarkdown file and data to follow along with this tutorial in R.",
    "author": [
      {
        "name": "Elizabeth Houghton",
        "url": {}
      },
      {
        "name": "Kirsten Palmier",
        "url": {}
      }
    ],
    "date": "2022-04-07",
    "categories": [],
    "contents": "\n\nContents\nTutorial learning objectives\nBackground of datasets\nThe Point\nThe Sewage Lagoon\nMud Creek\n\nImporting data and packages\nSexual dimorphism in Tree Swallows\nAspects of Tree Swallow Life History\nTrade-offs\nLife history trade-offs\nDo larger birds have bigger clutches?\n\nChanges through time\nTake-homes\n\n\nDownload required RMarkdown file\n\n\nDownload required data\n\nTutorial learning objectives\nIn this tutorial you will explore:\nWhether sexual dimorphism is present in a population of Tree Swallows found in Long Point, Ontario\nLife history traits of Tree Swallows\nTrade-offs between the number of clutches a bird may have and the number of eggs in each clutch\nHow the sampled population of Tree Swallow’s birth rates have changed over time\nBackground of datasets\nBefore we jump into the weeds, let’s get to know our dataset!\nThe Tree Swallow (Tachycineta bicolor) is one of the most common birds in eastern North America that normally nests in tree cavities excavated by other species like woodpeckers, but also readily accepts human made nest boxes. Based on this quality and their abundance, Birds Canada has monitored nest boxes of tree swallows around the Long Point Biosphere Reserve, Ontario, from 1974 to 2014. Each year, May through June, volunteer research assistants check nest box contents daily, and band the adults and their young. Nest-box records are available from about 300 boxes from 3-4 sites during this period. Data collected includes nest box observations, clutch initiation dates, clutch size and egg weight, nest success, weather, insect abundance, and banding data. This data set includes all data entry related to eggs, nests, nestlings, nest check observations, and banding data from 1977 to 2014. More information on this dataset can be found here.\nAdditionally, in 2021, this dataset was quality checked and made open access by Jonathan Diamond through a Data Rescue internship with the Living Data Project, an initiative through the Canadian Institute of Ecology and Evolution that rescues legacy datasets.\n\nThrough Bird Studies Canada, Long Point Bird Observatory monitored three nest box “colonies” of Tree Swallows at Long Point, two on the “mainland” near Port Rowan (at the Port Rowan sewage lagoons and adjacent to agricultural land at Mud Creek) and the third at the tip of the\nPoint.\n\nThe Point\nThis colony was established in its present location in 1969. The nest boxes are located about 1 km west of the Tip of the point and are arranged 24.4m apart in a grid of numbered (north-south) rows and lettered (east-west) columns. Each box is designated by its position, so box 10G is in row 10 and column G. At the present time the rows in use are 1-19 and the letters are D-K, but many positions are unfilled and there are a total of 64 boxes.\nThe Point colony area. Location of bird boxes outlined in black.The Sewage Lagoon\nThis colony was first established in 1977 and has since been expanded to a total of 77 boxes. The boxes are in two rows around the lagoon embankment, as well as across the street in a small cluster of 5 boxes.\nSewage Lagoon colony area. Location of bird boxes outlined in black.Mud Creek\nEstablished in 1987, the Mud Creek site is located 3.25 km north-northeast of Sewage Lagoon and contains 80 nest boxes. The habitat is an open, uncultivated field adjacent to a small woodlot.\nMud Creek colony area. Location of bird boxes outlined in black.For this tutorial we will be looking at the banding dataset which adults were trapped sometime between the first young hatch and when they were 12 days old. All adult birds are banded, unless previously banded. Plumage color was recorded as blue (BLU), Brown (BRN), or Intermediate (INT). Furthermore, plumage categories and age/sex designations were assigned and a variety of size measurements were taken.\nPlumage Categories\nBLU birds (ASY) – More than 90% of the upper parts iridescent blue-green\nINT birds (AHY) – More than 50% up to 90% of upper parts iridescent blue-green (remainder dull brown or brown tinged with green)\nBRN birds (SY) – Up to 50% of upper parts iridescent blue-green (remainder > 50% dull brown or brown tinged with green)\nSex Categories\nMale = M\nFemale = F\nMeasurements of Size and Weight\nWing chord length (mm) = wing_chord\nWing chord flat (mm) = wing_flat\nTail length (mm) = tail\np_9 = primary feather length\n\nAdults are blue-green above with white below with blacking flight feathers. Photo courtesy of Max Nootbaar from the Macaulay Library.\n\nFirst year females may be brownish above with hints of blue-green; adult females can be nearly blue-green as males. Photo courtesy of Matt Davis from the Macaulay Library.\nImporting data and packages\nIn this tutorial, we will be working with Tree Swallow data collected by Bird Studies Canada, Long Point Bird Observatory as well as a few additional packages. Run the following code to import the required packages and pull in the dataset that we will be working with throughout this tutorial.\n\n\n# load the following packages\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(tidyr)\nlibrary(lubridate)\nlibrary(reshape)\nlibrary(readr)\nlibrary(ggpubr)\n\n# Here we are pulling the actual datasets into R\nbanding <- read.csv(\"TRES/banding_final.csv\")\nbanding_nest <- read.csv(\"TRES/banding_nest_final.csv\")\nnest <- read.csv(\"TRES/nest_final.csv\")\n\n\nDouble check that the class of our data are in the correct format.\n\n\n# Now, we want to make sure the class of our data is correct before we move forward:\nstr(banding)\n\n'data.frame':   1602 obs. of  13 variables:\n $ band_or_recapture: chr  \"R\" \"R\" \"R\" \"R\" ...\n $ band_number      : num  1831 1881 2171 1881 2351 ...\n $ sex              : chr  \"F\" \"F\" \"F\" \"M\" ...\n $ colour           : chr  \"BLU\" \"BLU\" \"BLU\" \"BLU\" ...\n $ wing_chord       : num  116 115 112 123 118 123 110 111 112 117 ...\n $ wing_flat        : num  119 119 114 124 119 125 112 113 114 118 ...\n $ tail             : num  58 54 55 60 58 56 55 52 55 54 ...\n $ p_9              : int  89 90 88 96 92 97 89 87 90 92 ...\n $ weight           : num  22 19.6 21.5 21.1 22.1 20.5 20 21.6 19.8 20.5 ...\n $ date             : chr  \"2010-06-01\" \"2010-06-01\" \"2010-06-01\" \"2010-06-01\" ...\n $ nest_box         : chr  \"PT4G\" \"PT2F\" \"PT15G\" \"PT4G\" ...\n $ age_code         : chr  \"ASY\" \"ASY\" \"ASY\" \"AHY\" ...\n $ year             : int  2010 2010 2010 2010 2010 2010 2010 2010 2010 2010 ...\n\n# lets go ahead and convert the sex and nest_box column class into factors:\nbanding$sex <- as.factor(banding$sex)\nbanding$nest_box <- as.factor(banding$nest_box)\nstr(banding_nest)\n\n'data.frame':   1002 obs. of  16 variables:\n $ band_number        : num  1671 1672 1672 1771 1771 ...\n $ year               : int  2010 2010 2010 2010 2010 2011 2011 2012 2010 2011 ...\n $ sex                : chr  \"M\" \"F\" \"F\" \"F\" ...\n $ colour             : chr  \"BLU\" \"BLU\" \"BLU\" \"BLU\" ...\n $ wing_chord         : num  116 120 118 120 116 115 114 109 112 115 ...\n $ wing_flat          : num  117 121 119 121 118 117 116 111 114 119 ...\n $ tail               : num  55 47 53 52 54 55 58 60 46 56 ...\n $ p_9                : int  89 92 93 95 91 95 88 88 92 91 ...\n $ weight             : num  20 22.5 23.8 19.7 19.5 ...\n $ date               : chr  \"2015-06-01\" \"2015-06-01\" \"2017-06-01\" \"2017-06-01\" ...\n $ nest_box           : chr  \"PT16I\" \"PT16I\" \"PT19F\" \"PT09F\" ...\n $ clutch_size        : int  6 6 5 6 4 3 6 6 4 5 ...\n $ clutch_number      : int  1 1 1 1 1 1 1 1 1 1 ...\n $ no_of_young_fledged: int  6 6 4 4 4 1 4 6 4 5 ...\n $ number_hatch       : int  6 6 4 4 4 2 6 6 4 5 ...\n $ location           : chr  \"PT\" \"PT\" \"PT\" \"PT\" ...\n\nNow lets go ahead and fix the class of location, nest_code, and location:\n\n\nShow code\n\n# fix class\nbanding_nest$location <- as.factor(banding_nest$location)\nstr(banding_nest)\n\n'data.frame':   1002 obs. of  16 variables:\n $ band_number        : num  1671 1672 1672 1771 1771 ...\n $ year               : int  2010 2010 2010 2010 2010 2011 2011 2012 2010 2011 ...\n $ sex                : chr  \"M\" \"F\" \"F\" \"F\" ...\n $ colour             : chr  \"BLU\" \"BLU\" \"BLU\" \"BLU\" ...\n $ wing_chord         : num  116 120 118 120 116 115 114 109 112 115 ...\n $ wing_flat          : num  117 121 119 121 118 117 116 111 114 119 ...\n $ tail               : num  55 47 53 52 54 55 58 60 46 56 ...\n $ p_9                : int  89 92 93 95 91 95 88 88 92 91 ...\n $ weight             : num  20 22.5 23.8 19.7 19.5 ...\n $ date               : chr  \"2015-06-01\" \"2015-06-01\" \"2017-06-01\" \"2017-06-01\" ...\n $ nest_box           : chr  \"PT16I\" \"PT16I\" \"PT19F\" \"PT09F\" ...\n $ clutch_size        : int  6 6 5 6 4 3 6 6 4 5 ...\n $ clutch_number      : int  1 1 1 1 1 1 1 1 1 1 ...\n $ no_of_young_fledged: int  6 6 4 4 4 1 4 6 4 5 ...\n $ number_hatch       : int  6 6 4 4 4 2 6 6 4 5 ...\n $ location           : Factor w/ 3 levels \"MC\",\"PT\",\"SL\": 2 2 2 2 3 3 3 3 1 1 ...\n\nShow code\n\n# fix class\nnest$nest_code <- as.factor(nest$nest_code)\nnest$location <- as.factor(nest$location)\n\n\nSexual dimorphism in Tree Swallows\nSexual dimorphism is defined as the phenotypic variations within different sexes of the same species ( Andersson and Iwasa 1998). Differences can include size, weight, plumage (in birds). These differences are thought to arise through species that are part of a social mating system, in which there may be varying degrees of parental care ( Darwin 1871; Wallace 1889; Andersson and Iwasa 1998 ). This phenomenon is often seen in birds, where males are the larger sex and have more ornate plummage than females.\n\nImage from ThoughtCo.\nQuestions\nWhy do you think this phenomenon happens?\nWhy are females generally more drab?\nIn which instance to you think females would be more ornate than males? Can you think of some examples?\nTo determine if sexual dimorphism exists in this tree swallow data were will get you to explore the average size measurements taken for each bird. Since birds were tracked using a band number, and birds may have been captured multiple times throughout their life, so we will observe the differences in average size measurement taken for each bird.\n\n\nShow code\n\n# look at the following variable to see how they differ by gender : wing_chord, tail, and weight\n# will will take the mean of these measurements by band_number and gender\nwing_chord <- aggregate(wing_chord ~ band_number + sex, banding, mean)\n# Boxplot of these trends based on sex\nggplot(wing_chord, aes(factor(sex), wing_chord, fill=sex)) + \n  geom_boxplot() +\n  scale_fill_manual(\"\", values=c(\"M\"= \"lightskyblue\", \"F\"= \"plum3\")) + \n  xlab('') +\n  ylab('Wing Chord Length (mm)') +\n  ggtitle(\"Wing Chord Length vs. Sex\")\n\n\n\nNice job! It looks like there is a difference between males and females in terms of wing chord measurements. Before moving forward, try measuring tail length and weight on your own. You’ll see we have included what your graphs should look like below for both tail and weight means by sex.\nHint Look at the example we just ran using the aggregate function first, then plot with ggplot.\n\n\nShow code\n\n# Lets go ahead and try calculating the mean tail length and weight by sex and band number and graph boxplots of these values:\n#### these are the answers ###\ntail <- aggregate(tail ~ band_number + sex, banding, mean)\nweight <- aggregate(weight ~ band_number + sex, banding, mean)\nggplot(tail, aes(factor(sex), tail, fill=sex)) + \n  geom_boxplot() +\n  scale_fill_manual(\"\", values=c(\"M\"= \"lightskyblue\", \"F\"= \"plum3\")) + \n  xlab('') +\n  ylab('Tail Length (mm)') +\n  ggtitle(\"Tail Length vs. Sex\")\n\n\nShow code\n\nggplot(weight, aes(factor(sex), weight, fill=sex)) + \n  geom_boxplot() +\n  scale_fill_manual(\"\", values=c(\"M\"= \"lightskyblue\", \"F\"= \"plum3\")) + \n  xlab('') +\n  ylab('Weight (g)') +\n  ggtitle(\"Bird Weight vs. Sex\")\n\n\n\nNow, to get a sense of how much the wind chord length, tail length, and weight differs between male (M) and female (F) tree swallows lets find the mean value for each.\n\n\nShow code\n\n# can calculate the mean female and male wing flat length like this (using aggregate()) or could subset by sex and then calculate\nwing_chord.avg <- aggregate(wing_chord ~ sex, banding, mean)\nwing_chord.avg\n\n  sex wing_chord\n1   F   113.5844\n2   M   118.1836\n\nCalculate the tail and weight average on your own. Cross reference your calculations with the ones below.\n\n\nShow code\n\ntail.avg <- aggregate(tail ~ sex, banding, mean)\nweight.avg <- aggregate(weight ~ sex, banding, mean)\ntail.avg\n\n  sex     tail\n1   F 54.34467\n2   M 55.70160\n\nShow code\n\nweight.avg\n\n  sex   weight\n1   F 20.41623\n2   M 20.75646\n\nBefore we head to our next section, check out this ornate mating dance between males and female birds of paradise. Note the sexual dimorphism between the males and females!\n\n\n\n\n\n\n\nQuestions\nWhat is the average wing chord length, tail length, and weight of the male tree swallows?\nWhat is the average wing chord length, tail length, and weight of the female tree swallows?\nDo these findings suggest that there is some level of sexual dimorphism in tree swallows?\nWhat type of pressures could lead to sexual dimorphism in tree swallows?\n\n\nShow code\n\n# Answers\n\n# Male tree swallows:\n# average wing chord length = 118.18 mm\n# average tail length = 55.70 mm\n# average weight = 20.76 g\n\n# Female tree swallows:\n# average wing chord length = 113.58 mm\n# average tail length = 54.34 mm\n# average weight = 20.41 g\n\n\nAspects of Tree Swallow Life History\nHow and why do organisms evolve over time? How does natural selection, and other evolutionary forces, shape organisms over time so that they are more likely to survive and reproduce? These are some pretty big questions that Life History Theory tries to answer. Although we won’t dive into all aspects of life history with our Tree Swallow datasets, we will explore some possible connections including: trade-offs between clutch size and clutch number, whether or not bigger birds produce larger clutches, and if clutch sizes have changed over time.\nTrade-offs\nTrade-offs exist when “an increase in one life history trait (improving fitness) is coupled to a decrease in another life history trait (reducing fitness), so that the fitness benefit through increasing trait 1 is balanced against a fitness cost through decreasing trait 2” Fabian and Flatt, 2012. Traits can either be described as negative phenotypic, or genetic correlations between fitness components of individuals in a given population. Trade-offs are generally caused by limited resources, and competition for these resources, to one life history trait verses the other within an individual. For example, an organism might have a relatively short lifespan–but produce many offspring, or vice versa (think about mayflies vs. elephants for example).\nLife history trade-offs\nA negative genetic (or phenotypic) correlation, i.e. a trade-off, between reproduction (e.g., # of eggs produced) and adult survival, one of the most commonly found negative relationships between life history traits.\nThe so-called Y model of resource allocation trade-offs. In this example, a limited resource (e.g., a nutrient) is aquired and differentially (competitively) allocated (invtested) into physiological processes that affect survival at the expense of investment into reproductive functions (e.g., egg production, fecundity).\nA useful way of thinking about resource allocation trade-offs is to imagine the life history as being a finite pie.\n\n(Image from Fabian and Flatt 2012)\nTo visualize whether there may be a trade off between clutch size and the number of clutches in a nest lets visualize these factors in a box plot. The ‘nest’ dataset contains records of the clutch numbers found in nest boxes across Long Point dating back to 1987! Lets take a quick look at the dataset first to figure out what we need to plot.\n\n\nShow code\n\nhead(nest)\n\n  year nest_box clutch_number location nest_code clutch_size\n1 1987     MC02             2       MC MC1987M02           3\n2 1987     MC03             1       MC MC1987M03           5\n3 1987     MC04             1       MC MC1987M04           4\n4 1987     MC07             1       MC MC1987M07           5\n5 1987     MC08             1       MC MC1987M08           6\n6 1987     MC10             1       MC MC1987M10           5\n\nNext, we want to look at how clutch size (clutch_size) may vary between the first and second clutch (clutch_number).\n\n\nShow code\n\nggplot(nest, aes(factor(clutch_number), clutch_size)) + \n  geom_boxplot(outlier.colour=\"black\", outlier.size=0.5, position = position_dodge(preserve = \"single\")) +\n  xlab('Clutch Number') +\n  ylab('Clutch Size') +\n  ggtitle(\"Clutch Size vs. Clutch Number\") +\n  scale_y_continuous(breaks = seq(0, 13, by = 1)) +\n  theme(plot.title = element_text(hjust = 0.5))\n\n\n\nLets look at how we would calculate the average clutch size for clutch number 1 and 2.\n\n\nShow code\n\naggregate(clutch_size ~ clutch_number, nest, mean)\n\n\nQuestion\nWhat is the average clutch size for the first and second clutches?\nYou may have noticed that the second clutches are slightly smaller than the first clutches! However, in order to confirm that there is a statistically significant difference between the two clutch sizes you would need to complete some sort of statistical analysis (e.g a t-test).\nDo larger birds have bigger clutches?\nIs the size and weight of the bird at maturity related to the clutch size? Lets look at wing chord length, tail length, and bird weight to investigate this and lets separate our analysis my male and female birds\nFirst, lets find the mean wing chord length when grouped by year, nest_box, sex, clutch_number, clutch_size and band number.\n\n\nShow code\n\n# wing_chord\nbanding_nest.wing_chord <- aggregate(wing_chord ~ year + sex + nest_box + clutch_number + band_number + clutch_size, banding_nest, mean)\nhead(banding_nest.wing_chord)\n\n  year sex nest_box clutch_number band_number clutch_size wing_chord\n1 2010   F    PT11K             1    1831.384           2        121\n2 2010   M    PT11K             1    1881.064           2        125\n3 2012   M     MC01             2    2401.772           2        116\n4 2012   F     MC14             1    2401.772           2        118\n5 2012   F     MC59             1    2401.772           2        118\n6 2012   M     MC14             1    2401.779           2        119\n\nShow code\n\n# next, you need to double check your data are still in the right class\nstr(banding_nest.wing_chord)\n\n'data.frame':   947 obs. of  7 variables:\n $ year         : int  2010 2010 2012 2012 2012 2012 2011 2011 2012 2011 ...\n $ sex          : chr  \"F\" \"M\" \"M\" \"F\" ...\n $ nest_box     : chr  \"PT11K\" \"PT11K\" \"MC01\" \"MC14\" ...\n $ clutch_number: int  1 1 2 1 1 1 1 1 1 1 ...\n $ band_number  : num  1831 1881 2402 2402 2402 ...\n $ clutch_size  : int  2 2 2 2 2 2 3 3 3 3 ...\n $ wing_chord   : num  121 125 116 118 118 119 115 111 117 115 ...\n\nShow code\n\nbanding_nest.wing_chord$sex <- as.factor(banding_nest.wing_chord$sex)\nbanding_nest.wing_chord$nest_box <- as.factor(banding_nest.wing_chord$nest_box )\n\n\nLets see if we see any patterns between the number of eggs there are per clutch (clutch_size) and the weight or size of the parent tree swallow.\n\n\nShow code\n\nplot(clutch_size ~ wing_chord, banding_nest.wing_chord,\n     main=\"Clutch Size vs Parent Wing Chord Length\",\n     pch=20,\n     col=sex,\n     xlab=\"Wing Chord Length (mm)\", \n     ylab=\"Clutch Size\")\nlegend(\"topright\", legend= levels(banding_nest.wing_chord$sex),\n       col= 1:2, pch = 20, cex=0.9)\n\n\n\nNow, you look at tail and weight variables. Compare your results to the results below.\nHint Use similar code to the code above, but change the variables to reflect what you are intersted in looking at.\n\n\nShow code\n\n# tail\nbanding_nest.tail <- aggregate(tail ~ year + sex + nest_box + clutch_number + band_number + clutch_size, banding_nest, mean)\n# weight\nbanding_nest.weight <- aggregate(weight ~ year + sex + nest_box + clutch_number + band_number + clutch_size, banding_nest, mean)\n\n# next, you need to double check your data are still in the right class\nstr(banding_nest.tail)\n\n'data.frame':   947 obs. of  7 variables:\n $ year         : int  2010 2010 2012 2012 2012 2012 2011 2011 2012 2011 ...\n $ sex          : chr  \"F\" \"M\" \"M\" \"F\" ...\n $ nest_box     : chr  \"PT11K\" \"PT11K\" \"MC01\" \"MC14\" ...\n $ clutch_number: int  1 1 2 1 1 1 1 1 1 1 ...\n $ band_number  : num  1831 1881 2402 2402 2402 ...\n $ clutch_size  : int  2 2 2 2 2 2 3 3 3 3 ...\n $ tail         : num  52 48 55 52 58 60 55 57 60 55 ...\n\nShow code\n\nbanding_nest.tail$sex <- as.factor(banding_nest.tail$sex)\nbanding_nest.tail$nest_box <- as.factor(banding_nest.tail$nest_box )\n\nstr(banding_nest.weight)\n\n'data.frame':   947 obs. of  7 variables:\n $ year         : int  2010 2010 2012 2012 2012 2012 2011 2011 2012 2011 ...\n $ sex          : chr  \"F\" \"M\" \"M\" \"F\" ...\n $ nest_box     : chr  \"PT11K\" \"PT11K\" \"MC01\" \"MC14\" ...\n $ clutch_number: int  1 1 2 1 1 1 1 1 1 1 ...\n $ band_number  : num  1831 1881 2402 2402 2402 ...\n $ clutch_size  : int  2 2 2 2 2 2 3 3 3 3 ...\n $ weight       : num  21.2 22.8 19.3 20.9 21.5 ...\n\nShow code\n\nbanding_nest.weight$sex <- as.factor(banding_nest.weight$sex)\nbanding_nest.weight$nest_box <- as.factor(banding_nest.weight$nest_box )\n\n\nplot(clutch_size ~ tail, banding_nest.tail,\n     main=\"Clutch Size vs Parent Tail Length\",\n     pch=20,\n     col=sex,\n     xlab=\"Tail Length (mm)\", \n     ylab=\"Clutch Size\")\nlegend(\"topright\", legend= levels(banding_nest.tail$sex),\n       col= 1:2, pch = 20, cex=0.9)\n\n\nShow code\n\nplot(clutch_size ~ weight,banding_nest.weight,\n     main=\"Clutch size vs Parent Bird Weight\",\n     pch=20,\n     col=sex,\n     xlab=\"Weight (g)\", \n     ylab=\"Clutch Size\")\nlegend(\"topright\", legend= levels(banding_nest.weight$sex),\n       col= 1:2, pch = 20, cex=0.9)\n\n\n\nChanges through time\nCould bird communities be changing over time as a result of climate change or other environmental shifts? Lets observe if the average clutch size over time is changing. First we want to take the average clutch size that was sampled from all of the nest boxes each year.\n\n\nShow code\n\nnest.average <- aggregate(clutch_size ~ year, nest, mean)\n#Then, we'll run a linear regression to test the relationship between clutch size and year. \nlm_clutch_size <- summary(lm(clutch_size ~ year, data= nest.average))\nr2_0 <- lm_clutch_size$r.squared # for R-squared labels\nrlabel_0 <- bquote(italic(R)^2 == .(format(r2_0, digits = 3)))\nplot(clutch_size ~ year, data=nest.average,\n     main=\"Yearly Average Clutch Size over Time\",\n     pch=16,\n     xlab=\"Year\", \n     ylab=\"Yearly Average Clutch Size\",\n     cex.main=1.25, \n     cex.lab=1)\nabline(lm(clutch_size ~ year, data=nest.average))\ntext(2010, 6.2, rlabel_0)\n\n\n\nIt may appear that the average clutch size is declining overtime however when looking at the \\(R^2\\) value of this linear regression we can see that this relationship is not a strong one.\nTake-homes\nAfter going through these data you have now had the opportunity to learn a bit about tree swallows, and more specifically look at a ‘community’ of tree swallows found in Long Point, ON. This population appeared to show signs of sexual dimorphism, where the male swallows had longer wing chords and tails and were heavier. As well, we noticed that there appeared t be a trade off between clutch size and the number of clutched in a nest. An important thing to not is that these relationships were speculative and statistical analyses will be required to support these findings in this population.\nLastly, these data did not show trends of larger birds having more eggs and we observed no conclusive temporal trends of changes in birth rates over time. It is not uncommon that data is collected with certain hypotheses in mind and trend or relationships are ultimately not found to support these hypotheses!\n\n\n\n",
    "preview": "lessons/2022-04-07-sexual-dimorphism-and-sexual-selection/sexual-dimorphism-and-sexual-selection_files/figure-html5/unnamed-chunk-6-1.png",
    "last_modified": "2022-11-03T17:07:55-06:00",
    "input_file": {}
  },
  {
    "path": "lessons/2022-04-07-tree-swallow-dataset/",
    "title": "Getting familiar with R and the Tree Swallow Dataset",
    "description": "This is a tutorial to get you familiar with R and explore ecological concepts through a Tree Swallow nest productivity dataset. Please download the accompanying RMarkdown file and data to follow along with this tutorial in R.",
    "author": [
      {
        "name": "Elizabeth Houghton",
        "url": {}
      },
      {
        "name": "Kirsten Palmier",
        "url": {}
      }
    ],
    "date": "2022-04-07",
    "categories": [],
    "contents": "\n\nContents\nTutorial Learning Objectives\nTree Swallow Nest Productivity\nThe Point\nThe Sewage Lagoon\nMud Creek\n\nInstalling R\nOverview of R concepts\nImporting data and packages\nData Exploration\nSubsetting and conditional subsetting elements\nAppplying different functions to data\n\nMore data exploration\n\n\nDownload required RMarkdown file\n\n\nDownload required data\n\nTutorial Learning Objectives\nIn this tutorial you will learn how to:\nLearn to work with data within R studio\nUse simple commands in R (e.g., subsetting, changing class, aggregating data)\nGraph a simple bar chart\nGraph a time series\n\nObserve trends in figures\nTree Swallow Nest Productivity\nBefore we jump into the weeds, let’s get to know our dataset!\nThe Tree Swallow (Tachycineta bicolor) is one of the most common birds in eastern North America that normally nests in tree cavities excavated by other species like woodpeckers, but also readily accepts human made nest boxes. Based on this quality and their abundance, Birds Canada has monitored nest boxes of tree swallows around the Long Point Biosphere Reserve, Ontario, from 1974 to 2014. Each year, May through June, volunteer research assistants check nest box contents daily, and band the adults and their young. Nest-box records are available from about 300 boxes from 3-4 sites during this period. Data collected includes nest box observations, clutch initiation dates, clutch size and egg weight, nest success, weather, insect abundance, and banding data. This data set includes all data entry related to eggs, nests, nestlings, nest check observations, and banding data from 1977 to 2014. More information on this dataset can be found here.\nAdditionally, in 2021, this dataset was quality checked and made open access by Jonathan Diamond through a Data Rescue internship with the Living Data Project, an initiative through the Canadian Institute of Ecology and Evolution that rescues legacy datasets.\n\nThrough Bird Studies Canada, Long Point Bird Observatory monitored three nest box “colonies” of Tree Swallows at Long Point, two on the “mainland” near Port Rowan (at the Port Rowan sewage lagoons and adjacent to agricultural land at mudd creek) and the third at the tip of the Point.\n\nThe Point\nThis colony was established in its present location in 1969. The nest boxes are located about 1 km west of the Tip of the point and are arranged 24.4m apart in a grid of numbered (north-south) rows and lettered (east-west) columns. Each box is designated by its position, so box 10G is in row 10 and column G. At the present time the rows in use are 1-19 and the letters are D-K, but many positions are unfilled and there are a total of 64 boxes.\nThe Point colony area. Location of bird boxes outlined in black.The Sewage Lagoon\nThis colony was first established in 1977 and has since been expanded to a total of 77 boxes. The boxes are in two rows around the lagoon embankment, as well as across the street in a small cluster of 5 boxes.\nSewage Lagoon colony area. Location of bird boxes outlined in black.Mud Creek\nEstablished in 1987, the Mud Creek site is located 3.25 km north-northeast of Sewage Lagoon and contains 80 nest boxes. The habitat is an open, uncultivated field adjacent to a small woodlot.\nMud Creek colony area. Location of bird boxes outlined in black.Installing R\nTo navigate and complete the following tutorials you will be required to install R and we encourage you to install R Studio.\nR is a freely available software and the most recent version of R can be downloaded from: https://cran.r-project.org. After you have installed R, we encourage you to download R Studio as it provides a more user friendly interface to interact with R. R Studio Desktop is freely available from https://rstudio.com/products/rstudio/download/.\nThe final piece of software that is required for completing the practicals is rmarkdown. Rmarkdown documents weave together narrative text and code to produce formatted, fully reproducible outputs. If you are unfamiliar with rmarkdown, a short tutorial is available from https://rmarkdown.rstudio.com/articles_intro.html.\nOverview of R concepts\nIn this next section we are going to walk you through a few of the concepts you need to understand in order to work with data in R.\nImporting data and packages\nIn order to work with certain set of data in R, you must first pull them into the program.\n\n\nShow code\n\n# Before we can pull packages into R, you will first have to install them onto your computer. Run the following code to download the required packages (without the #s, you only need to install them once):\n\n# install.packages(\"dplyr\")\n# install.packages(\"ggplot2\")\n# install.packages(\"tidyr\")\n# install.packages(\"lubridate\")\n# install.packages(\"reshape\")\n# install.packages(\"readr\")\n\n# Now we can start running those packages by calling on them using the following code:\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(tidyr)\nlibrary(lubridate)\nlibrary(reshape)\nlibrary(readr)\n\n# And lastly, we need to pull the actual datasets into R\nbanding <- read.csv(\"TRES/banding_final.csv\") #this dataset set contains banding information\nnest <- read.csv(\"TRES/nest_final.csv\") #this dataset contains nest information\nnestling <- read.csv(\"TRES/nestling_final.csv\") #this dataset contains nestling information\n\n\nData Exploration\nLet’s do some data exploring! First, let’s see what is in the banding dataset. This will help give us a better idea of what we can look at.\n\n\nShow code\n\n# look into the first few rows of the banding dataset. You can do this using the head() function\nhead(banding) #where head() is the function and banding is the dataset\n\n  band_or_recapture band_number sex colour wing_chord wing_flat tail\n1                 R    1831.386   F    BLU        116       119   58\n2                 R    1881.065   F    BLU        115       119   54\n3                 R    2171.200   F    BLU        112       114   55\n4                 R    1881.064   M    BLU        123       124   60\n5                 B    2351.397   M    BLU        118       119   58\n6                 R    1881.042   M    BLU        123       125   56\n  p_9 weight       date nest_box age_code year\n1  89   22.0 2010-06-01     PT4G      ASY 2010\n2  90   19.6 2010-06-01     PT2F      ASY 2010\n3  88   21.5 2010-06-01    PT15G      ASY 2010\n4  96   21.1 2010-06-01     PT4G      AHY 2010\n5  92   22.1 2010-06-01    PT15G      AHY 2010\n6  97   20.5 2010-06-01     PT2F      AHY 2010\n\nYou can dig in deeper by using the summary() and str() functions\n\n\nShow code\n\n# summarise the banding dataset\nsummary(banding) \n\n band_or_recapture   band_number       sex           \n Length:1602        Min.   :1381   Length:1602       \n Class :character   1st Qu.:2312   Class :character  \n Mode  :character   Median :2351   Mode  :character  \n                    Mean   :2310                     \n                    3rd Qu.:2402                     \n                    Max.   :5212                     \n    colour            wing_chord      wing_flat          tail      \n Length:1602        Min.   :100.0   Min.   :102.0   Min.   :44.00  \n Class :character   1st Qu.:113.0   1st Qu.:115.0   1st Qu.:53.00  \n Mode  :character   Median :116.0   Median :118.0   Median :55.00  \n                    Mean   :115.7   Mean   :117.9   Mean   :54.98  \n                    3rd Qu.:118.0   3rd Qu.:121.0   3rd Qu.:57.00  \n                    Max.   :129.0   Max.   :130.0   Max.   :69.00  \n      p_9             weight          date          \n Min.   : 78.00   Min.   :16.50   Length:1602       \n 1st Qu.: 90.00   1st Qu.:19.80   Class :character  \n Median : 92.00   Median :20.50   Mode  :character  \n Mean   : 92.39   Mean   :20.58                     \n 3rd Qu.: 95.00   3rd Qu.:21.40                     \n Max.   :109.00   Max.   :25.90                     \n   nest_box           age_code              year     \n Length:1602        Length:1602        Min.   :2010  \n Class :character   Class :character   1st Qu.:2011  \n Mode  :character   Mode  :character   Median :2012  \n                                       Mean   :2012  \n                                       3rd Qu.:2013  \n                                       Max.   :2014  \n\nShow code\n\n# check the structure of the banding dataset\nstr(banding) #This is important, because the variables need to match what they are being used for (i.e., to calculate mean, the variable must be numeric, not a character type)\n\n'data.frame':   1602 obs. of  13 variables:\n $ band_or_recapture: chr  \"R\" \"R\" \"R\" \"R\" ...\n $ band_number      : num  1831 1881 2171 1881 2351 ...\n $ sex              : chr  \"F\" \"F\" \"F\" \"M\" ...\n $ colour           : chr  \"BLU\" \"BLU\" \"BLU\" \"BLU\" ...\n $ wing_chord       : num  116 115 112 123 118 123 110 111 112 117 ...\n $ wing_flat        : num  119 119 114 124 119 125 112 113 114 118 ...\n $ tail             : num  58 54 55 60 58 56 55 52 55 54 ...\n $ p_9              : int  89 90 88 96 92 97 89 87 90 92 ...\n $ weight           : num  22 19.6 21.5 21.1 22.1 20.5 20 21.6 19.8 20.5 ...\n $ date             : chr  \"2010-06-01\" \"2010-06-01\" \"2010-06-01\" \"2010-06-01\" ...\n $ nest_box         : chr  \"PT4G\" \"PT2F\" \"PT15G\" \"PT4G\" ...\n $ age_code         : chr  \"ASY\" \"ASY\" \"ASY\" \"AHY\" ...\n $ year             : int  2010 2010 2010 2010 2010 2010 2010 2010 2010 2010 ...\n\nSubsetting and conditional subsetting elements\nThe [ operator can be used to select multiple elements of an object: The [ operator can be used to extract specific rows or columns from a data set where DATA[row, column]\nThe $ operator can be used to extract elements by the element’s name\nLet’s try pulling the first row from the banding dataset\n\n\nShow code\n\nbanding[c(1),] #notice how there is a comma after c(1)? This specifies we want to subset the first row!\n\n  band_or_recapture band_number sex colour wing_chord wing_flat tail\n1                 R    1831.386   F    BLU        116       119   58\n  p_9 weight       date nest_box age_code year\n1  89     22 2010-06-01     PT4G      ASY 2010\n\nLet’s make a mini version of our banding dataset, and call it banding2, by subsetting rows 1 through 50 and columns 2, and 5 through 13\n\n\nShow code\n\nbanding2 <- banding[c(1:50), c(2,5:13)] #where banding2 is our new dataframe containing data from rows 1:50 and columns 1 and 5:13 from the banding dataset. \n\n\nAppplying different functions to data\nYou can also run functions on different variables of your datasets which you can select by using $. You can wrap these in different functions to calculate various things. For example, let’s try calculating the mean weight from our banding2 dataset and assign it to a new variable called mean_weight.\n\n\nShow code\n\n# This line of code creates a column in banding2 called mean_weight and assigns the mean of the column weight from banding2 to it\nbanding2$mean_weight <- mean(banding2$weight)\n\n# Let's take a quick look at banding2 now\nhead(banding2)\n\n  band_number wing_chord wing_flat tail p_9 weight       date\n1    1831.386        116       119   58  89   22.0 2010-06-01\n2    1881.065        115       119   54  90   19.6 2010-06-01\n3    2171.200        112       114   55  88   21.5 2010-06-01\n4    1881.064        123       124   60  96   21.1 2010-06-01\n5    2351.397        118       119   58  92   22.1 2010-06-01\n6    1881.042        123       125   56  97   20.5 2010-06-01\n  nest_box age_code year mean_weight\n1     PT4G      ASY 2010      20.815\n2     PT2F      ASY 2010      20.815\n3    PT15G      ASY 2010      20.815\n4     PT4G      AHY 2010      20.815\n5    PT15G      AHY 2010      20.815\n6     PT2F      AHY 2010      20.815\n\nWhat if we wanted to calculate the mean weight of the Tree Swallows as recorded in the banding dataset based on their sex? We could do that by grouping how we calculate the mean by using the aggregate() function. The aggregate function can work to group data as follows:\naggregate(y ~ a + b + c + …, df, mean)\nWhere y is the variable you want to take the mean of, a, b, c… are variables that you are interested in grouping these means by, df is the dataframe that you are pulling these data from, and mean is instructing the command that the summary statistic you want to complete is the mean. Lets try it out!\n\n\nShow code\n\n# If we wanted to look at the average weight of female and male birds in the banding dataset we would use aggregate() like this\nbanding3 <- aggregate(weight ~ sex, banding, mean) # banding3 is where these values will be stored\nbanding3\n\n  sex   weight\n1   F 20.41623\n2   M 20.75646\n\nTry coding\n\n\n# Try looking at the mean weight of Tree Swallows grouped by sex and year, call this new data frame 'banding4'\n\n\nNow that you have a good handle on basic subsetting, let’s dig a little deeper and use logical operators to further subset your data.\nWhat if you want to focus in on looking at just one sex? How would you extract only data related to female birds from these data? One way to do this would be to use the subset() function and logical operators to separate out the data of interests from your data set.\n< (less than)\n<= (less than or equal to)\n> (greater than)\n>= (greater than or equal to)\n== (exactly equal to)\n!= (not equal to)\nx | y (x OR y)\nx & y (x AND y)\nIt is important to note that certain logical operators only work on certain classes of data. For example, if we looked at sex (class of factor) we can’t subset values that are less than or equal to Female (this would make no sense since Female is not a number or integer!).\n\n\nShow code\n\n# pull out female birds from your banding dataset \nhead(subset(banding, sex == \"F\")) #the head function limits the amount of rows displayed\n\n  band_or_recapture band_number sex colour wing_chord wing_flat tail\n1                 R    1831.386   F    BLU        116       119   58\n2                 R    1881.065   F    BLU        115       119   54\n3                 R    2171.200   F    BLU        112       114   55\n7                 B    2351.397   F    BLU        110       112   55\n8                 R    2321.083   F    BLU        111       113   52\n9                 B    2351.397   F    INT        112       114   55\n  p_9 weight       date nest_box age_code year\n1  89   22.0 2010-06-01     PT4G      ASY 2010\n2  90   19.6 2010-06-01     PT2F      ASY 2010\n3  88   21.5 2010-06-01    PT15G      ASY 2010\n7  89   20.0 2012-06-01     PT1J      ASY 2010\n8  87   21.6 2012-06-01     PT4J      ASY 2010\n9  90   19.8 2012-06-01     PT8K      AHY 2010\n\nRemember, if you want to store this in a df to look at later I would have to assign it to a vector called “female_birds”\n\n\n\nNotice how the vector female_birds changed from 853 observations to 495 observations?\nTry coding\n\n\n# Try to subset a dataframe called 'male_birds' that consists of male birds with the chord_length less than or equal to 150\n\n\nQuestion\nHow many male birds have a chord_length less than or equal to 150?\n\n\nShow code\n\n# Answer = 749\n\n\nTry coding\n\n\n# Try to subset a dataframe called 'male_birds' that consists of male birds with the chord_length less than or equal to 150\n\n\nHaving fun yet? I know I am! Let’s look at the basics of a plot. This image was pulled from here.\n\nNow that we are refreshed in the elements of a graph, let’s graph a relatively simple bar plot with our banding data frame.\nLet’s look at the number of banded and recaptured birds there were each year.\nWe will use ggplot to visualize the data.\n\n\nShow code\n\n# First, we will create a table base on the band_or_recapture column and the year column\ntbl1 <- with(banding, table(band_or_recapture, year))  \ntbl1\n\n                 year\nband_or_recapture 2010 2011 2012 2013 2014\n                B   62  125  118   68  101\n                R  179  264  292  139  254\n\nShow code\n\n# Next, we can plot our table \nggplot(as.data.frame(tbl1), aes(x =factor(year), y = Freq, fill = band_or_recapture))+ #we've changed the format of our table to a dataframe so we can plot it. \n  geom_col(position = 'dodge') #geom_column is the type of graph, and position='dodge' allows us to visualize the barplots side by side.\n\n\n\nCongrats! You’ve made your first graph. We can change elements of the graph by adding labels and titles, changing the theme and colours of our bars.\n\n\nShow code\n\n# Add labels and change colours\nggplot(as.data.frame(tbl1), aes(x =factor(year), y = Freq, fill = band_or_recapture))+ \n  geom_col(position = 'dodge') +\n  xlab('Year') +\n  ylab('Number of birds') +\n  scale_fill_manual(name= \"Banded or Recaptured\", values=c(\"B\" = 'lightskyblue', \"R\" = 'plum3'))+\n  ggtitle(\"Birds banded or recaptured from 2010-2014\") +\n  theme_classic() #gets rid of grey background\n\n\n\n(If you’d like to learn more about ggplot, this tutorial is great!)\nQuestion\nWhat trends do you see?\nWhy do you think there are more recaptured birds compared to banded birds every year?\nMore data exploration\nNext, let’s change gears and take a quick look at the egg nestling dataset.\n\n\n# Lets get a sense of what columns are present in our dataset\nhead(nestling)\n\n  nest_box band_number year clutch_number day_1_weight day_12_weight\n1     PT7F  2351.39972 2014            NA         <NA>          <NA>\n2     PT7F  2351.39973 2014            NA         <NA>          <NA>\n3     PT7F  2351.39974 2014            NA         <NA>          <NA>\n4    PT14G  2351.39975 2014            NA         <NA>          <NA>\n5    PT14G  2351.39976 2014            NA         <NA>          <NA>\n6    PT14G  2351.39977 2014            NA         <NA>          <NA>\n  site nest_code\n1 <NA>      <NA>\n2 <NA>      <NA>\n3 <NA>      <NA>\n4 <NA>      <NA>\n5 <NA>      <NA>\n6 <NA>      <NA>\n\n# Lets look at the structure of our new dataframe, nestling:\n\nstr(nestling)\n\n'data.frame':   32536 obs. of  8 variables:\n $ nest_box     : chr  \"PT7F\" \"PT7F\" \"PT7F\" \"PT14G\" ...\n $ band_number  : chr  \"2351.39972\" \"2351.39973\" \"2351.39974\" \"2351.39975\" ...\n $ year         : int  2014 2014 2014 2014 2014 2014 2014 2014 2014 2014 ...\n $ clutch_number: int  NA NA NA NA NA NA NA NA NA NA ...\n $ day_1_weight : chr  NA NA NA NA ...\n $ day_12_weight: chr  NA NA NA NA ...\n $ site         : chr  NA NA NA NA ...\n $ nest_code    : chr  NA NA NA NA ...\n\n\n\nShow code\n\n#We don't have entries for all rows of our dataframe. They will appear as **NA**s. We see the weight is a character vector. Let's change that to numeric using the as.numeric() function. Let's start #with the **day_1_weight** column:\n\nnestling$day_1_weight <- as.numeric(nestling$day_1_weight)\n\n# Now the **day_12_weight** column:\n\nnestling$day_12_weight <- as.numeric(nestling$day_12_weight)\n\n\n# Lets look at the structure of our new dataframe, nestling again:\nstr(nestling)\n\n'data.frame':   32536 obs. of  8 variables:\n $ nest_box     : chr  \"PT7F\" \"PT7F\" \"PT7F\" \"PT14G\" ...\n $ band_number  : chr  \"2351.39972\" \"2351.39973\" \"2351.39974\" \"2351.39975\" ...\n $ year         : int  2014 2014 2014 2014 2014 2014 2014 2014 2014 2014 ...\n $ clutch_number: int  NA NA NA NA NA NA NA NA NA NA ...\n $ day_1_weight : num  NA NA NA NA NA NA NA NA NA NA ...\n $ day_12_weight: num  NA NA NA NA NA NA NA NA NA NA ...\n $ site         : chr  NA NA NA NA ...\n $ nest_code    : chr  NA NA NA NA ...\n\nWe want to summarize our data so we can calculate the mean of each weight by year\n\n\nnestling_weight <- nestling %>%\n  group_by(year) %>% #groups weights by year\n  filter(is.na(day_1_weight) == F,  #gets rid of NAs\n         is.na(day_12_weight) == F) %>%\n  summarise(mean_day_1 = mean(day_1_weight), #calculates the mean of each year \n            mean_day_12 = mean(day_12_weight)) \n\n# We can convert the mean weights to long format, which gives us a weight column,\n# with both weight variables, and a total column which contains the weights\n\nnestling_weight2 <- gather(nestling_weight, weight, total, mean_day_1:mean_day_12)\n\n#Look at the structure of our new dataframe, nestling_weight2\n\nstr(nestling_weight2)\n\ntibble [74 × 3] (S3: tbl_df/tbl/data.frame)\n $ year  : int [1:74] 1977 1978 1979 1980 1981 1982 1983 1984 1985 1986 ...\n $ weight: chr [1:74] \"mean_day_1\" \"mean_day_1\" \"mean_day_1\" \"mean_day_1\" ...\n $ total : num [1:74] 21.83 1.76 1.69 2.18 2.03 ...\n\nOk, now we can plot it using ggplot.\n\n\nShow code\n\nggplot(data = nestling_weight2,\n       aes(x = year, y = total, group = weight)) + #Year goes on the x axis, weight(totals) on the y axis, and we group by each the means of each day\n  geom_line(aes(linetype = weight, color = weight)) + #aes changes the aesthetics of the lines so that linetype and colors are different from each other\n  theme_classic()\n\n\n\nHmm, looks like something is not quite right in our plot. There seems to be an outlier within the data. If we assume this is a data entry error, we can get rid of it. Since it looks like an earlier date, let’s just look at the first few rows (n = 10) and see if we can find the outlier.\n\n\nShow code\n\nhead(nestling_weight2, n = 10)\n\n# A tibble: 10 × 3\n    year weight     total\n   <int> <chr>      <dbl>\n 1  1977 mean_day_1 21.8 \n 2  1978 mean_day_1  1.76\n 3  1979 mean_day_1  1.69\n 4  1980 mean_day_1  2.18\n 5  1981 mean_day_1  2.03\n 6  1982 mean_day_1  2.54\n 7  1983 mean_day_1  1.90\n 8  1984 mean_day_1  1.57\n 9  1985 mean_day_1  1.68\n10  1986 mean_day_1  1.59\n\nAh ha! The first row contains a mean_day_1 weight of 21.8. This is likely an error. Let’s get rid of it and then re-plot it.\n\n\nShow code\n\nnestling_weight2 <- nestling_weight2[-1,]\nggplot(data = nestling_weight2,\n       aes(x = year, y = total, group = weight)) + #Year goes on the x axis, weight(totals) on the y axis, and we group by each the means of each day\n  geom_line(aes(linetype = weight, color = weight)) + #aes changes the aesthetics of the lines so that linetype and colors are different from each other\n  theme_classic()\n\n\n\nMuch better!\nQuestions\nDo you see any trends within this datasets over time?\nWhat other variables could you look at within the nestling dataset?\nCheck out this cool video on nesting Tree Swallows!\n\n\n\n\n\n\n\n\n\n\n",
    "preview": "lessons/2022-04-07-tree-swallow-dataset/tree-swallow-dataset_files/figure-html5/unnamed-chunk-16-1.png",
    "last_modified": "2022-11-03T17:05:47-06:00",
>>>>>>> 46b1ed1d4b2cdbe43886429d176846bec8b0173a
    "input_file": {}
  }
]
